DIGEST ff7d63b84cd9814ac37d2b9274c799c0
FPLF.Equiv
R141:144 PLF.Maps <> <> lib
R171:179 Coq.Bool.Bool <> <> lib
R206:216 Coq.Arith.Arith <> <> lib
R243:250 Coq.Init.Nat <> <> lib
R277:290 Coq.Arith.PeanoNat <> <> lib
R300:302 Coq.Arith.PeanoNat Nat <> mod
R329:339 Coq.Arith.EqNat <> <> lib
R366:368 Coq.micromega.Lia <> <> lib
R395:404 Coq.Lists.List <> <> lib
R414:426 Coq.Lists.List ListNotations <> mod
R453:482 Coq.Logic.FunctionalExtensionality <> <> lib
R509:511 PLF.Imp <> <> lib
def 4534:4539 <> aequiv
R4550:4553 PLF.Imp <> aexp ind
binder 4542:4543 <> a1:1
binder 4545:4546 <> a2:2
R4581:4585 PLF.Imp <> state def
binder 4576:4577 <> st:3
R4604:4606 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4593:4597 PLF.Imp <> aeval def
R4599:4600 PLF.Equiv <> st:3 var
R4602:4603 PLF.Equiv <> a1:1 var
R4607:4611 PLF.Imp <> aeval def
R4613:4614 PLF.Equiv <> st:3 var
R4616:4617 PLF.Equiv <> a2:2 var
def 4632:4637 <> bequiv
R4648:4651 PLF.Imp <> bexp ind
binder 4640:4641 <> b1:4
binder 4643:4644 <> b2:5
R4679:4683 PLF.Imp <> state def
binder 4674:4675 <> st:6
R4702:4704 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4691:4695 PLF.Imp <> beval def
R4697:4698 PLF.Equiv <> st:6 var
R4700:4701 PLF.Equiv <> b1:4 var
R4705:4709 PLF.Imp <> beval def
R4711:4712 PLF.Equiv <> st:6 var
R4714:4715 PLF.Equiv <> b2:5 var
prf 4824:4837 <> aequiv_example
R4842:4847 PLF.Equiv <> aequiv def
R4853:4855 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4861:4863 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4857:4859 PLF.Imp <> :com::x_'-'_x not
R4856:4856 PLF.Imp <> X def
R4860:4860 PLF.Imp <> X def
R4869:4871 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4873:4875 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
prf 4924:4937 <> bequiv_example
R4942:4947 PLF.Equiv <> bequiv def
R4953:4955 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4965:4967 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4961:4963 PLF.Imp <> :com::x_'='_x not
R4957:4959 PLF.Imp <> :com::x_'-'_x not
R4956:4956 PLF.Imp <> X def
R4960:4960 PLF.Imp <> X def
R4973:4975 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4980:4982 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R4976:4979 PLF.Imp <> :com::'true' not
R5012:5016 PLF.Imp <> beval def
R5029:5042 PLF.Equiv <> aequiv_example thm
R5029:5042 PLF.Equiv <> aequiv_example thm
R5029:5042 PLF.Equiv <> aequiv_example thm
def 5740:5745 <> cequiv
R5756:5758 PLF.Imp <> com ind
binder 5748:5749 <> c1:7
binder 5751:5752 <> c2:8
R5790:5794 PLF.Imp <> state def
binder 5781:5782 <> st:9
binder 5784:5786 <> st':10
R5802:5802 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5819:5825 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5842:5842 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5805:5808 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5811:5815 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5809:5810 PLF.Equiv <> c1:7 var
R5803:5804 PLF.Equiv <> st:9 var
R5816:5818 PLF.Equiv <> st':10 var
R5828:5831 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5834:5838 PLF.Imp <> :::x_'=['_x_']=>'_x not
R5832:5833 PLF.Equiv <> c2:8 var
R5826:5827 PLF.Equiv <> st:9 var
R5839:5841 PLF.Equiv <> st':10 var
def 6089:6095 <> refines
R6106:6108 PLF.Imp <> com ind
binder 6098:6099 <> c1:11
binder 6101:6102 <> c2:12
R6140:6144 PLF.Imp <> state def
binder 6131:6132 <> st:13
binder 6134:6136 <> st':14
R6152:6152 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6169:6174 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6191:6191 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6155:6158 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6161:6165 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6159:6160 PLF.Equiv <> c1:11 var
R6153:6154 PLF.Equiv <> st:13 var
R6166:6168 PLF.Equiv <> st':14 var
R6177:6180 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6183:6187 PLF.Imp <> :::x_'=['_x_']=>'_x not
R6181:6182 PLF.Equiv <> c2:12 var
R6175:6176 PLF.Equiv <> st:13 var
R6188:6190 PLF.Equiv <> st':14 var
prf 6425:6433 <> skip_left
binder 6444:6444 <> c:15
R6449:6454 PLF.Equiv <> cequiv def
R6460:6462 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R6470:6472 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R6467:6468 PLF.Imp <> :com:com_scope:x_';'_x not
R6463:6466 PLF.Imp <> :com:com_scope:'skip' not
R6469:6469 PLF.Equiv <> c:15 var
R6478:6478 PLF.Equiv <> c:15 var
R6651:6655 PLF.Imp <> E_Seq constr
R6651:6655 PLF.Imp <> E_Seq constr
R6678:6683 PLF.Imp <> E_Skip constr
R6678:6683 PLF.Imp <> E_Skip constr
prf 6857:6866 <> skip_right
binder 6877:6877 <> c:16
R6882:6887 PLF.Equiv <> cequiv def
R6893:6895 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R6904:6906 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R6897:6899 PLF.Imp <> :com:com_scope:x_';'_x not
R6896:6896 PLF.Equiv <> c:16 var
R6900:6903 PLF.Imp <> :com:com_scope:'skip' not
R6912:6912 PLF.Equiv <> c:16 var
R6931:6936 PLF.Equiv <> cequiv def
R7029:7033 PLF.Imp <> E_Seq constr
R7029:7033 PLF.Imp <> E_Seq constr
R7075:7080 PLF.Imp <> E_Skip constr
R7075:7080 PLF.Imp <> E_Skip constr
prf 7189:7202 <> if_true_simple
binder 7213:7214 <> c1:17
binder 7216:7217 <> c2:18
R7222:7227 PLF.Equiv <> cequiv def
R7233:7235 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R7263:7265 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R7236:7238 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R7243:7248 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R7251:7256 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R7259:7262 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R7239:7242 PLF.Imp <> :com::'true' not
R7249:7250 PLF.Equiv <> c1:17 var
R7257:7258 PLF.Equiv <> c2:18 var
R7271:7272 PLF.Equiv <> c1:17 var
R7415:7422 PLF.Imp <> E_IfTrue constr
R7415:7422 PLF.Imp <> E_IfTrue constr
prf 9365:9371 <> if_true
binder 9381:9381 <> b:19
binder 9383:9384 <> c1:20
binder 9386:9387 <> c2:21
R9409:9415 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9392:9397 PLF.Equiv <> bequiv def
R9399:9399 PLF.Equiv <> b:19 var
R9401:9402 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9407:9408 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9403:9406 PLF.Imp <> :com::'true' not
R9416:9421 PLF.Equiv <> cequiv def
R9427:9429 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9454:9456 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9430:9432 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9434:9439 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9442:9447 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9450:9453 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9433:9433 PLF.Equiv <> b:19 var
R9440:9441 PLF.Equiv <> c1:20 var
R9448:9449 PLF.Equiv <> c2:21 var
R9462:9463 PLF.Equiv <> c1:20 var
R9662:9667 PLF.Equiv <> bequiv def
R9756:9763 PLF.Imp <> E_IfTrue constr
R9756:9763 PLF.Imp <> E_IfTrue constr
R9793:9798 PLF.Equiv <> bequiv def
prf 9918:9925 <> if_false
binder 9936:9936 <> b:22
binder 9938:9939 <> c1:23
binder 9941:9942 <> c2:24
R9965:9970 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9947:9952 PLF.Equiv <> bequiv def
R9954:9954 PLF.Equiv <> b:22 var
R9956:9957 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9963:9964 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9958:9962 PLF.Imp <> :com::'false' not
R9971:9976 PLF.Equiv <> cequiv def
R9982:9984 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10009:10011 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R9985:9987 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9989:9994 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9997:10002 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10005:10008 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R9988:9988 PLF.Equiv <> b:22 var
R9995:9996 PLF.Equiv <> c1:23 var
R10003:10004 PLF.Equiv <> c2:24 var
R10017:10018 PLF.Equiv <> c2:24 var
R10101:10106 PLF.Equiv <> bequiv def
R10188:10196 PLF.Imp <> E_IfFalse constr
R10188:10196 PLF.Imp <> E_IfFalse constr
R10212:10217 PLF.Equiv <> bequiv def
prf 10439:10454 <> swap_if_branches
binder 10465:10465 <> b:25
binder 10467:10468 <> c1:26
binder 10470:10471 <> c2:27
R10476:10481 PLF.Equiv <> cequiv def
R10487:10489 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10514:10516 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10490:10492 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10494:10499 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10502:10507 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10510:10513 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10493:10493 PLF.Equiv <> b:25 var
R10500:10501 PLF.Equiv <> c1:26 var
R10508:10509 PLF.Equiv <> c2:27 var
R10522:10524 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10551:10553 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R10525:10527 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10531:10536 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10539:10544 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10547:10550 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R10528:10529 PLF.Imp <> :com::'~'_x not
R10530:10530 PLF.Equiv <> b:25 var
R10537:10538 PLF.Equiv <> c2:27 var
R10545:10546 PLF.Equiv <> c1:26 var
R10634:10642 PLF.Imp <> E_IfFalse constr
R10634:10642 PLF.Imp <> E_IfFalse constr
R10717:10724 PLF.Imp <> E_IfTrue constr
R10717:10724 PLF.Imp <> E_IfTrue constr
R10823:10831 PLF.Imp <> E_IfFalse constr
R10823:10831 PLF.Imp <> E_IfFalse constr
R10863:10875 Coq.Bool.Bool <> negb_true_iff thm
R10863:10875 Coq.Bool.Bool <> negb_true_iff thm
R10863:10875 Coq.Bool.Bool <> negb_true_iff thm
R10928:10935 PLF.Imp <> E_IfTrue constr
R10928:10935 PLF.Imp <> E_IfTrue constr
R10967:10980 Coq.Bool.Bool <> negb_false_iff thm
R10967:10980 Coq.Bool.Bool <> negb_false_iff thm
R10967:10980 Coq.Bool.Bool <> negb_false_iff thm
prf 11368:11378 <> while_false
binder 11389:11389 <> b:28
binder 11391:11391 <> c:29
R11414:11419 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11396:11401 PLF.Equiv <> bequiv def
R11403:11403 PLF.Equiv <> b:28 var
R11405:11406 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11412:11413 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11407:11411 PLF.Imp <> :com::'false' not
R11420:11425 PLF.Equiv <> cequiv def
R11431:11433 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11450:11452 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11434:11439 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R11441:11444 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R11446:11449 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R11440:11440 PLF.Equiv <> b:28 var
R11445:11445 PLF.Equiv <> c:29 var
R11458:11460 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11465:11467 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R11461:11464 PLF.Imp <> :com:com_scope:'skip' not
R11585:11590 PLF.Imp <> E_Skip constr
R11585:11590 PLF.Imp <> E_Skip constr
R11702:11713 PLF.Imp <> E_WhileFalse constr
R11702:11713 PLF.Imp <> E_WhileFalse constr
prf 13097:13114 <> while_true_nonterm
binder 13125:13125 <> b:30
binder 13127:13127 <> c:31
binder 13129:13130 <> st:32
binder 13132:13134 <> st':33
R13156:13161 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13139:13144 PLF.Equiv <> bequiv def
R13146:13146 PLF.Equiv <> b:30 var
R13148:13149 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13154:13155 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13150:13153 PLF.Imp <> :com::'true' not
R13162:13164 Coq.Init.Logic <> ::type_scope:'~'_x not
R13195:13196 Coq.Init.Logic <> ::type_scope:'~'_x not
R13167:13170 PLF.Imp <> :::x_'=['_x_']=>'_x not
R13187:13191 PLF.Imp <> :::x_'=['_x_']=>'_x not
R13171:13176 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13178:13181 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13183:13186 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13177:13177 PLF.Equiv <> b:30 var
R13182:13182 PLF.Equiv <> c:31 var
R13165:13166 PLF.Equiv <> st:32 var
R13192:13194 PLF.Equiv <> st':33 var
R13277:13279 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13296:13298 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13280:13285 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13287:13290 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13292:13295 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13277:13279 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13296:13298 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R13280:13285 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13287:13290 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13292:13295 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R13573:13578 PLF.Equiv <> bequiv def
prf 14129:14138 <> while_true
binder 14149:14149 <> b:34
binder 14151:14151 <> c:35
R14173:14179 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14156:14161 PLF.Equiv <> bequiv def
R14163:14163 PLF.Equiv <> b:34 var
R14165:14166 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14171:14172 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14167:14170 PLF.Imp <> :com::'true' not
R14180:14185 PLF.Equiv <> cequiv def
R14191:14193 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14210:14212 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14194:14199 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14201:14204 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14206:14209 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14200:14200 PLF.Equiv <> b:34 var
R14205:14205 PLF.Equiv <> c:35 var
R14218:14220 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14243:14245 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14221:14226 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14231:14234 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14239:14242 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14227:14230 PLF.Imp <> :com::'true' not
R14235:14238 PLF.Imp <> :com:com_scope:'skip' not
R14299:14316 PLF.Equiv <> while_true_nonterm thm
R14299:14316 PLF.Equiv <> while_true_nonterm thm
R14371:14388 PLF.Equiv <> while_true_nonterm thm
R14371:14388 PLF.Equiv <> while_true_nonterm thm
R14428:14433 PLF.Equiv <> bequiv def
prf 14745:14758 <> loop_unrolling
binder 14769:14769 <> b:36
binder 14771:14771 <> c:37
R14776:14781 PLF.Equiv <> cequiv def
R14787:14789 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14806:14808 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14790:14795 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14797:14800 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14802:14805 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14796:14796 PLF.Equiv <> b:36 var
R14801:14801 PLF.Equiv <> c:37 var
R14814:14816 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14861:14863 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R14817:14819 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R14821:14826 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R14847:14852 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R14857:14860 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R14820:14820 PLF.Equiv <> b:36 var
R14828:14830 PLF.Imp <> :com:com_scope:x_';'_x not
R14827:14827 PLF.Equiv <> c:37 var
R14831:14836 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14838:14841 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14843:14846 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R14837:14837 PLF.Equiv <> b:36 var
R14842:14842 PLF.Equiv <> c:37 var
R14853:14856 PLF.Imp <> :com:com_scope:'skip' not
R15019:15027 PLF.Imp <> E_IfFalse constr
R15019:15027 PLF.Imp <> E_IfFalse constr
R15064:15069 PLF.Imp <> E_Skip constr
R15064:15069 PLF.Imp <> E_Skip constr
R15106:15113 PLF.Imp <> E_IfTrue constr
R15106:15113 PLF.Imp <> E_IfTrue constr
R15150:15154 PLF.Imp <> E_Seq constr
R15150:15154 PLF.Imp <> E_Seq constr
R15322:15332 PLF.Imp <> E_WhileTrue constr
R15322:15332 PLF.Imp <> E_WhileTrue constr
R15476:15487 PLF.Imp <> E_WhileFalse constr
R15476:15487 PLF.Imp <> E_WhileFalse constr
prf 15579:15587 <> seq_assoc
binder 15598:15599 <> c1:38
binder 15601:15602 <> c2:39
binder 15604:15605 <> c3:40
R15610:15615 PLF.Equiv <> cequiv def
R15617:15618 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15629:15630 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15626:15626 PLF.Imp <> :com:com_scope:x_';'_x not
R15619:15619 PLF.Imp <> :com:com_scope:'('_x_')' not
R15625:15625 PLF.Imp <> :com:com_scope:'('_x_')' not
R15622:15622 PLF.Imp <> :com:com_scope:x_';'_x not
R15620:15621 PLF.Equiv <> c1:38 var
R15623:15624 PLF.Equiv <> c2:39 var
R15627:15628 PLF.Equiv <> c3:40 var
R15632:15633 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15644:15645 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15636:15636 PLF.Imp <> :com:com_scope:x_';'_x not
R15634:15635 PLF.Equiv <> c1:38 var
R15637:15637 PLF.Imp <> :com:com_scope:'('_x_')' not
R15643:15643 PLF.Imp <> :com:com_scope:'('_x_')' not
R15640:15640 PLF.Imp <> :com:com_scope:x_';'_x not
R15638:15639 PLF.Equiv <> c2:39 var
R15641:15642 PLF.Equiv <> c3:40 var
prf 15907:15925 <> identity_assignment
binder 15936:15936 <> x:41
R15941:15946 PLF.Equiv <> cequiv def
R15952:15954 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15961:15963 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15956:15959 PLF.Imp <> :com:com_scope:x_':='_x not
R15955:15955 PLF.Equiv <> x:41 var
R15960:15960 PLF.Equiv <> x:41 var
R15969:15971 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15976:15978 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R15972:15975 PLF.Imp <> :com:com_scope:'skip' not
R16070:16082 PLF.Maps <> t_update_same prfax
R16070:16082 PLF.Maps <> t_update_same prfax
R16070:16082 PLF.Maps <> t_update_same prfax
R16095:16100 PLF.Imp <> E_Skip constr
R16095:16100 PLF.Imp <> E_Skip constr
R16136:16139 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16146:16151 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16169:16169 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16141:16144 PLF.Imp <> :com:com_scope:x_':='_x not
R16153:16157 PLF.Maps <> :::x_'!->'_x_';'_x not
R16163:16165 PLF.Maps <> :::x_'!->'_x_';'_x not
R16136:16139 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16146:16151 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16169:16169 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16141:16144 PLF.Imp <> :com:com_scope:x_':='_x not
R16153:16157 PLF.Maps <> :::x_'!->'_x_';'_x not
R16163:16165 PLF.Maps <> :::x_'!->'_x_';'_x not
R16185:16190 PLF.Imp <> E_Asgn constr
R16185:16190 PLF.Imp <> E_Asgn constr
R16220:16232 PLF.Maps <> t_update_same prfax
R16220:16232 PLF.Maps <> t_update_same prfax
R16220:16232 PLF.Maps <> t_update_same prfax
prf 16344:16356 <> assign_aequiv
R16372:16377 Coq.Strings.String <> string ind
binder 16368:16368 <> X:42
R16385:16388 PLF.Imp <> aexp ind
binder 16381:16381 <> a:43
R16410:16415 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16394:16399 PLF.Equiv <> aequiv def
R16401:16403 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16405:16407 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16404:16404 PLF.Equiv <> X:42 var
R16409:16409 PLF.Equiv <> a:43 var
R16416:16421 PLF.Equiv <> cequiv def
R16423:16425 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16430:16432 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16426:16429 PLF.Imp <> :com:com_scope:'skip' not
R16434:16436 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16443:16445 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R16438:16441 PLF.Imp <> :com:com_scope:x_':='_x not
R16437:16437 PLF.Equiv <> X:42 var
R16442:16442 PLF.Equiv <> a:43 var
R16521:16524 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16531:16536 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16554:16554 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16526:16529 PLF.Imp <> :com:com_scope:x_':='_x not
R16538:16542 PLF.Maps <> :::x_'!->'_x_';'_x not
R16548:16550 PLF.Maps <> :::x_'!->'_x_';'_x not
R16521:16524 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16531:16536 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16554:16554 PLF.Imp <> :::x_'=['_x_']=>'_x not
R16526:16529 PLF.Imp <> :com:com_scope:x_':='_x not
R16538:16542 PLF.Maps <> :::x_'!->'_x_';'_x not
R16548:16550 PLF.Maps <> :::x_'!->'_x_';'_x not
R16570:16575 PLF.Imp <> E_Asgn constr
R16570:16575 PLF.Imp <> E_Asgn constr
R16585:16590 PLF.Equiv <> aequiv def
R16639:16651 PLF.Maps <> t_update_same prfax
R16639:16651 PLF.Maps <> t_update_same prfax
R16639:16651 PLF.Maps <> t_update_same prfax
R16683:16688 PLF.Equiv <> aequiv def
R16718:16730 PLF.Maps <> t_update_same prfax
R16718:16730 PLF.Maps <> t_update_same prfax
R16718:16730 PLF.Maps <> t_update_same prfax
R16739:16744 PLF.Imp <> E_Skip constr
R16739:16744 PLF.Imp <> E_Skip constr
def 17348:17353 <> prog_a
R17357:17359 PLF.Imp <> com ind
R17366:17368 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17410:17412 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17369:17374 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17380:17390 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17401:17409 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17376:17378 PLF.Imp <> :com::x_'>'_x not
R17375:17375 PLF.Imp <> X def
R17392:17395 PLF.Imp <> :com:com_scope:x_':='_x not
R17391:17391 PLF.Imp <> X def
R17397:17399 PLF.Imp <> :com::x_'+'_x not
R17396:17396 PLF.Imp <> X def
def 17427:17432 <> prog_b
R17436:17438 PLF.Imp <> com ind
R17445:17447 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17559:17561 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17529:17535 PLF.Imp <> :com:com_scope:x_';'_x not
R17448:17450 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R17458:17470 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R17496:17513 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R17520:17528 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R17451:17451 PLF.Imp <> :com:com_scope:'('_x_')' not
R17457:17457 PLF.Imp <> :com:com_scope:'('_x_')' not
R17453:17455 PLF.Imp <> :com::x_'='_x not
R17452:17452 PLF.Imp <> X def
R17481:17489 PLF.Imp <> :com:com_scope:x_';'_x not
R17472:17475 PLF.Imp <> :com:com_scope:x_':='_x not
R17471:17471 PLF.Imp <> X def
R17477:17479 PLF.Imp <> :com::x_'+'_x not
R17476:17476 PLF.Imp <> X def
R17491:17494 PLF.Imp <> :com:com_scope:x_':='_x not
R17490:17490 PLF.Imp <> Y def
R17515:17518 PLF.Imp <> :com:com_scope:x_':='_x not
R17514:17514 PLF.Imp <> Y def
R17546:17552 PLF.Imp <> :com:com_scope:x_';'_x not
R17537:17540 PLF.Imp <> :com:com_scope:x_':='_x not
R17536:17536 PLF.Imp <> X def
R17542:17544 PLF.Imp <> :com::x_'-'_x not
R17541:17541 PLF.Imp <> X def
R17545:17545 PLF.Imp <> Y def
R17554:17557 PLF.Imp <> :com:com_scope:x_':='_x not
R17553:17553 PLF.Imp <> Y def
def 17576:17581 <> prog_c
R17585:17587 PLF.Imp <> com ind
R17594:17596 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17601:17603 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17597:17600 PLF.Imp <> :com:com_scope:'skip' not
def 17619:17624 <> prog_d
R17628:17630 PLF.Imp <> com ind
R17637:17639 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17688:17690 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17640:17645 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17652:17662 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17679:17687 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17647:17650 PLF.Imp <> :com::x_'<>'_x not
R17646:17646 PLF.Imp <> X def
R17664:17667 PLF.Imp <> :com:com_scope:x_':='_x not
R17663:17663 PLF.Imp <> X def
R17675:17677 PLF.Imp <> :com::x_'+'_x not
R17668:17668 PLF.Imp <> :com:com_scope:'('_x_')' not
R17674:17674 PLF.Imp <> :com:com_scope:'('_x_')' not
R17670:17672 PLF.Imp <> :com::x_'*'_x not
R17669:17669 PLF.Imp <> X def
R17673:17673 PLF.Imp <> Y def
def 17705:17710 <> prog_e
R17714:17716 PLF.Imp <> com ind
R17723:17725 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17732:17734 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17727:17730 PLF.Imp <> :com:com_scope:x_':='_x not
R17726:17726 PLF.Imp <> Y def
def 17749:17754 <> prog_f
R17758:17760 PLF.Imp <> com ind
R17767:17769 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17829:17831 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17780:17786 PLF.Imp <> :com:com_scope:x_';'_x not
R17771:17774 PLF.Imp <> :com:com_scope:x_':='_x not
R17770:17770 PLF.Imp <> Y def
R17776:17778 PLF.Imp <> :com::x_'+'_x not
R17775:17775 PLF.Imp <> X def
R17787:17792 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17799:17809 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17820:17828 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17794:17797 PLF.Imp <> :com::x_'<>'_x not
R17793:17793 PLF.Imp <> X def
R17798:17798 PLF.Imp <> Y def
R17811:17814 PLF.Imp <> :com:com_scope:x_':='_x not
R17810:17810 PLF.Imp <> Y def
R17816:17818 PLF.Imp <> :com::x_'+'_x not
R17815:17815 PLF.Imp <> X def
def 17846:17851 <> prog_g
R17855:17857 PLF.Imp <> com ind
R17864:17866 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17901:17903 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17867:17872 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17877:17887 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17892:17900 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17873:17876 PLF.Imp <> :com::'true' not
R17888:17891 PLF.Imp <> :com:com_scope:'skip' not
def 17918:17923 <> prog_h
R17927:17929 PLF.Imp <> com ind
R17936:17938 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17981:17983 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R17939:17944 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17951:17961 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17972:17980 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R17946:17949 PLF.Imp <> :com::x_'<>'_x not
R17945:17945 PLF.Imp <> X def
R17950:17950 PLF.Imp <> X def
R17963:17966 PLF.Imp <> :com:com_scope:x_':='_x not
R17962:17962 PLF.Imp <> X def
R17968:17970 PLF.Imp <> :com::x_'+'_x not
R17967:17967 PLF.Imp <> X def
def 17998:18003 <> prog_i
R18007:18009 PLF.Imp <> com ind
R18016:18018 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R18061:18063 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R18019:18024 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R18031:18041 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R18052:18060 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R18026:18029 PLF.Imp <> :com::x_'<>'_x not
R18025:18025 PLF.Imp <> X def
R18030:18030 PLF.Imp <> Y def
R18043:18046 PLF.Imp <> :com:com_scope:x_':='_x not
R18042:18042 PLF.Imp <> X def
R18048:18050 PLF.Imp <> :com::x_'+'_x not
R18047:18047 PLF.Imp <> Y def
def 18078:18090 <> equiv_classes
R18094:18097 Coq.Init.Datatypes <> list ind
R18100:18103 Coq.Init.Datatypes <> list ind
R18105:18107 PLF.Imp <> com ind
R18116:18117 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18134:18135 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18152:18153 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18170:18171 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18188:18189 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18198:18199 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18118:18118 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18125:18126 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18133:18133 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18119:18124 PLF.Equiv <> prog_a def
R18127:18132 PLF.Equiv <> prog_d def
R18136:18136 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18143:18144 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18151:18151 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18137:18142 PLF.Equiv <> prog_b def
R18145:18150 PLF.Equiv <> prog_e def
R18154:18154 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18161:18162 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18169:18169 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18155:18160 PLF.Equiv <> prog_c def
R18163:18168 PLF.Equiv <> prog_h def
R18172:18172 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18179:18180 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18187:18187 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R18173:18178 PLF.Equiv <> prog_f def
R18181:18186 PLF.Equiv <> prog_g def
R18190:18190 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R18197:18197 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R18191:18196 PLF.Equiv <> prog_i def
def 18254:18283 <> manual_grade_for_equiv_classes
R18287:18292 Coq.Init.Datatypes <> option ind
R18298:18298 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R18295:18297 Coq.Init.Datatypes <> nat ind
R18299:18304 Coq.Strings.String <> string ind
R18310:18313 Coq.Init.Datatypes <> None constr
prf 18860:18870 <> refl_aequiv
R18886:18889 PLF.Imp <> aexp ind
binder 18882:18882 <> a:44
R18895:18900 PLF.Equiv <> aequiv def
R18902:18902 PLF.Equiv <> a:44 var
R18904:18904 PLF.Equiv <> a:44 var
prf 18955:18964 <> sym_aequiv
R18984:18987 PLF.Imp <> aexp ind
binder 18976:18977 <> a1:45
binder 18979:18980 <> a2:46
R19005:19008 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18993:18998 PLF.Equiv <> aequiv def
R19000:19001 PLF.Equiv <> a1:45 var
R19003:19004 PLF.Equiv <> a2:46 var
R19009:19014 PLF.Equiv <> aequiv def
R19016:19017 PLF.Equiv <> a2:46 var
R19019:19020 PLF.Equiv <> a1:45 var
prf 19091:19102 <> trans_aequiv
R19125:19128 PLF.Imp <> aexp ind
binder 19114:19115 <> a1:47
binder 19117:19118 <> a2:48
binder 19120:19121 <> a3:49
R19146:19149 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19134:19139 PLF.Equiv <> aequiv def
R19141:19142 PLF.Equiv <> a1:47 var
R19144:19145 PLF.Equiv <> a2:48 var
R19162:19165 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19150:19155 PLF.Equiv <> aequiv def
R19157:19158 PLF.Equiv <> a2:48 var
R19160:19161 PLF.Equiv <> a3:49 var
R19166:19171 PLF.Equiv <> aequiv def
R19173:19174 PLF.Equiv <> a1:47 var
R19176:19177 PLF.Equiv <> a3:49 var
R19196:19201 PLF.Equiv <> aequiv def
prf 19296:19306 <> refl_bequiv
R19322:19325 PLF.Imp <> bexp ind
binder 19318:19318 <> b:50
R19331:19336 PLF.Equiv <> bequiv def
R19338:19338 PLF.Equiv <> b:50 var
R19340:19340 PLF.Equiv <> b:50 var
R19359:19364 PLF.Equiv <> bequiv def
prf 19406:19415 <> sym_bequiv
R19435:19438 PLF.Imp <> bexp ind
binder 19427:19428 <> b1:51
binder 19430:19431 <> b2:52
R19456:19459 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19444:19449 PLF.Equiv <> bequiv def
R19451:19452 PLF.Equiv <> b1:51 var
R19454:19455 PLF.Equiv <> b2:52 var
R19460:19465 PLF.Equiv <> bequiv def
R19467:19468 PLF.Equiv <> b2:52 var
R19470:19471 PLF.Equiv <> b1:51 var
R19490:19495 PLF.Equiv <> bequiv def
prf 19557:19568 <> trans_bequiv
R19591:19594 PLF.Imp <> bexp ind
binder 19580:19581 <> b1:53
binder 19583:19584 <> b2:54
binder 19586:19587 <> b3:55
R19612:19615 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19600:19605 PLF.Equiv <> bequiv def
R19607:19608 PLF.Equiv <> b1:53 var
R19610:19611 PLF.Equiv <> b2:54 var
R19628:19631 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19616:19621 PLF.Equiv <> bequiv def
R19623:19624 PLF.Equiv <> b2:54 var
R19626:19627 PLF.Equiv <> b3:55 var
R19632:19637 PLF.Equiv <> bequiv def
R19639:19640 PLF.Equiv <> b1:53 var
R19642:19643 PLF.Equiv <> b3:55 var
R19662:19667 PLF.Equiv <> bequiv def
prf 19762:19772 <> refl_cequiv
R19788:19790 PLF.Imp <> com ind
binder 19784:19784 <> c:56
R19796:19801 PLF.Equiv <> cequiv def
R19803:19803 PLF.Equiv <> c:56 var
R19805:19805 PLF.Equiv <> c:56 var
R19824:19829 PLF.Equiv <> cequiv def
prf 19875:19884 <> sym_cequiv
R19904:19906 PLF.Imp <> com ind
binder 19896:19897 <> c1:57
binder 19899:19900 <> c2:58
R19924:19927 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19912:19917 PLF.Equiv <> cequiv def
R19919:19920 PLF.Equiv <> c1:57 var
R19922:19923 PLF.Equiv <> c2:58 var
R19928:19933 PLF.Equiv <> cequiv def
R19935:19936 PLF.Equiv <> c2:58 var
R19938:19939 PLF.Equiv <> c1:57 var
R19958:19963 PLF.Equiv <> cequiv def
prf 20027:20038 <> trans_cequiv
R20061:20063 PLF.Imp <> com ind
binder 20050:20051 <> c1:59
binder 20053:20054 <> c2:60
binder 20056:20057 <> c3:61
R20081:20084 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20069:20074 PLF.Equiv <> cequiv def
R20076:20077 PLF.Equiv <> c1:59 var
R20079:20080 PLF.Equiv <> c2:60 var
R20097:20100 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20085:20090 PLF.Equiv <> cequiv def
R20092:20093 PLF.Equiv <> c2:60 var
R20095:20096 PLF.Equiv <> c3:61 var
R20101:20106 PLF.Equiv <> cequiv def
R20108:20109 PLF.Equiv <> c1:59 var
R20111:20112 PLF.Equiv <> c3:61 var
R20131:20136 PLF.Equiv <> cequiv def
prf 21586:21601 <> CAsgn_congruence
binder 21612:21612 <> x:62
binder 21614:21614 <> a:63
binder 21616:21617 <> a':64
R21633:21638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21622:21627 PLF.Equiv <> aequiv def
R21629:21629 PLF.Equiv <> a:63 var
R21631:21632 PLF.Equiv <> a':64 var
R21639:21644 PLF.Equiv <> cequiv def
R21646:21647 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R21654:21655 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R21649:21652 PLF.Imp <> :com:com_scope:x_':='_x not
R21648:21648 PLF.Equiv <> x:62 var
R21653:21653 PLF.Equiv <> a:63 var
R21657:21658 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R21666:21667 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R21660:21663 PLF.Imp <> :com:com_scope:x_':='_x not
R21659:21659 PLF.Equiv <> x:62 var
R21664:21665 PLF.Equiv <> a':64 var
R21778:21783 PLF.Imp <> E_Asgn constr
R21778:21783 PLF.Imp <> E_Asgn constr
R21865:21870 PLF.Imp <> E_Asgn constr
R21865:21870 PLF.Imp <> E_Asgn constr
prf 23708:23724 <> CWhile_congruence
binder 23735:23735 <> b:65
binder 23737:23738 <> b':66
binder 23740:23740 <> c:67
binder 23742:23743 <> c':68
R23759:23762 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23748:23753 PLF.Equiv <> bequiv def
R23755:23755 PLF.Equiv <> b:65 var
R23757:23758 PLF.Equiv <> b':66 var
R23774:23779 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23763:23768 PLF.Equiv <> cequiv def
R23770:23770 PLF.Equiv <> c:67 var
R23772:23773 PLF.Equiv <> c':68 var
R23780:23785 PLF.Equiv <> cequiv def
R23787:23789 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R23806:23808 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R23790:23795 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23797:23800 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23802:23805 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23796:23796 PLF.Equiv <> b:65 var
R23801:23801 PLF.Equiv <> c:67 var
R23810:23812 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R23831:23833 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R23813:23818 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23821:23824 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23827:23830 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R23819:23820 PLF.Equiv <> b':66 var
R23825:23826 PLF.Equiv <> c':68 var
R23991:23994 PLF.Imp <> bexp ind
binder 23984:23984 <> b:69
binder 23986:23987 <> b':70
R24005:24007 PLF.Imp <> com ind
binder 23998:23998 <> c:71
binder 24000:24001 <> c':72
R24020:24024 PLF.Imp <> state def
binder 24011:24012 <> st:73
binder 24014:24016 <> st':74
R24052:24055 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24041:24046 PLF.Equiv <> bequiv def
R24048:24048 PLF.Equiv <> b:69 var
R24050:24051 PLF.Equiv <> b':70 var
R24067:24083 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24056:24061 PLF.Equiv <> cequiv def
R24063:24063 PLF.Equiv <> c:71 var
R24065:24066 PLF.Equiv <> c':72 var
R24114:24130 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24086:24089 PLF.Imp <> :::x_'=['_x_']=>'_x not
R24106:24110 PLF.Imp <> :::x_'=['_x_']=>'_x not
R24090:24095 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24097:24100 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24102:24105 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24096:24096 PLF.Equiv <> b:69 var
R24101:24101 PLF.Equiv <> c:71 var
R24084:24085 PLF.Equiv <> st:73 var
R24111:24113 PLF.Equiv <> st':74 var
R24133:24136 PLF.Imp <> :::x_'=['_x_']=>'_x not
R24155:24159 PLF.Imp <> :::x_'=['_x_']=>'_x not
R24137:24142 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24145:24148 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24151:24154 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24143:24144 PLF.Equiv <> b':70 var
R24149:24150 PLF.Equiv <> c':72 var
R24131:24132 PLF.Equiv <> st:73 var
R24160:24162 PLF.Equiv <> st':74 var
R23991:23994 PLF.Imp <> bexp ind
binder 23984:23984 <> b:75
binder 23986:23987 <> b':76
R24005:24007 PLF.Imp <> com ind
binder 23998:23998 <> c:77
binder 24000:24001 <> c':78
R24020:24024 PLF.Imp <> state def
binder 24011:24012 <> st:79
binder 24014:24016 <> st':80
R24052:24055 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24041:24046 PLF.Equiv <> bequiv def
R24048:24048 PLF.Equiv <> b:75 var
R24050:24051 PLF.Equiv <> b':76 var
R24067:24083 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24056:24061 PLF.Equiv <> cequiv def
R24063:24063 PLF.Equiv <> c:77 var
R24065:24066 PLF.Equiv <> c':78 var
R24114:24130 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24086:24089 PLF.Imp <> :::x_'=['_x_']=>'_x not
R24106:24110 PLF.Imp <> :::x_'=['_x_']=>'_x not
R24090:24095 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24097:24100 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24102:24105 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24096:24096 PLF.Equiv <> b:75 var
R24101:24101 PLF.Equiv <> c:77 var
R24084:24085 PLF.Equiv <> st:79 var
R24111:24113 PLF.Equiv <> st':80 var
R24133:24136 PLF.Imp <> :::x_'=['_x_']=>'_x not
R24155:24159 PLF.Imp <> :::x_'=['_x_']=>'_x not
R24137:24142 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24145:24148 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24151:24154 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24143:24144 PLF.Equiv <> b':76 var
R24149:24150 PLF.Equiv <> c':78 var
R24131:24132 PLF.Equiv <> st:79 var
R24160:24162 PLF.Equiv <> st':80 var
R24177:24182 PLF.Equiv <> bequiv def
R24184:24189 PLF.Equiv <> cequiv def
R24247:24249 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R24266:24268 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R24250:24255 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24257:24260 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24262:24265 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24247:24249 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R24266:24268 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R24250:24255 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24257:24260 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24262:24265 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R24385:24396 PLF.Imp <> E_WhileFalse constr
R24385:24396 PLF.Imp <> E_WhileFalse constr
R24460:24470 PLF.Imp <> E_WhileTrue constr
R24460:24470 PLF.Imp <> E_WhileTrue constr
R24761:24770 PLF.Equiv <> sym_bequiv thm
R24761:24770 PLF.Equiv <> sym_bequiv thm
R24797:24806 PLF.Equiv <> sym_cequiv thm
R24797:24806 PLF.Equiv <> sym_cequiv thm
prf 24903:24917 <> CSeq_congruence
binder 24928:24929 <> c1:81
binder 24931:24933 <> c1':82
binder 24935:24936 <> c2:83
binder 24938:24940 <> c2':84
R24958:24961 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24945:24950 PLF.Equiv <> cequiv def
R24952:24953 PLF.Equiv <> c1:81 var
R24955:24957 PLF.Equiv <> c1':82 var
R24975:24980 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24962:24967 PLF.Equiv <> cequiv def
R24969:24970 PLF.Equiv <> c2:83 var
R24972:24974 PLF.Equiv <> c2':84 var
R24981:24986 PLF.Equiv <> cequiv def
R24988:24990 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R24996:24998 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R24993:24993 PLF.Imp <> :com:com_scope:x_';'_x not
R24991:24992 PLF.Equiv <> c1:81 var
R24994:24995 PLF.Equiv <> c2:83 var
R25000:25002 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25010:25012 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25006:25006 PLF.Imp <> :com:com_scope:x_';'_x not
R25003:25005 PLF.Equiv <> c1':82 var
R25007:25009 PLF.Equiv <> c2':84 var
prf 25129:25142 <> CIf_congruence
binder 25153:25153 <> b:85
binder 25155:25156 <> b':86
binder 25158:25159 <> c1:87
binder 25161:25163 <> c1':88
binder 25165:25166 <> c2:89
binder 25168:25170 <> c2':90
R25186:25189 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25175:25180 PLF.Equiv <> bequiv def
R25182:25182 PLF.Equiv <> b:85 var
R25184:25185 PLF.Equiv <> b':86 var
R25203:25206 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25190:25195 PLF.Equiv <> cequiv def
R25197:25198 PLF.Equiv <> c1:87 var
R25200:25202 PLF.Equiv <> c1':88 var
R25220:25225 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25207:25212 PLF.Equiv <> cequiv def
R25214:25215 PLF.Equiv <> c2:89 var
R25217:25219 PLF.Equiv <> c2':90 var
R25226:25231 PLF.Equiv <> cequiv def
R25233:25235 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25260:25262 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25236:25238 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25240:25245 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25248:25253 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25256:25259 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25239:25239 PLF.Equiv <> b:85 var
R25246:25247 PLF.Equiv <> c1:87 var
R25254:25255 PLF.Equiv <> c2:89 var
R25273:25275 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25303:25305 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25276:25278 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25281:25286 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25290:25295 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25299:25302 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25279:25280 PLF.Equiv <> b':86 var
R25287:25289 PLF.Equiv <> c1':88 var
R25296:25298 PLF.Equiv <> c2':90 var
R25378:25385 PLF.Imp <> E_IfTrue constr
R25378:25385 PLF.Imp <> E_IfTrue constr
R25464:25472 PLF.Imp <> E_IfFalse constr
R25464:25472 PLF.Imp <> E_IfFalse constr
R25576:25583 PLF.Imp <> E_IfTrue constr
R25576:25583 PLF.Imp <> E_IfTrue constr
R25659:25667 PLF.Imp <> E_IfFalse constr
R25659:25667 PLF.Imp <> E_IfFalse constr
def 25881:25898 <> congruence_example
R25903:25908 PLF.Equiv <> cequiv def
R25935:25937 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25997:25999 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R25944:25952 PLF.Imp <> :com:com_scope:x_';'_x not
R25939:25942 PLF.Imp <> :com:com_scope:x_':='_x not
R25938:25938 PLF.Imp <> X def
R25953:25955 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25961:25966 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25973:25985 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25993:25996 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R25957:25959 PLF.Imp <> :com::x_'='_x not
R25956:25956 PLF.Imp <> X def
R25968:25971 PLF.Imp <> :com:com_scope:x_':='_x not
R25967:25967 PLF.Imp <> Y def
R25987:25990 PLF.Imp <> :com:com_scope:x_':='_x not
R25986:25986 PLF.Imp <> Y def
R26026:26028 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R26118:26120 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R26035:26043 PLF.Imp <> :com:com_scope:x_';'_x not
R26030:26033 PLF.Imp <> :com:com_scope:x_':='_x not
R26029:26029 PLF.Imp <> X def
R26044:26046 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26052:26057 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26068:26106 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26114:26117 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R26048:26050 PLF.Imp <> :com::x_'='_x not
R26047:26047 PLF.Imp <> X def
R26059:26062 PLF.Imp <> :com:com_scope:x_':='_x not
R26058:26058 PLF.Imp <> Y def
R26064:26066 PLF.Imp <> :com::x_'-'_x not
R26063:26063 PLF.Imp <> X def
R26067:26067 PLF.Imp <> X def
R26108:26111 PLF.Imp <> :com:com_scope:x_':='_x not
R26107:26107 PLF.Imp <> Y def
R26138:26152 PLF.Equiv <> CSeq_congruence prfax
R26138:26152 PLF.Equiv <> CSeq_congruence prfax
R26165:26175 PLF.Equiv <> refl_cequiv thm
R26165:26175 PLF.Equiv <> refl_cequiv thm
R26188:26201 PLF.Equiv <> CIf_congruence thm
R26188:26201 PLF.Equiv <> CIf_congruence thm
R26216:26226 PLF.Equiv <> refl_bequiv thm
R26216:26226 PLF.Equiv <> refl_bequiv thm
R26241:26256 PLF.Equiv <> CAsgn_congruence thm
R26241:26256 PLF.Equiv <> CAsgn_congruence thm
R26266:26271 PLF.Equiv <> aequiv def
R26303:26310 Coq.Arith.PeanoNat Nat sub_diag thm
R26303:26310 Coq.Arith.PeanoNat Nat sub_diag thm
R26325:26335 PLF.Equiv <> refl_cequiv thm
R26325:26335 PLF.Equiv <> refl_cequiv thm
def 26738:26746 <> not_congr
R26757:26759 PLF.Imp <> com ind
binder 26749:26750 <> c1:91
binder 26752:26753 <> c2:92
R26774:26774 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R26804:26810 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R26840:26840 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R26775:26775 PLF.Imp <> :::x_'=['_x_']=>'_x not
R26783:26787 PLF.Imp <> :::x_'=['_x_']=>'_x not
R26790:26795 PLF.Imp <> :::x_'=['_x_']=>'_x not
R26803:26803 PLF.Imp <> :::x_'=['_x_']=>'_x not
R26788:26789 PLF.Equiv <> c1:91 var
R26777:26781 PLF.Imp <> :::x_'!->'_x not
R26776:26776 PLF.Imp <> X def
R26797:26801 PLF.Imp <> :::x_'!->'_x not
R26796:26796 PLF.Imp <> X def
R26811:26811 PLF.Imp <> :::x_'=['_x_']=>'_x not
R26819:26823 PLF.Imp <> :::x_'=['_x_']=>'_x not
R26826:26831 PLF.Imp <> :::x_'=['_x_']=>'_x not
R26839:26839 PLF.Imp <> :::x_'=['_x_']=>'_x not
R26824:26825 PLF.Equiv <> c2:92 var
R26813:26817 PLF.Imp <> :::x_'!->'_x not
R26812:26812 PLF.Imp <> X def
R26833:26837 PLF.Imp <> :::x_'!->'_x not
R26832:26832 PLF.Imp <> X def
def 27307:27332 <> manual_grade_for_not_congr
R27336:27341 Coq.Init.Datatypes <> option ind
R27347:27347 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R27344:27346 Coq.Init.Datatypes <> nat ind
R27348:27353 Coq.Strings.String <> string ind
R27359:27362 Coq.Init.Datatypes <> None constr
def 27841:27852 <> atrans_sound
R27868:27871 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27864:27867 PLF.Imp <> aexp ind
R27872:27875 PLF.Imp <> aexp ind
binder 27855:27860 <> atrans:93
R27902:27905 PLF.Imp <> aexp ind
binder 27898:27898 <> a:94
R27913:27918 PLF.Equiv <> aequiv def
R27920:27920 PLF.Equiv <> a:94 var
R27923:27928 PLF.Equiv <> atrans:93 var
R27930:27930 PLF.Equiv <> a:94 var
def 27946:27957 <> btrans_sound
R27973:27976 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27969:27972 PLF.Imp <> bexp ind
R27977:27980 PLF.Imp <> bexp ind
binder 27960:27965 <> btrans:95
R28007:28010 PLF.Imp <> bexp ind
binder 28003:28003 <> b:96
R28018:28023 PLF.Equiv <> bequiv def
R28025:28025 PLF.Equiv <> b:96 var
R28028:28033 PLF.Equiv <> btrans:95 var
R28035:28035 PLF.Equiv <> b:96 var
def 28051:28062 <> ctrans_sound
R28077:28080 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28074:28076 PLF.Imp <> com ind
R28081:28083 PLF.Imp <> com ind
binder 28065:28070 <> ctrans:97
R28110:28112 PLF.Imp <> com ind
binder 28106:28106 <> c:98
R28120:28125 PLF.Equiv <> cequiv def
R28127:28127 PLF.Equiv <> c:98 var
R28130:28135 PLF.Equiv <> ctrans:97 var
R28137:28137 PLF.Equiv <> c:98 var
def 28457:28475 <> fold_constants_aexp
R28482:28485 PLF.Imp <> aexp ind
binder 28478:28478 <> a:99
R28490:28493 PLF.Imp <> aexp ind
R28506:28506 PLF.Equiv <> a:99 var
R28517:28520 PLF.Imp <> ANum constr
R28533:28536 PLF.Imp <> ANum constr
R28544:28546 PLF.Imp <> AId constr
R28560:28562 PLF.Imp <> AId constr
R28570:28572 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28580:28582 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28575:28577 PLF.Imp <> :com::x_'+'_x not
R28598:28598 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28621:28633 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28656:28656 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28599:28617 PLF.Equiv <> fold_constants_aexp:100 def
R28634:28652 PLF.Equiv <> fold_constants_aexp:100 def
R28673:28673 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28681:28682 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28690:28690 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28674:28677 PLF.Imp <> ANum constr
R28683:28686 PLF.Imp <> ANum constr
R28695:28698 PLF.Imp <> ANum constr
R28703:28705 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R28716:28716 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28720:28721 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28725:28725 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28730:28732 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28742:28744 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28736:28738 PLF.Imp <> :com::x_'+'_x not
R28758:28760 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28768:28770 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28763:28765 PLF.Imp <> :com::x_'-'_x not
R28785:28785 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28808:28820 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28843:28843 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28786:28804 PLF.Equiv <> fold_constants_aexp:100 def
R28821:28839 PLF.Equiv <> fold_constants_aexp:100 def
R28860:28860 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28868:28869 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28877:28877 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28861:28864 PLF.Imp <> ANum constr
R28870:28873 PLF.Imp <> ANum constr
R28882:28885 PLF.Imp <> ANum constr
R28890:28892 Coq.Init.Nat <> ::nat_scope:x_'-'_x not
R28903:28903 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28907:28908 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28912:28912 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28917:28919 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28929:28931 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28923:28925 PLF.Imp <> :com::x_'-'_x not
R28945:28947 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28955:28957 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R28950:28952 PLF.Imp <> :com::x_'*'_x not
R28973:28973 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28996:29008 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29031:29031 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28974:28992 PLF.Equiv <> fold_constants_aexp:100 def
R29009:29027 PLF.Equiv <> fold_constants_aexp:100 def
R29048:29048 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29056:29057 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29065:29065 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29049:29052 PLF.Imp <> ANum constr
R29058:29061 PLF.Imp <> ANum constr
R29070:29073 PLF.Imp <> ANum constr
R29078:29080 Coq.Init.Nat <> ::nat_scope:x_'*'_x not
R29091:29091 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29095:29096 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29100:29100 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R29105:29107 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29117:29119 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29111:29113 PLF.Imp <> :com::x_'*'_x not
def 29145:29157 <> fold_aexp_ex1
R29202:29206 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29165:29183 PLF.Equiv <> fold_constants_aexp def
R29185:29187 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29199:29201 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29195:29197 PLF.Imp <> :com::x_'*'_x not
R29188:29188 PLF.Imp <> :com:com_scope:'('_x_')' not
R29194:29194 PLF.Imp <> :com:com_scope:'('_x_')' not
R29190:29192 PLF.Imp <> :com::x_'+'_x not
R29198:29198 PLF.Imp <> X def
R29207:29209 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29215:29217 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29211:29213 PLF.Imp <> :com::x_'*'_x not
R29214:29214 PLF.Imp <> X def
def 29681:29693 <> fold_aexp_ex2
R29742:29744 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29699:29717 PLF.Equiv <> fold_constants_aexp def
R29719:29721 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29739:29741 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29723:29725 PLF.Imp <> :com::x_'-'_x not
R29722:29722 PLF.Imp <> X def
R29726:29726 PLF.Imp <> :com:com_scope:'('_x_')' not
R29738:29738 PLF.Imp <> :com:com_scope:'('_x_')' not
R29734:29736 PLF.Imp <> :com::x_'+'_x not
R29727:29727 PLF.Imp <> :com:com_scope:'('_x_')' not
R29733:29733 PLF.Imp <> :com:com_scope:'('_x_')' not
R29729:29731 PLF.Imp <> :com::x_'*'_x not
R29737:29737 PLF.Imp <> Y def
R29745:29747 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29759:29761 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R29749:29751 PLF.Imp <> :com::x_'-'_x not
R29748:29748 PLF.Imp <> X def
R29752:29752 PLF.Imp <> :com:com_scope:'('_x_')' not
R29758:29758 PLF.Imp <> :com:com_scope:'('_x_')' not
R29754:29756 PLF.Imp <> :com::x_'+'_x not
R29757:29757 PLF.Imp <> Y def
def 29998:30016 <> fold_constants_bexp
R30023:30026 PLF.Imp <> bexp ind
binder 30019:30019 <> b:102
R30031:30034 PLF.Imp <> bexp ind
R30047:30047 PLF.Equiv <> b:102 var
R30058:30059 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30064:30065 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30060:30063 PLF.Imp <> :com::'true' not
R30077:30078 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30083:30084 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30079:30082 PLF.Imp <> :com::'true' not
R30090:30091 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30097:30098 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30092:30096 PLF.Imp <> :com::'false' not
R30109:30110 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30116:30117 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30111:30115 PLF.Imp <> :com::'false' not
R30123:30125 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30133:30135 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30128:30130 PLF.Imp <> :com::x_'='_x not
R30153:30153 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30176:30190 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30213:30213 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30154:30172 PLF.Equiv <> fold_constants_aexp def
R30191:30209 PLF.Equiv <> fold_constants_aexp def
R30228:30228 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30236:30237 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30245:30245 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30229:30232 PLF.Imp <> ANum constr
R30238:30241 PLF.Imp <> ANum constr
R30265:30268 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R30291:30292 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30298:30299 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30293:30297 PLF.Imp <> :com::'false' not
R30277:30278 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30283:30284 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30279:30282 PLF.Imp <> :com::'true' not
R30309:30309 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30313:30314 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30318:30318 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30333:30335 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30345:30347 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30339:30341 PLF.Imp <> :com::x_'='_x not
R30363:30365 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30374:30376 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30368:30371 PLF.Imp <> :com::x_'<>'_x not
R30394:30394 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30417:30431 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30454:30454 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30395:30413 PLF.Equiv <> fold_constants_aexp def
R30432:30450 PLF.Equiv <> fold_constants_aexp def
R30469:30469 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30477:30478 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30486:30486 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30470:30473 PLF.Imp <> ANum constr
R30479:30482 PLF.Imp <> ANum constr
R30504:30507 Coq.Init.Datatypes <> negb def
R30512:30515 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R30539:30540 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30546:30547 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30541:30545 PLF.Imp <> :com::'false' not
R30525:30526 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30531:30532 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30527:30530 PLF.Imp <> :com::'true' not
R30557:30557 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30561:30562 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30566:30566 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30581:30583 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30594:30596 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30587:30590 PLF.Imp <> :com::x_'<>'_x not
R30612:30614 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30623:30625 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30617:30620 PLF.Imp <> :com::x_'<='_x not
R30643:30643 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30666:30680 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30703:30703 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30644:30662 PLF.Equiv <> fold_constants_aexp def
R30681:30699 PLF.Equiv <> fold_constants_aexp def
R30718:30718 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30726:30727 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30735:30735 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30719:30722 PLF.Imp <> ANum constr
R30728:30731 PLF.Imp <> ANum constr
R30755:30759 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R30782:30783 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30789:30790 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30784:30788 PLF.Imp <> :com::'false' not
R30768:30769 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30774:30775 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30770:30773 PLF.Imp <> :com::'true' not
R30800:30800 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30804:30805 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30809:30809 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30824:30826 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30837:30839 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30830:30833 PLF.Imp <> :com::x_'<='_x not
R30855:30857 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30865:30867 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R30860:30862 PLF.Imp <> :com::x_'>'_x not
R30885:30885 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30908:30922 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30945:30945 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30886:30904 PLF.Equiv <> fold_constants_aexp def
R30923:30941 PLF.Equiv <> fold_constants_aexp def
R30960:30960 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30968:30969 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30977:30977 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R30961:30964 PLF.Imp <> ANum constr
R30970:30973 PLF.Imp <> ANum constr
R30997:31001 Coq.Init.Nat <> ::nat_scope:x_'<=?'_x not
R31025:31026 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31031:31032 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31027:31030 PLF.Imp <> :com::'true' not
R31010:31011 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31017:31018 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31012:31016 PLF.Imp <> :com::'false' not
R31042:31042 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31046:31047 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31051:31051 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31066:31068 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31078:31080 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31072:31074 PLF.Imp <> :com::x_'>'_x not
R31096:31098 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31103:31105 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31099:31100 PLF.Imp <> :com::'~'_x not
R31124:31142 PLF.Equiv <> fold_constants_bexp:103 def
R31161:31162 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31167:31168 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31163:31166 PLF.Imp <> :com::'true' not
R31173:31174 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31180:31181 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31175:31179 PLF.Imp <> :com::'false' not
R31191:31192 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31198:31199 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31193:31197 PLF.Imp <> :com::'false' not
R31204:31205 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31210:31211 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31206:31209 PLF.Imp <> :com::'true' not
R31228:31230 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31236:31238 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31231:31232 PLF.Imp <> :com::'~'_x not
R31254:31256 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31265:31267 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31259:31262 PLF.Imp <> :com::x_'&&'_x not
R31285:31285 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31308:31322 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31345:31345 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31286:31304 PLF.Equiv <> fold_constants_bexp:103 def
R31323:31341 PLF.Equiv <> fold_constants_bexp:103 def
R31360:31360 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31369:31370 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31379:31379 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31361:31362 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31367:31368 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31363:31366 PLF.Imp <> :com::'true' not
R31371:31372 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31377:31378 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31373:31376 PLF.Imp <> :com::'true' not
R31384:31385 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31390:31391 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31386:31389 PLF.Imp <> :com::'true' not
R31401:31401 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31410:31411 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31421:31421 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31402:31403 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31408:31409 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31404:31407 PLF.Imp <> :com::'true' not
R31412:31413 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31419:31420 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31414:31418 PLF.Imp <> :com::'false' not
R31426:31427 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31433:31434 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31428:31432 PLF.Imp <> :com::'false' not
R31444:31444 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31454:31455 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31464:31464 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31445:31446 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31452:31453 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31447:31451 PLF.Imp <> :com::'false' not
R31456:31457 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31462:31463 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31458:31461 PLF.Imp <> :com::'true' not
R31469:31470 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31476:31477 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31471:31475 PLF.Imp <> :com::'false' not
R31487:31487 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31497:31498 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31508:31508 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31488:31489 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31495:31496 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31490:31494 PLF.Imp <> :com::'false' not
R31499:31500 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31506:31507 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31501:31505 PLF.Imp <> :com::'false' not
R31513:31514 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31520:31521 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31515:31519 PLF.Imp <> :com::'false' not
R31531:31531 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31535:31536 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31540:31540 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31545:31547 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31558:31560 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31551:31554 PLF.Imp <> :com::x_'&&'_x not
def 31588:31600 <> fold_bexp_ex1
R31656:31660 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31606:31624 PLF.Equiv <> fold_constants_bexp def
R31626:31628 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31653:31655 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31633:31636 PLF.Imp <> :com::x_'&&'_x not
R31629:31632 PLF.Imp <> :com::'true' not
R31637:31637 PLF.Imp <> :com::'~'_x not
R31638:31638 PLF.Imp <> :com:com_scope:'('_x_')' not
R31652:31652 PLF.Imp <> :com:com_scope:'('_x_')' not
R31644:31647 PLF.Imp <> :com::x_'&&'_x not
R31639:31643 PLF.Imp <> :com::'false' not
R31648:31651 PLF.Imp <> :com::'true' not
R31661:31663 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31668:31670 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31664:31667 PLF.Imp <> :com::'true' not
def 31707:31719 <> fold_bexp_ex2
R31781:31785 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31725:31743 PLF.Equiv <> fold_constants_bexp def
R31745:31747 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31778:31780 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31755:31758 PLF.Imp <> :com::x_'&&'_x not
R31748:31748 PLF.Imp <> :com:com_scope:'('_x_')' not
R31754:31754 PLF.Imp <> :com:com_scope:'('_x_')' not
R31750:31752 PLF.Imp <> :com::x_'='_x not
R31749:31749 PLF.Imp <> X def
R31753:31753 PLF.Imp <> Y def
R31759:31759 PLF.Imp <> :com:com_scope:'('_x_')' not
R31777:31777 PLF.Imp <> :com:com_scope:'('_x_')' not
R31761:31763 PLF.Imp <> :com::x_'='_x not
R31764:31764 PLF.Imp <> :com:com_scope:'('_x_')' not
R31776:31776 PLF.Imp <> :com:com_scope:'('_x_')' not
R31766:31768 PLF.Imp <> :com::x_'-'_x not
R31769:31769 PLF.Imp <> :com:com_scope:'('_x_')' not
R31775:31775 PLF.Imp <> :com:com_scope:'('_x_')' not
R31771:31773 PLF.Imp <> :com::x_'+'_x not
R31786:31788 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31804:31806 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R31796:31799 PLF.Imp <> :com::x_'&&'_x not
R31789:31789 PLF.Imp <> :com:com_scope:'('_x_')' not
R31795:31795 PLF.Imp <> :com:com_scope:'('_x_')' not
R31791:31793 PLF.Imp <> :com::x_'='_x not
R31790:31790 PLF.Imp <> X def
R31794:31794 PLF.Imp <> Y def
R31800:31803 PLF.Imp <> :com::'true' not
def 31960:31977 <> fold_constants_com
R31984:31986 PLF.Imp <> com ind
binder 31980:31980 <> c:105
R31991:31993 PLF.Imp <> com ind
R32006:32006 PLF.Equiv <> c:105 var
R32017:32019 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32024:32026 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32020:32023 PLF.Imp <> :com:com_scope:'skip' not
R32037:32039 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32044:32046 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32040:32043 PLF.Imp <> :com:com_scope:'skip' not
R32052:32054 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32061:32063 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32056:32059 PLF.Imp <> :com:com_scope:x_':='_x not
R32074:32076 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32105:32107 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32078:32081 PLF.Imp <> :com:com_scope:x_':='_x not
R32082:32082 PLF.Imp <> :com:com_scope:'('_x_')' not
R32104:32104 PLF.Imp <> :com:com_scope:'('_x_')' not
R32102:32102 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R32083:32101 PLF.Equiv <> fold_constants_aexp def
R32113:32115 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32123:32125 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32118:32120 PLF.Imp <> :com:com_scope:x_';'_x not
R32137:32139 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32185:32187 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32161:32163 PLF.Imp <> :com:com_scope:x_';'_x not
R32158:32158 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R32140:32157 PLF.Equiv <> fold_constants_com:106 def
R32182:32182 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R32164:32181 PLF.Equiv <> fold_constants_com:106 def
R32193:32195 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32220:32222 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32196:32198 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32200:32205 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32208:32213 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32216:32219 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32239:32257 PLF.Equiv <> fold_constants_bexp def
R32274:32275 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32280:32281 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32276:32279 PLF.Imp <> :com::'true' not
R32287:32304 PLF.Equiv <> fold_constants_com:106 def
R32317:32318 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32324:32325 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32319:32323 PLF.Imp <> :com::'false' not
R32330:32347 PLF.Equiv <> fold_constants_com:106 def
R32366:32368 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32455:32456 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32369:32371 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32374:32379 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32401:32429 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32451:32454 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32398:32398 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R32380:32397 PLF.Equiv <> fold_constants_com:106 def
R32448:32448 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R32430:32447 PLF.Equiv <> fold_constants_com:106 def
R32472:32474 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32492:32494 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32475:32480 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32482:32485 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32488:32491 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32511:32529 PLF.Equiv <> fold_constants_bexp def
R32546:32547 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32552:32553 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32548:32551 PLF.Imp <> :com::'true' not
R32558:32560 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32583:32585 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32561:32566 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32571:32574 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32579:32582 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32567:32570 PLF.Imp <> :com::'true' not
R32575:32578 PLF.Imp <> :com:com_scope:'skip' not
R32595:32596 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32602:32603 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32597:32601 PLF.Imp <> :com::'false' not
R32608:32610 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32615:32617 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32611:32614 PLF.Imp <> :com:com_scope:'skip' not
R32633:32635 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32675:32677 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32636:32641 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32644:32647 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32671:32674 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32648:32648 PLF.Imp <> :com:com_scope:'('_x_')' not
R32670:32670 PLF.Imp <> :com:com_scope:'('_x_')' not
R32667:32667 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R32649:32666 PLF.Equiv <> fold_constants_com:106 def
def 32705:32716 <> fold_com_ex1
R32987:33025 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32722:32739 PLF.Equiv <> fold_constants_com def
R32773:32775 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32984:32986 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R32786:32794 PLF.Imp <> :com:com_scope:x_';'_x not
R32777:32780 PLF.Imp <> :com:com_scope:x_':='_x not
R32776:32776 PLF.Imp <> X def
R32782:32784 PLF.Imp <> :com::x_'+'_x not
R32805:32813 PLF.Imp <> :com:com_scope:x_';'_x not
R32796:32799 PLF.Imp <> :com:com_scope:x_':='_x not
R32795:32795 PLF.Imp <> Y def
R32801:32803 PLF.Imp <> :com::x_'-'_x not
R32800:32800 PLF.Imp <> X def
R32867:32875 PLF.Imp <> :com:com_scope:x_';'_x not
R32814:32816 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32834:32839 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32844:32856 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32863:32866 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32824:32826 PLF.Imp <> :com::x_'='_x not
R32817:32817 PLF.Imp <> :com:com_scope:'('_x_')' not
R32823:32823 PLF.Imp <> :com:com_scope:'('_x_')' not
R32819:32821 PLF.Imp <> :com::x_'-'_x not
R32818:32818 PLF.Imp <> X def
R32822:32822 PLF.Imp <> Y def
R32827:32827 PLF.Imp <> :com:com_scope:'('_x_')' not
R32833:32833 PLF.Imp <> :com:com_scope:'('_x_')' not
R32829:32831 PLF.Imp <> :com::x_'+'_x not
R32840:32843 PLF.Imp <> :com:com_scope:'skip' not
R32858:32861 PLF.Imp <> :com:com_scope:x_':='_x not
R32857:32857 PLF.Imp <> Y def
R32930:32938 PLF.Imp <> :com:com_scope:x_';'_x not
R32876:32878 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32897:32902 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32909:32921 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32926:32929 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R32880:32883 PLF.Imp <> :com::x_'<='_x not
R32884:32884 PLF.Imp <> :com:com_scope:'('_x_')' not
R32896:32896 PLF.Imp <> :com:com_scope:'('_x_')' not
R32886:32888 PLF.Imp <> :com::x_'-'_x not
R32889:32889 PLF.Imp <> :com:com_scope:'('_x_')' not
R32895:32895 PLF.Imp <> :com:com_scope:'('_x_')' not
R32891:32893 PLF.Imp <> :com::x_'+'_x not
R32904:32907 PLF.Imp <> :com:com_scope:x_':='_x not
R32903:32903 PLF.Imp <> Y def
R32922:32925 PLF.Imp <> :com:com_scope:'skip' not
R32939:32944 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32950:32962 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32973:32983 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R32946:32948 PLF.Imp <> :com::x_'='_x not
R32945:32945 PLF.Imp <> Y def
R32964:32967 PLF.Imp <> :com:com_scope:x_':='_x not
R32963:32963 PLF.Imp <> X def
R32969:32971 PLF.Imp <> :com::x_'+'_x not
R32968:32968 PLF.Imp <> X def
R33026:33028 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33179:33181 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R33035:33043 PLF.Imp <> :com:com_scope:x_';'_x not
R33030:33033 PLF.Imp <> :com:com_scope:x_':='_x not
R33029:33029 PLF.Imp <> X def
R33054:33062 PLF.Imp <> :com:com_scope:x_';'_x not
R33045:33048 PLF.Imp <> :com:com_scope:x_':='_x not
R33044:33044 PLF.Imp <> Y def
R33050:33052 PLF.Imp <> :com::x_'-'_x not
R33049:33049 PLF.Imp <> X def
R33110:33118 PLF.Imp <> :com:com_scope:x_';'_x not
R33063:33065 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33077:33082 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33087:33099 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33106:33109 PLF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R33073:33075 PLF.Imp <> :com::x_'='_x not
R33066:33066 PLF.Imp <> :com:com_scope:'('_x_')' not
R33072:33072 PLF.Imp <> :com:com_scope:'('_x_')' not
R33068:33070 PLF.Imp <> :com::x_'-'_x not
R33067:33067 PLF.Imp <> X def
R33071:33071 PLF.Imp <> Y def
R33083:33086 PLF.Imp <> :com:com_scope:'skip' not
R33101:33104 PLF.Imp <> :com:com_scope:x_':='_x not
R33100:33100 PLF.Imp <> Y def
R33125:33133 PLF.Imp <> :com:com_scope:x_';'_x not
R33120:33123 PLF.Imp <> :com:com_scope:x_':='_x not
R33119:33119 PLF.Imp <> Y def
R33134:33139 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33145:33157 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33168:33178 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R33141:33143 PLF.Imp <> :com::x_'='_x not
R33140:33140 PLF.Imp <> Y def
R33159:33162 PLF.Imp <> :com:com_scope:x_':='_x not
R33158:33158 PLF.Imp <> X def
R33164:33166 PLF.Imp <> :com::x_'+'_x not
R33163:33163 PLF.Imp <> X def
prf 33445:33469 <> fold_constants_aexp_sound
R33475:33486 PLF.Equiv <> atrans_sound def
R33488:33506 PLF.Equiv <> fold_constants_aexp def
R33525:33536 PLF.Equiv <> atrans_sound def
R33556:33561 PLF.Equiv <> aequiv def
R33972:33990 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R33972:33990 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R33972:33990 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R33972:33990 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
R34016:34034 PLF.Equiv <> fold_constants_aexp def
prf 36963:36987 <> fold_constants_bexp_sound
R36992:37003 PLF.Equiv <> btrans_sound def
R37005:37023 PLF.Equiv <> fold_constants_bexp def
R37042:37053 PLF.Equiv <> btrans_sound def
R37073:37078 PLF.Equiv <> bequiv def
R37206:37224 PLF.Equiv <> fold_constants_aexp def
R37206:37224 PLF.Equiv <> fold_constants_aexp def
R37263:37281 PLF.Equiv <> fold_constants_aexp def
R37263:37281 PLF.Equiv <> fold_constants_aexp def
R37319:37323 PLF.Imp <> aeval def
R37338:37342 PLF.Imp <> aeval def
R37385:37409 PLF.Equiv <> fold_constants_aexp_sound thm
R37319:37323 PLF.Imp <> aeval def
R37338:37342 PLF.Imp <> aeval def
R37385:37409 PLF.Equiv <> fold_constants_aexp_sound thm
R37385:37409 PLF.Equiv <> fold_constants_aexp_sound thm
R37439:37443 PLF.Imp <> aeval def
R37458:37462 PLF.Imp <> aeval def
R37505:37529 PLF.Equiv <> fold_constants_aexp_sound thm
R37439:37443 PLF.Imp <> aeval def
R37458:37462 PLF.Imp <> aeval def
R37505:37529 PLF.Equiv <> fold_constants_aexp_sound thm
R37505:37529 PLF.Equiv <> fold_constants_aexp_sound thm
R37716:37719 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R37716:37719 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R37778:37796 PLF.Equiv <> fold_constants_aexp def
R37778:37796 PLF.Equiv <> fold_constants_aexp def
R37835:37853 PLF.Equiv <> fold_constants_aexp def
R37835:37853 PLF.Equiv <> fold_constants_aexp def
R37891:37895 PLF.Imp <> aeval def
R37910:37914 PLF.Imp <> aeval def
R37957:37981 PLF.Equiv <> fold_constants_aexp_sound thm
R37891:37895 PLF.Imp <> aeval def
R37910:37914 PLF.Imp <> aeval def
R37957:37981 PLF.Equiv <> fold_constants_aexp_sound thm
R37957:37981 PLF.Equiv <> fold_constants_aexp_sound thm
R38011:38015 PLF.Imp <> aeval def
R38030:38034 PLF.Imp <> aeval def
R38077:38101 PLF.Equiv <> fold_constants_aexp_sound thm
R38011:38015 PLF.Imp <> aeval def
R38030:38034 PLF.Imp <> aeval def
R38077:38101 PLF.Equiv <> fold_constants_aexp_sound thm
R38077:38101 PLF.Equiv <> fold_constants_aexp_sound thm
R38288:38291 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R38288:38291 Coq.Init.Nat <> ::nat_scope:x_'=?'_x not
R38434:38452 PLF.Equiv <> fold_constants_bexp def
R38434:38452 PLF.Equiv <> fold_constants_bexp def
R38561:38579 PLF.Equiv <> fold_constants_bexp def
R38561:38579 PLF.Equiv <> fold_constants_bexp def
R38618:38636 PLF.Equiv <> fold_constants_bexp def
R38618:38636 PLF.Equiv <> fold_constants_bexp def
prf 38909:38932 <> fold_constants_com_sound
R38938:38949 PLF.Equiv <> ctrans_sound def
R38951:38968 PLF.Equiv <> fold_constants_com def
R38987:38998 PLF.Equiv <> ctrans_sound def
R39054:39064 PLF.Equiv <> refl_cequiv thm
R39054:39064 PLF.Equiv <> refl_cequiv thm
R39086:39101 PLF.Equiv <> CAsgn_congruence thm
R39086:39101 PLF.Equiv <> CAsgn_congruence thm
R39124:39148 PLF.Equiv <> fold_constants_aexp_sound thm
R39124:39148 PLF.Equiv <> fold_constants_aexp_sound thm
R39169:39183 PLF.Equiv <> CSeq_congruence prfax
R39169:39183 PLF.Equiv <> CSeq_congruence prfax
R39223:39228 PLF.Equiv <> bequiv def
R39233:39251 PLF.Equiv <> fold_constants_bexp def
R39223:39228 PLF.Equiv <> bequiv def
R39233:39251 PLF.Equiv <> fold_constants_bexp def
R39272:39296 PLF.Equiv <> fold_constants_bexp_sound prfax
R39272:39296 PLF.Equiv <> fold_constants_bexp_sound prfax
R39315:39333 PLF.Equiv <> fold_constants_bexp def
R39365:39378 PLF.Equiv <> CIf_congruence thm
R39315:39333 PLF.Equiv <> fold_constants_bexp def
R39365:39378 PLF.Equiv <> CIf_congruence thm
R39365:39378 PLF.Equiv <> CIf_congruence thm
R39365:39378 PLF.Equiv <> CIf_congruence thm
R39365:39378 PLF.Equiv <> CIf_congruence thm
R39365:39378 PLF.Equiv <> CIf_congruence thm
R39365:39378 PLF.Equiv <> CIf_congruence thm
R39365:39378 PLF.Equiv <> CIf_congruence thm
R39365:39378 PLF.Equiv <> CIf_congruence thm
R39590:39601 PLF.Equiv <> trans_cequiv thm
R39590:39601 PLF.Equiv <> trans_cequiv thm
R39640:39646 PLF.Equiv <> if_true thm
R39640:39646 PLF.Equiv <> if_true thm
R39700:39711 PLF.Equiv <> trans_cequiv thm
R39700:39711 PLF.Equiv <> trans_cequiv thm
R39750:39757 PLF.Equiv <> if_false thm
R39750:39757 PLF.Equiv <> if_false thm
R39800:39805 PLF.Equiv <> bequiv def
R39810:39828 PLF.Equiv <> fold_constants_bexp def
R39800:39805 PLF.Equiv <> bequiv def
R39810:39828 PLF.Equiv <> fold_constants_bexp def
R39849:39873 PLF.Equiv <> fold_constants_bexp_sound prfax
R39849:39873 PLF.Equiv <> fold_constants_bexp_sound prfax
R39892:39910 PLF.Equiv <> fold_constants_bexp def
R39936:39952 PLF.Equiv <> CWhile_congruence thm
R39892:39910 PLF.Equiv <> fold_constants_bexp def
R39936:39952 PLF.Equiv <> CWhile_congruence thm
R39936:39952 PLF.Equiv <> CWhile_congruence thm
R39936:39952 PLF.Equiv <> CWhile_congruence thm
R39936:39952 PLF.Equiv <> CWhile_congruence thm
R39936:39952 PLF.Equiv <> CWhile_congruence thm
R39936:39952 PLF.Equiv <> CWhile_congruence thm
R39936:39952 PLF.Equiv <> CWhile_congruence thm
R39936:39952 PLF.Equiv <> CWhile_congruence thm
R39980:39989 PLF.Equiv <> while_true thm
R39980:39989 PLF.Equiv <> while_true thm
R40016:40026 PLF.Equiv <> while_false thm
R40016:40026 PLF.Equiv <> while_false thm
def 41079:41097 <> optimize_0plus_aexp
R41104:41107 PLF.Imp <> aexp ind
binder 41100:41100 <> a:108
R41112:41115 PLF.Imp <> aexp ind
def 41194:41212 <> optimize_0plus_bexp
R41219:41222 PLF.Imp <> bexp ind
binder 41215:41215 <> b:110
R41227:41230 PLF.Imp <> bexp ind
def 41309:41326 <> optimize_0plus_com
R41333:41335 PLF.Imp <> com ind
binder 41329:41329 <> c:112
R41340:41342 PLF.Imp <> com ind
def 41420:41438 <> test_optimize_0plus
R41511:41518 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41445:41462 PLF.Equiv <> optimize_0plus_com prfax
R41471:41473 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R41508:41510 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R41474:41479 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R41486:41489 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R41504:41507 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R41481:41484 PLF.Imp <> :com::x_'<>'_x not
R41480:41480 PLF.Imp <> X def
R41491:41494 PLF.Imp <> :com:com_scope:x_':='_x not
R41490:41490 PLF.Imp <> X def
R41500:41502 PLF.Imp <> :com::x_'-'_x not
R41496:41498 PLF.Imp <> :com::x_'+'_x not
R41499:41499 PLF.Imp <> X def
R41519:41521 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R41552:41554 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R41522:41527 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R41534:41537 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R41548:41551 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R41529:41532 PLF.Imp <> :com::x_'<>'_x not
R41528:41528 PLF.Imp <> X def
R41539:41542 PLF.Imp <> :com:com_scope:x_':='_x not
R41538:41538 PLF.Imp <> X def
R41544:41546 PLF.Imp <> :com::x_'-'_x not
R41543:41543 PLF.Imp <> X def
prf 41808:41832 <> optimize_0plus_aexp_sound
R41837:41848 PLF.Equiv <> atrans_sound def
R41850:41868 PLF.Equiv <> optimize_0plus_aexp prfax
prf 41918:41942 <> optimize_0plus_bexp_sound
R41948:41959 PLF.Equiv <> btrans_sound def
R41961:41979 PLF.Equiv <> optimize_0plus_bexp prfax
prf 42029:42052 <> optimize_0plus_com_sound
R42058:42069 PLF.Equiv <> ctrans_sound def
R42071:42088 PLF.Equiv <> optimize_0plus_com prfax
def 42332:42340 <> optimizer
R42347:42349 PLF.Imp <> com ind
binder 42343:42343 <> c:114
R42355:42372 PLF.Equiv <> optimize_0plus_com prfax
R42375:42392 PLF.Equiv <> fold_constants_com def
R42394:42394 PLF.Equiv <> c:114 var
prf 42451:42465 <> optimizer_sound
R42471:42482 PLF.Equiv <> ctrans_sound def
R42484:42492 PLF.Equiv <> optimizer def
def 43516:43525 <> subst_aexp
R43532:43537 Coq.Strings.String <> string ind
binder 43528:43528 <> x:115
R43545:43548 PLF.Imp <> aexp ind
binder 43541:43541 <> u:116
R43556:43559 PLF.Imp <> aexp ind
binder 43552:43552 <> a:117
R43564:43567 PLF.Imp <> aexp ind
R43580:43580 PLF.Equiv <> a:117 var
R43591:43594 PLF.Imp <> ANum constr
R43613:43616 PLF.Imp <> ANum constr
R43624:43626 PLF.Imp <> AId constr
R43649:43658 Coq.Strings.String <> eqb def
R43660:43660 PLF.Equiv <> x:115 var
R43677:43679 PLF.Imp <> AId constr
R43670:43670 PLF.Equiv <> u:116 var
R43688:43690 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43698:43700 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43693:43695 PLF.Imp <> :com::x_'+'_x not
R43712:43714 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43756:43758 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43734:43736 PLF.Imp <> :com::x_'+'_x not
R43715:43715 PLF.Imp <> :com:com_scope:'('_x_')' not
R43733:43733 PLF.Imp <> :com:com_scope:'('_x_')' not
R43726:43726 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43728:43728 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43730:43730 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43729:43729 PLF.Equiv <> u:116 var
R43727:43727 PLF.Equiv <> x:115 var
R43716:43725 PLF.Equiv <> subst_aexp:118 def
R43737:43737 PLF.Imp <> :com:com_scope:'('_x_')' not
R43755:43755 PLF.Imp <> :com:com_scope:'('_x_')' not
R43748:43748 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43750:43750 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43752:43752 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43751:43751 PLF.Equiv <> u:116 var
R43749:43749 PLF.Equiv <> x:115 var
R43738:43747 PLF.Equiv <> subst_aexp:118 def
R43764:43766 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43774:43776 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43769:43771 PLF.Imp <> :com::x_'-'_x not
R43787:43789 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43831:43833 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43809:43811 PLF.Imp <> :com::x_'-'_x not
R43790:43790 PLF.Imp <> :com:com_scope:'('_x_')' not
R43808:43808 PLF.Imp <> :com:com_scope:'('_x_')' not
R43801:43801 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43803:43803 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43805:43805 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43804:43804 PLF.Equiv <> u:116 var
R43802:43802 PLF.Equiv <> x:115 var
R43791:43800 PLF.Equiv <> subst_aexp:118 def
R43812:43812 PLF.Imp <> :com:com_scope:'('_x_')' not
R43830:43830 PLF.Imp <> :com:com_scope:'('_x_')' not
R43823:43823 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43825:43825 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43827:43827 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43826:43826 PLF.Equiv <> u:116 var
R43824:43824 PLF.Equiv <> x:115 var
R43813:43822 PLF.Equiv <> subst_aexp:118 def
R43839:43841 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43849:43851 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43844:43846 PLF.Imp <> :com::x_'*'_x not
R43863:43865 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43907:43909 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43885:43887 PLF.Imp <> :com::x_'*'_x not
R43866:43866 PLF.Imp <> :com:com_scope:'('_x_')' not
R43884:43884 PLF.Imp <> :com:com_scope:'('_x_')' not
R43877:43877 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43879:43879 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43881:43881 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43880:43880 PLF.Equiv <> u:116 var
R43878:43878 PLF.Equiv <> x:115 var
R43867:43876 PLF.Equiv <> subst_aexp:118 def
R43888:43888 PLF.Imp <> :com:com_scope:'('_x_')' not
R43906:43906 PLF.Imp <> :com:com_scope:'('_x_')' not
R43899:43899 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43901:43901 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43903:43903 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R43902:43902 PLF.Equiv <> u:116 var
R43900:43900 PLF.Equiv <> x:115 var
R43889:43898 PLF.Equiv <> subst_aexp:118 def
def 43927:43939 <> subst_aexp_ex
R43979:43983 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43945:43954 PLF.Equiv <> subst_aexp def
R43956:43956 PLF.Imp <> X def
R43958:43959 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43967:43968 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43962:43964 PLF.Imp <> :com::x_'+'_x not
R43970:43971 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43977:43978 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43973:43975 PLF.Imp <> :com::x_'+'_x not
R43972:43972 PLF.Imp <> Y def
R43976:43976 PLF.Imp <> X def
R43984:43986 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44000:44001 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R43988:43990 PLF.Imp <> :com::x_'+'_x not
R43987:43987 PLF.Imp <> Y def
R43991:43991 PLF.Imp <> :com:com_scope:'('_x_')' not
R43999:43999 PLF.Imp <> :com:com_scope:'('_x_')' not
R43994:43996 PLF.Imp <> :com::x_'+'_x not
def 44203:44222 <> subst_equiv_property
binder 44241:44242 <> x1:120
binder 44244:44245 <> x2:121
binder 44247:44248 <> a1:122
binder 44250:44251 <> a2:123
R44256:44261 PLF.Equiv <> cequiv def
R44263:44265 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44284:44286 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44274:44275 PLF.Imp <> :com:com_scope:x_';'_x not
R44268:44271 PLF.Imp <> :com:com_scope:x_':='_x not
R44266:44267 PLF.Equiv <> x1:120 var
R44272:44273 PLF.Equiv <> a1:122 var
R44278:44281 PLF.Imp <> :com:com_scope:x_':='_x not
R44276:44277 PLF.Equiv <> x2:121 var
R44282:44283 PLF.Equiv <> a2:123 var
R44297:44299 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44335:44337 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44308:44309 PLF.Imp <> :com:com_scope:x_';'_x not
R44302:44305 PLF.Imp <> :com:com_scope:x_':='_x not
R44300:44301 PLF.Equiv <> x1:120 var
R44306:44307 PLF.Equiv <> a1:122 var
R44312:44315 PLF.Imp <> :com:com_scope:x_':='_x not
R44310:44311 PLF.Equiv <> x2:121 var
R44326:44326 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44329:44329 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44332:44332 PLF.Imp <> :com:com_scope:x_x_'..'_x not
R44333:44334 PLF.Equiv <> a2:123 var
R44330:44331 PLF.Equiv <> a1:122 var
R44327:44328 PLF.Equiv <> x1:120 var
R44316:44325 PLF.Equiv <> subst_aexp def
prf 44571:44583 <> subst_inequiv
R44589:44590 Coq.Init.Logic <> ::type_scope:'~'_x not
R44591:44610 PLF.Equiv <> subst_equiv_property def
R44629:44648 PLF.Equiv <> subst_equiv_property def
R44830:44832 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44865:44867 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44843:44858 PLF.Imp <> :com:com_scope:x_';'_x not
R44834:44837 PLF.Imp <> :com:com_scope:x_':='_x not
R44833:44833 PLF.Imp <> X def
R44839:44841 PLF.Imp <> :com::x_'+'_x not
R44838:44838 PLF.Imp <> X def
R44860:44863 PLF.Imp <> :com:com_scope:x_':='_x not
R44859:44859 PLF.Imp <> Y def
R44864:44864 PLF.Imp <> X def
R44830:44832 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44865:44867 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44843:44858 PLF.Imp <> :com:com_scope:x_';'_x not
R44834:44837 PLF.Imp <> :com:com_scope:x_':='_x not
R44833:44833 PLF.Imp <> X def
R44839:44841 PLF.Imp <> :com::x_'+'_x not
R44838:44838 PLF.Imp <> X def
R44860:44863 PLF.Imp <> :com:com_scope:x_':='_x not
R44859:44859 PLF.Imp <> Y def
R44864:44864 PLF.Imp <> X def
R44893:44895 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44932:44934 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44906:44921 PLF.Imp <> :com:com_scope:x_';'_x not
R44897:44900 PLF.Imp <> :com:com_scope:x_':='_x not
R44896:44896 PLF.Imp <> X def
R44902:44904 PLF.Imp <> :com::x_'+'_x not
R44901:44901 PLF.Imp <> X def
R44923:44926 PLF.Imp <> :com:com_scope:x_':='_x not
R44922:44922 PLF.Imp <> Y def
R44928:44930 PLF.Imp <> :com::x_'+'_x not
R44927:44927 PLF.Imp <> X def
R44893:44895 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44932:44934 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R44906:44921 PLF.Imp <> :com:com_scope:x_';'_x not
R44897:44900 PLF.Imp <> :com:com_scope:x_':='_x not
R44896:44896 PLF.Imp <> X def
R44902:44904 PLF.Imp <> :com::x_'+'_x not
R44901:44901 PLF.Imp <> X def
R44923:44926 PLF.Imp <> :com:com_scope:x_':='_x not
R44922:44922 PLF.Imp <> Y def
R44928:44930 PLF.Imp <> :com::x_'+'_x not
R44927:44927 PLF.Imp <> X def
R44959:44964 PLF.Equiv <> cequiv def
R44959:44964 PLF.Equiv <> cequiv def
R45200:45204 PLF.Maps <> :::x_'!->'_x_';'_x not
R45206:45208 PLF.Maps <> :::x_'!->'_x_';'_x not
R45210:45214 PLF.Imp <> :::x_'!->'_x not
R45209:45209 PLF.Imp <> X def
R45199:45199 PLF.Imp <> Y def
R45200:45204 PLF.Maps <> :::x_'!->'_x_';'_x not
R45206:45208 PLF.Maps <> :::x_'!->'_x_';'_x not
R45210:45214 PLF.Imp <> :::x_'!->'_x not
R45209:45209 PLF.Imp <> X def
R45199:45199 PLF.Imp <> Y def
R45239:45243 PLF.Maps <> :::x_'!->'_x_';'_x not
R45245:45247 PLF.Maps <> :::x_'!->'_x_';'_x not
R45249:45253 PLF.Imp <> :::x_'!->'_x not
R45248:45248 PLF.Imp <> X def
R45238:45238 PLF.Imp <> Y def
R45239:45243 PLF.Maps <> :::x_'!->'_x_';'_x not
R45245:45247 PLF.Maps <> :::x_'!->'_x_';'_x not
R45249:45253 PLF.Imp <> :::x_'!->'_x not
R45248:45248 PLF.Imp <> X def
R45238:45238 PLF.Imp <> Y def
R45288:45291 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45294:45298 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45280:45287 PLF.Imp <> empty_st def
R45328:45331 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45334:45338 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45320:45327 PLF.Imp <> empty_st def
R45393:45397 PLF.Imp <> :::x_'!->'_x not
R45392:45392 PLF.Imp <> X def
R45372:45376 PLF.Imp <> E_Seq constr
R45416:45421 PLF.Imp <> E_Asgn constr
R45288:45291 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45294:45298 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45280:45287 PLF.Imp <> empty_st def
R45328:45331 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45334:45338 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45320:45327 PLF.Imp <> empty_st def
R45328:45331 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45334:45338 PLF.Imp <> :::x_'=['_x_']=>'_x not
R45320:45327 PLF.Imp <> empty_st def
R45393:45397 PLF.Imp <> :::x_'!->'_x not
R45392:45392 PLF.Imp <> X def
R45372:45376 PLF.Imp <> E_Seq constr
R45416:45421 PLF.Imp <> E_Asgn constr
R45416:45421 PLF.Imp <> E_Asgn constr
R45393:45397 PLF.Imp <> :::x_'!->'_x not
R45392:45392 PLF.Imp <> X def
R45372:45376 PLF.Imp <> E_Seq constr
R45416:45421 PLF.Imp <> E_Asgn constr
R45416:45421 PLF.Imp <> E_Asgn constr
R45393:45397 PLF.Imp <> :::x_'!->'_x not
R45392:45392 PLF.Imp <> X def
R45372:45376 PLF.Imp <> E_Seq constr
R45416:45421 PLF.Imp <> E_Asgn constr
R45416:45421 PLF.Imp <> E_Asgn constr
R45393:45397 PLF.Imp <> :::x_'!->'_x not
R45392:45392 PLF.Imp <> X def
R45372:45376 PLF.Imp <> E_Seq constr
R45610:45612 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45633:45651 PLF.Imp <> ceval_deterministic thm
R45656:45663 PLF.Imp <> empty_st def
R45610:45612 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45633:45651 PLF.Imp <> ceval_deterministic thm
R45656:45663 PLF.Imp <> empty_st def
R45722:45724 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45721:45721 PLF.Imp <> Y def
R45729:45729 PLF.Imp <> Y def
R45722:45724 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45721:45721 PLF.Imp <> Y def
R45729:45729 PLF.Imp <> Y def
ind 46146:46165 <> var_not_used_in_aexp
constr 46202:46207 <> VNUNum
constr 46257:46261 <> VNUId
constr 46320:46326 <> VNUPlus
constr 46463:46470 <> VNUMinus
constr 46607:46613 <> VNUMult
R46172:46177 Coq.Strings.String <> string ind
binder 46168:46168 <> x:124
R46186:46189 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46182:46185 PLF.Imp <> aexp ind
binder 46218:46218 <> n:127
R46221:46240 PLF.Equiv <> var_not_used_in_aexp:125 ind
R46245:46248 PLF.Imp <> ANum constr
R46250:46250 PLF.Equiv <> n:127 var
R46242:46242 PLF.Equiv <> x:124 var
binder 46272:46272 <> y:128
R46281:46284 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46276:46279 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R46275:46275 PLF.Equiv <> x:124 var
R46280:46280 PLF.Equiv <> y:128 var
R46285:46304 PLF.Equiv <> var_not_used_in_aexp:125 ind
R46309:46311 PLF.Imp <> AId constr
R46313:46313 PLF.Equiv <> y:128 var
R46306:46306 PLF.Equiv <> x:124 var
binder 46337:46338 <> a1:129
binder 46340:46341 <> a2:130
R46375:46384 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46350:46369 PLF.Equiv <> var_not_used_in_aexp:125 ind
R46373:46374 PLF.Equiv <> a1:129 var
R46371:46371 PLF.Equiv <> x:124 var
R46410:46419 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46385:46404 PLF.Equiv <> var_not_used_in_aexp:125 ind
R46408:46409 PLF.Equiv <> a2:130 var
R46406:46406 PLF.Equiv <> x:124 var
R46420:46439 PLF.Equiv <> var_not_used_in_aexp:125 ind
R46444:46446 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R46454:46456 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R46449:46451 PLF.Imp <> :com::x_'+'_x not
R46447:46448 PLF.Equiv <> a1:129 var
R46452:46453 PLF.Equiv <> a2:130 var
R46441:46441 PLF.Equiv <> x:124 var
binder 46481:46482 <> a1:131
binder 46484:46485 <> a2:132
R46519:46528 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46494:46513 PLF.Equiv <> var_not_used_in_aexp:125 ind
R46517:46518 PLF.Equiv <> a1:131 var
R46515:46515 PLF.Equiv <> x:124 var
R46554:46563 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46529:46548 PLF.Equiv <> var_not_used_in_aexp:125 ind
R46552:46553 PLF.Equiv <> a2:132 var
R46550:46550 PLF.Equiv <> x:124 var
R46564:46583 PLF.Equiv <> var_not_used_in_aexp:125 ind
R46588:46590 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R46598:46600 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R46593:46595 PLF.Imp <> :com::x_'-'_x not
R46591:46592 PLF.Equiv <> a1:131 var
R46596:46597 PLF.Equiv <> a2:132 var
R46585:46585 PLF.Equiv <> x:124 var
binder 46624:46625 <> a1:133
binder 46627:46628 <> a2:134
R46662:46671 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46637:46656 PLF.Equiv <> var_not_used_in_aexp:125 ind
R46660:46661 PLF.Equiv <> a1:133 var
R46658:46658 PLF.Equiv <> x:124 var
R46697:46706 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46672:46691 PLF.Equiv <> var_not_used_in_aexp:125 ind
R46695:46696 PLF.Equiv <> a2:134 var
R46693:46693 PLF.Equiv <> x:124 var
R46707:46726 PLF.Equiv <> var_not_used_in_aexp:125 ind
R46731:46733 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R46741:46743 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R46736:46738 PLF.Imp <> :com::x_'*'_x not
R46734:46735 PLF.Equiv <> a1:133 var
R46739:46740 PLF.Equiv <> a2:134 var
R46728:46728 PLF.Equiv <> x:124 var
scheme 46146:46165 <> var_not_used_in_aexp_ind
scheme 46146:46165 <> var_not_used_in_aexp_sind
prf 46754:46768 <> aeval_weakening
binder 46779:46779 <> x:135
binder 46781:46782 <> st:136
binder 46784:46784 <> a:137
binder 46786:46787 <> ni:138
R46816:46821 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46792:46811 PLF.Equiv <> var_not_used_in_aexp ind
R46813:46813 PLF.Equiv <> x:135 var
R46815:46815 PLF.Equiv <> a:137 var
R46845:46847 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46822:46826 PLF.Imp <> aeval def
R46830:46834 PLF.Maps <> :::x_'!->'_x_';'_x not
R46837:46839 PLF.Maps <> :::x_'!->'_x_';'_x not
R46840:46841 PLF.Equiv <> st:136 var
R46829:46829 PLF.Equiv <> x:135 var
R46835:46836 PLF.Equiv <> ni:138 var
R46844:46844 PLF.Equiv <> a:137 var
R46848:46852 PLF.Imp <> aeval def
R46854:46855 PLF.Equiv <> st:136 var
R46857:46857 PLF.Equiv <> a:137 var
prf 47163:47178 <> inequiv_exercise
R47183:47184 Coq.Init.Logic <> ::type_scope:'~'_x not
R47185:47190 PLF.Equiv <> cequiv def
R47192:47194 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47217:47219 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47195:47200 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R47205:47208 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R47213:47216 PLF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R47201:47204 PLF.Imp <> :com::'true' not
R47209:47212 PLF.Imp <> :com:com_scope:'skip' not
R47221:47223 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47228:47230 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R47224:47227 PLF.Imp <> :com:com_scope:'skip' not
R47249:47251 Coq.Init.Logic <> not def
R47261:47266 PLF.Equiv <> cequiv def
binder 47298:47299 <> st:139
R47304:47307 PLF.Imp <> :::x_'=['_x_']=>'_x not
R47312:47316 PLF.Imp <> :::x_'=['_x_']=>'_x not
R47308:47311 PLF.Imp <> :com:com_scope:'skip' not
R47302:47303 PLF.Equiv <> st:139 var
R47317:47318 PLF.Equiv <> st:139 var
binder 47298:47299 <> st:140
R47304:47307 PLF.Imp <> :::x_'=['_x_']=>'_x not
R47312:47316 PLF.Imp <> :::x_'=['_x_']=>'_x not
R47308:47311 PLF.Imp <> :com:com_scope:'skip' not
R47302:47303 PLF.Equiv <> st:140 var
R47317:47318 PLF.Equiv <> st:140 var
R47332:47337 PLF.Imp <> E_Skip constr
R47332:47337 PLF.Imp <> E_Skip constr
R47369:47376 PLF.Imp <> empty_st def
R47369:47376 PLF.Imp <> empty_st def
R47408:47415 PLF.Imp <> empty_st def
R47408:47415 PLF.Imp <> empty_st def
R47447:47454 PLF.Imp <> empty_st def
R47447:47454 PLF.Imp <> empty_st def
R47526:47543 PLF.Equiv <> while_true_nonterm thm
R47526:47543 PLF.Equiv <> while_true_nonterm thm
R47585:47590 PLF.Equiv <> bequiv def
mod 49678:49681 <> Himp
ind 49779:49781 Himp com
constr 49797:49801 Himp CSkip
constr 49813:49817 Himp CAsgn
constr 49847:49850 Himp CSeq
constr 49876:49878 Himp CIf
constr 49912:49917 Himp CWhile
constr 49944:49949 Himp CHavoc
R49805:49807 PLF.Equiv <> com:141 ind
R49827:49830 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49821:49826 Coq.Strings.String <> string ind
R49835:49838 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49831:49834 PLF.Imp <> aexp ind
R49839:49841 PLF.Equiv <> com:141 ind
R49857:49860 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49854:49856 PLF.Equiv <> com:141 ind
R49864:49867 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49861:49863 PLF.Equiv <> com:141 ind
R49868:49870 PLF.Equiv <> com:141 ind
R49886:49889 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49882:49885 PLF.Imp <> bexp ind
R49893:49896 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49890:49892 PLF.Equiv <> com:141 ind
R49900:49903 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49897:49899 PLF.Equiv <> com:141 ind
R49904:49906 PLF.Equiv <> com:141 ind
R49925:49928 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49921:49924 PLF.Imp <> bexp ind
R49932:49935 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49929:49931 PLF.Equiv <> com:141 ind
R49936:49938 PLF.Equiv <> com:141 ind
R49959:49962 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49953:49958 Coq.Strings.String <> string ind
R49963:49965 PLF.Equiv <> com:141 ind
scheme 49779:49781 Himp com_rect
scheme 49779:49781 Himp com_ind
scheme 49779:49781 Himp com_rec
scheme 49779:49781 Himp com_sind
R50024:50029 PLF.Equiv Himp CHavoc constr
not 50008:50008 Himp :com::'havoc'_x
R50141:50145 PLF.Equiv Himp CSkip constr
not 50119:50119 Himp :com::'skip'
R50207:50211 PLF.Equiv Himp CAsgn constr
not 50184:50184 Himp :com::x_':='_x
R50355:50358 PLF.Equiv Himp CSeq constr
not 50334:50334 Himp :com::x_';'_x
R50481:50483 PLF.Equiv Himp CIf constr
not 50435:50435 Himp :com::'if'_x_'then'_x_'else'_x_'end'
R50636:50641 PLF.Equiv Himp CWhile constr
not 50598:50598 Himp :com::'while'_x_'do'_x_'end'
ind 51184:51188 Himp ceval
constr 51229:51234 Himp E_Skip
constr 51277:51282 Himp E_Asgn
constr 51370:51374 Himp E_Seq
constr 51494:51501 Himp E_IfTrue
constr 51630:51638 Himp E_IfFalse
constr 51768:51779 Himp E_WhileFalse
constr 51866:51876 Himp E_WhileTrue
constr 52042:52048 Himp E_Havoc
R51195:51198 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51192:51194 PLF.Equiv Himp com ind
R51204:51207 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51199:51203 PLF.Imp <> state def
R51213:51216 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51208:51212 PLF.Imp <> state def
R52137:52141 PLF.Equiv <> ceval:144 ind
binder 51245:51246 <> st:145
R51257:51260 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51265:51269 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51261:51264 PLF.Equiv Himp :com::'skip' not
R51255:51256 PLF.Equiv <> st:145 var
R51270:51271 PLF.Equiv <> st:145 var
binder 51294:51295 <> st:146
binder 51297:51297 <> a:147
binder 51299:51299 <> n:148
binder 51301:51301 <> x:149
R51324:51333 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51320:51322 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51310:51314 PLF.Imp <> aeval def
R51316:51317 PLF.Equiv <> st:146 var
R51319:51319 PLF.Equiv <> a:147 var
R51323:51323 PLF.Equiv <> n:148 var
R51336:51339 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51346:51351 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51364:51364 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51341:51344 PLF.Equiv Himp :com::x_':='_x not
R51340:51340 PLF.Equiv <> x:149 var
R51345:51345 PLF.Equiv <> a:147 var
R51334:51335 PLF.Equiv <> st:146 var
R51353:51357 PLF.Maps <> :::x_'!->'_x_';'_x not
R51359:51361 PLF.Maps <> :::x_'!->'_x_';'_x not
R51362:51363 PLF.Equiv <> st:146 var
R51352:51352 PLF.Equiv <> x:149 var
R51358:51358 PLF.Equiv <> n:148 var
binder 51385:51386 <> c1:150
binder 51388:51389 <> c2:151
binder 51391:51392 <> st:152
binder 51394:51396 <> st':153
binder 51398:51401 <> st'':154
R51427:51437 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51412:51416 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51419:51423 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51417:51418 PLF.Equiv <> c1:150 var
R51410:51411 PLF.Equiv <> st:152 var
R51424:51426 PLF.Equiv <> st':153 var
R51456:51465 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51441:51444 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51447:51451 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51445:51446 PLF.Equiv <> c2:151 var
R51438:51440 PLF.Equiv <> st':153 var
R51452:51455 PLF.Equiv <> st'':154 var
R51468:51472 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51480:51484 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51475:51477 PLF.Equiv Himp :com::x_';'_x not
R51473:51474 PLF.Equiv <> c1:150 var
R51478:51479 PLF.Equiv <> c2:151 var
R51466:51467 PLF.Equiv <> st:152 var
R51485:51488 PLF.Equiv <> st'':154 var
binder 51512:51513 <> st:155
binder 51515:51517 <> st':156
binder 51519:51519 <> b:157
binder 51521:51522 <> c1:158
binder 51524:51525 <> c2:159
R51551:51560 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51544:51546 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51534:51538 PLF.Imp <> beval def
R51540:51541 PLF.Equiv <> st:155 var
R51543:51543 PLF.Equiv <> b:157 var
R51547:51550 PLF.Imp <> :::'true' not
R51577:51586 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51563:51566 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51569:51573 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51567:51568 PLF.Equiv <> c1:158 var
R51561:51562 PLF.Equiv <> st:155 var
R51574:51576 PLF.Equiv <> st':156 var
R51589:51592 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51617:51621 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51593:51595 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51597:51602 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51605:51610 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51613:51616 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51596:51596 PLF.Equiv <> b:157 var
R51603:51604 PLF.Equiv <> c1:158 var
R51611:51612 PLF.Equiv <> c2:159 var
R51587:51588 PLF.Equiv <> st:155 var
R51622:51624 PLF.Equiv <> st':156 var
binder 51649:51650 <> st:160
binder 51652:51654 <> st':161
binder 51656:51656 <> b:162
binder 51658:51659 <> c1:163
binder 51661:51662 <> c2:164
R51689:51698 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51681:51683 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51671:51675 PLF.Imp <> beval def
R51677:51678 PLF.Equiv <> st:160 var
R51680:51680 PLF.Equiv <> b:162 var
R51684:51688 PLF.Imp <> :::'false' not
R51715:51724 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51701:51704 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51707:51711 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51705:51706 PLF.Equiv <> c2:164 var
R51699:51700 PLF.Equiv <> st:160 var
R51712:51714 PLF.Equiv <> st':161 var
R51727:51730 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51755:51759 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51731:51733 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51735:51740 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51743:51748 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51751:51754 PLF.Equiv Himp :com::'if'_x_'then'_x_'else'_x_'end' not
R51734:51734 PLF.Equiv <> b:162 var
R51741:51742 PLF.Equiv <> c1:163 var
R51749:51750 PLF.Equiv <> c2:164 var
R51725:51726 PLF.Equiv <> st:160 var
R51760:51762 PLF.Equiv <> st':161 var
binder 51790:51790 <> b:165
binder 51792:51793 <> st:166
binder 51795:51795 <> c:167
R51822:51831 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51814:51816 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51804:51808 PLF.Imp <> beval def
R51810:51811 PLF.Equiv <> st:166 var
R51813:51813 PLF.Equiv <> b:165 var
R51817:51821 PLF.Imp <> :::'false' not
R51834:51837 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51854:51858 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51838:51843 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R51845:51848 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R51850:51853 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R51844:51844 PLF.Equiv <> b:165 var
R51849:51849 PLF.Equiv <> c:167 var
R51832:51833 PLF.Equiv <> st:166 var
R51859:51860 PLF.Equiv <> st:166 var
binder 51887:51888 <> st:168
binder 51890:51892 <> st':169
binder 51894:51897 <> st'':170
binder 51899:51899 <> b:171
binder 51901:51901 <> c:172
R51927:51936 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51920:51922 Coq.Init.Logic <> ::type_scope:x_'='_x not
R51910:51914 PLF.Imp <> beval def
R51916:51917 PLF.Equiv <> st:168 var
R51919:51919 PLF.Equiv <> b:171 var
R51923:51926 PLF.Imp <> :::'true' not
R51953:51962 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51939:51943 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51945:51949 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51944:51944 PLF.Equiv <> c:172 var
R51937:51938 PLF.Equiv <> st:168 var
R51950:51952 PLF.Equiv <> st':169 var
R51995:52004 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51966:51969 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51986:51990 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R51970:51975 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R51977:51980 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R51982:51985 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R51976:51976 PLF.Equiv <> b:171 var
R51981:51981 PLF.Equiv <> c:172 var
R51963:51965 PLF.Equiv <> st':169 var
R51991:51994 PLF.Equiv <> st'':170 var
R52007:52011 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52028:52032 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52012:52017 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R52019:52022 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R52024:52027 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R52018:52018 PLF.Equiv <> b:171 var
R52023:52023 PLF.Equiv <> c:172 var
R52005:52006 PLF.Equiv <> st:168 var
R52033:52036 PLF.Equiv <> st'':170 var
binder 52059:52060 <> st:173
binder 52062:52062 <> X:174
binder 52064:52064 <> n:175
R52075:52078 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52086:52091 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52104:52104 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52079:52084 PLF.Equiv Himp :com::'havoc'_x not
R52085:52085 PLF.Equiv <> X:174 var
R52073:52074 PLF.Equiv <> st:173 var
R52093:52097 PLF.Maps <> :::x_'!->'_x_';'_x not
R52099:52101 PLF.Maps <> :::x_'!->'_x_';'_x not
R52102:52103 PLF.Equiv <> st:173 var
R52092:52092 PLF.Equiv <> X:174 var
R52098:52098 PLF.Equiv <> n:175 var
scheme 51184:51188 Himp ceval_ind
scheme 51184:51188 Himp ceval_sind
R52137:52141 PLF.Equiv Himp ceval ind
not 52115:52115 Himp :::x_'=['_x_']=>'_x
def 52255:52268 Himp havoc_example1
R52280:52283 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52291:52296 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52304:52304 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52284:52289 PLF.Equiv Himp :com::'havoc'_x not
R52290:52290 PLF.Imp <> X def
R52272:52279 PLF.Imp <> empty_st def
R52298:52302 PLF.Imp <> :::x_'!->'_x not
R52297:52297 PLF.Imp <> X def
R52322:52328 PLF.Equiv Himp E_Havoc constr
R52322:52328 PLF.Equiv Himp E_Havoc constr
def 52345:52358 Himp havoc_example2
R52372:52375 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52389:52394 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52403:52403 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52380:52381 PLF.Equiv Himp :com::x_';'_x not
R52376:52379 PLF.Equiv Himp :com::'skip' not
R52382:52387 PLF.Equiv Himp :com::'havoc'_x not
R52388:52388 PLF.Imp <> Z def
R52364:52371 PLF.Imp <> empty_st def
R52396:52400 PLF.Imp <> :::x_'!->'_x not
R52395:52395 PLF.Imp <> Z def
R52432:52439 PLF.Imp <> empty_st def
R52421:52425 PLF.Equiv Himp E_Seq constr
R52432:52439 PLF.Imp <> empty_st def
R52421:52425 PLF.Equiv Himp E_Seq constr
R52452:52457 PLF.Equiv Himp E_Skip constr
R52452:52457 PLF.Equiv Himp E_Skip constr
R52470:52476 PLF.Equiv Himp E_Havoc constr
R52470:52476 PLF.Equiv Himp E_Havoc constr
def 52536:52572 Himp manual_grade_for_Check_rule_for_HAVOC
R52576:52581 Coq.Init.Datatypes <> option ind
R52587:52587 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R52584:52586 Coq.Init.Datatypes <> nat ind
R52588:52593 Coq.Strings.String <> string ind
R52599:52602 Coq.Init.Datatypes <> None constr
def 52704:52709 Himp cequiv
R52720:52722 PLF.Equiv Himp com ind
binder 52712:52713 <> c1:176
binder 52715:52716 <> c2:177
R52751:52755 PLF.Imp <> state def
binder 52742:52743 <> st:178
binder 52745:52747 <> st':179
R52776:52780 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R52762:52765 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52768:52772 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52766:52767 PLF.Equiv <> c1:176 var
R52760:52761 PLF.Equiv <> st:178 var
R52773:52775 PLF.Equiv <> st':179 var
R52783:52786 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52789:52793 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R52787:52788 PLF.Equiv <> c2:177 var
R52781:52782 PLF.Equiv <> st:178 var
R52794:52796 PLF.Equiv <> st':179 var
def 53020:53022 Himp pXY
R53029:53031 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R53049:53051 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R53039:53041 PLF.Equiv Himp :com::x_';'_x not
R53032:53037 PLF.Equiv Himp :com::'havoc'_x not
R53038:53038 PLF.Imp <> X def
R53042:53047 PLF.Equiv Himp :com::'havoc'_x not
R53048:53048 PLF.Imp <> Y def
def 53066:53068 Himp pYX
R53075:53077 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R53094:53096 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R53085:53086 PLF.Equiv Himp :com::x_';'_x not
R53078:53083 PLF.Equiv Himp :com::'havoc'_x not
R53084:53084 PLF.Imp <> Y def
R53087:53092 PLF.Equiv Himp :com::'havoc'_x not
R53093:53093 PLF.Imp <> X def
prf 53203:53216 Himp pXY_cequiv_pYX
R53236:53239 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R53222:53227 PLF.Equiv Himp cequiv def
R53229:53231 PLF.Equiv Himp pXY def
R53233:53235 PLF.Equiv Himp pYX def
R53240:53240 Coq.Init.Logic <> ::type_scope:'~'_x not
R53241:53246 PLF.Equiv Himp cequiv def
R53248:53250 PLF.Equiv Himp pXY def
R53252:53254 PLF.Equiv Himp pYX def
R53472:53477 PLF.Equiv Himp cequiv def
R53498:53500 PLF.Equiv Himp pXY def
R53510:53512 PLF.Equiv Himp pYX def
R53629:53633 PLF.Maps <> :::x_'!->'_x_';'_x not
R53636:53638 PLF.Maps <> :::x_'!->'_x_';'_x not
R53628:53628 PLF.Imp <> Y def
R53616:53620 PLF.Equiv Himp E_Seq constr
R53629:53633 PLF.Maps <> :::x_'!->'_x_';'_x not
R53636:53638 PLF.Maps <> :::x_'!->'_x_';'_x not
R53628:53628 PLF.Imp <> Y def
R53616:53620 PLF.Equiv Himp E_Seq constr
R53656:53662 PLF.Equiv Himp E_Havoc constr
R53656:53662 PLF.Equiv Himp E_Havoc constr
R53679:53694 PLF.Maps <> t_update_permute prfax
R53679:53694 PLF.Maps <> t_update_permute prfax
R53679:53694 PLF.Maps <> t_update_permute prfax
R53679:53694 PLF.Maps <> t_update_permute prfax
R53712:53718 PLF.Equiv Himp E_Havoc constr
R53712:53718 PLF.Equiv Himp E_Havoc constr
R53840:53844 PLF.Maps <> :::x_'!->'_x_';'_x not
R53847:53849 PLF.Maps <> :::x_'!->'_x_';'_x not
R53839:53839 PLF.Imp <> X def
R53827:53831 PLF.Equiv Himp E_Seq constr
R53840:53844 PLF.Maps <> :::x_'!->'_x_';'_x not
R53847:53849 PLF.Maps <> :::x_'!->'_x_';'_x not
R53839:53839 PLF.Imp <> X def
R53827:53831 PLF.Equiv Himp E_Seq constr
R53867:53873 PLF.Equiv Himp E_Havoc constr
R53867:53873 PLF.Equiv Himp E_Havoc constr
R53890:53905 PLF.Maps <> t_update_permute prfax
R53890:53905 PLF.Maps <> t_update_permute prfax
R53890:53905 PLF.Maps <> t_update_permute prfax
R53890:53905 PLF.Maps <> t_update_permute prfax
R53923:53929 PLF.Equiv Himp E_Havoc constr
R53923:53929 PLF.Equiv Himp E_Havoc constr
def 54093:54098 Himp ptwice
R54105:54107 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R54124:54126 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R54115:54116 PLF.Equiv Himp :com::x_';'_x not
R54108:54113 PLF.Equiv Himp :com::'havoc'_x not
R54114:54114 PLF.Imp <> X def
R54117:54122 PLF.Equiv Himp :com::'havoc'_x not
R54123:54123 PLF.Imp <> Y def
def 54141:54145 Himp pcopy
R54152:54154 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R54170:54172 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R54162:54163 PLF.Equiv Himp :com::x_';'_x not
R54155:54160 PLF.Equiv Himp :com::'havoc'_x not
R54161:54161 PLF.Imp <> X def
R54165:54168 PLF.Equiv Himp :com::x_':='_x not
R54164:54164 PLF.Imp <> Y def
R54169:54169 PLF.Imp <> X def
prf 54343:54361 Himp ptwice_cequiv_pcopy
R54386:54389 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R54367:54372 PLF.Equiv Himp cequiv def
R54374:54379 PLF.Equiv Himp ptwice def
R54381:54385 PLF.Equiv Himp pcopy def
R54390:54390 Coq.Init.Logic <> ::type_scope:'~'_x not
R54391:54396 PLF.Equiv Himp cequiv def
R54398:54403 PLF.Equiv Himp ptwice def
R54405:54409 PLF.Equiv Himp pcopy def
def 55109:55110 Himp p1
R55114:55116 PLF.Equiv Himp com ind
R55123:55125 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R55187:55189 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R55126:55131 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55141:55151 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55178:55186 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55132:55133 PLF.Imp <> :com::'~'_x not
R55134:55134 PLF.Imp <> :com:com_scope:'('_x_')' not
R55140:55140 PLF.Imp <> :com:com_scope:'('_x_')' not
R55136:55138 PLF.Imp <> :com::x_'='_x not
R55135:55135 PLF.Imp <> X def
R55159:55167 PLF.Equiv Himp :com::x_';'_x not
R55152:55157 PLF.Equiv Himp :com::'havoc'_x not
R55158:55158 PLF.Imp <> Y def
R55169:55172 PLF.Equiv Himp :com::x_':='_x not
R55168:55168 PLF.Imp <> X def
R55174:55176 PLF.Imp <> :com::x_'+'_x not
R55173:55173 PLF.Imp <> X def
def 55204:55205 Himp p2
R55209:55211 PLF.Equiv Himp com ind
R55218:55220 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R55260:55262 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R55221:55226 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55236:55246 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55251:55259 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55227:55228 PLF.Imp <> :com::'~'_x not
R55229:55229 PLF.Imp <> :com:com_scope:'('_x_')' not
R55235:55235 PLF.Imp <> :com:com_scope:'('_x_')' not
R55231:55233 PLF.Imp <> :com::x_'='_x not
R55230:55230 PLF.Imp <> X def
R55247:55250 PLF.Equiv Himp :com::'skip' not
prf 55524:55537 Himp p1_may_diverge
binder 55548:55549 <> st:180
binder 55551:55553 <> st':181
R55565:55570 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R55560:55563 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R55556:55557 PLF.Equiv <> st:180 var
R55559:55559 PLF.Imp <> X def
R55571:55572 Coq.Init.Logic <> ::type_scope:'~'_x not
R55575:55578 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R55581:55585 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R55579:55580 PLF.Equiv Himp p1 def
R55573:55574 PLF.Equiv <> st:180 var
R55586:55588 PLF.Equiv <> st':181 var
R55608:55610 Coq.Init.Logic <> not def
R55628:55629 PLF.Equiv Himp p1 def
R55649:55651 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R55694:55696 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R55652:55657 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55667:55670 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55690:55693 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55658:55659 PLF.Imp <> :com::'~'_x not
R55660:55660 PLF.Imp <> :com:com_scope:'('_x_')' not
R55666:55666 PLF.Imp <> :com:com_scope:'('_x_')' not
R55662:55664 PLF.Imp <> :com::x_'='_x not
R55661:55661 PLF.Imp <> X def
R55678:55679 PLF.Equiv Himp :com::x_';'_x not
R55671:55676 PLF.Equiv Himp :com::'havoc'_x not
R55677:55677 PLF.Imp <> Y def
R55681:55684 PLF.Equiv Himp :com::x_':='_x not
R55680:55680 PLF.Imp <> X def
R55686:55688 PLF.Imp <> :com::x_'+'_x not
R55685:55685 PLF.Imp <> X def
R55649:55651 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R55694:55696 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R55652:55657 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55667:55670 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55690:55693 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R55658:55659 PLF.Imp <> :com::'~'_x not
R55660:55660 PLF.Imp <> :com:com_scope:'('_x_')' not
R55666:55666 PLF.Imp <> :com:com_scope:'('_x_')' not
R55662:55664 PLF.Imp <> :com::x_'='_x not
R55661:55661 PLF.Imp <> X def
R55678:55679 PLF.Equiv Himp :com::x_';'_x not
R55671:55676 PLF.Equiv Himp :com::'havoc'_x not
R55677:55677 PLF.Imp <> Y def
R55681:55684 PLF.Equiv Himp :com::x_':='_x not
R55680:55680 PLF.Imp <> X def
R55686:55688 PLF.Imp <> :com::x_'+'_x not
R55685:55685 PLF.Imp <> X def
R55785:55798 Coq.Bool.Bool <> negb_false_iff thm
R55785:55798 Coq.Bool.Bool <> negb_false_iff thm
R55817:55822 Coq.Arith.PeanoNat Nat eqb_eq thm
R55817:55822 Coq.Arith.PeanoNat Nat eqb_eq thm
R55936:55946 PLF.Maps <> t_update_eq prfax
R55936:55946 PLF.Maps <> t_update_eq prfax
R55936:55946 PLF.Maps <> t_update_eq prfax
prf 55997:56010 Himp p2_may_diverge
binder 56021:56022 <> st:182
binder 56024:56026 <> st':183
R56038:56043 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56033:56036 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R56029:56030 PLF.Equiv <> st:182 var
R56032:56032 PLF.Imp <> X def
R56044:56045 Coq.Init.Logic <> ::type_scope:'~'_x not
R56048:56051 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R56054:56058 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R56052:56053 PLF.Equiv Himp p2 def
R56046:56047 PLF.Equiv <> st:182 var
R56059:56061 PLF.Equiv <> st':183 var
R56080:56082 Coq.Init.Logic <> not def
R56100:56101 PLF.Equiv Himp p2 def
R56121:56123 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R56151:56153 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R56124:56129 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R56139:56142 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R56147:56150 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R56130:56131 PLF.Imp <> :com::'~'_x not
R56132:56132 PLF.Imp <> :com:com_scope:'('_x_')' not
R56138:56138 PLF.Imp <> :com:com_scope:'('_x_')' not
R56134:56136 PLF.Imp <> :com::x_'='_x not
R56133:56133 PLF.Imp <> X def
R56143:56146 PLF.Equiv Himp :com::'skip' not
R56121:56123 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R56151:56153 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R56124:56129 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R56139:56142 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R56147:56150 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R56130:56131 PLF.Imp <> :com::'~'_x not
R56132:56132 PLF.Imp <> :com:com_scope:'('_x_')' not
R56138:56138 PLF.Imp <> :com:com_scope:'('_x_')' not
R56134:56136 PLF.Imp <> :com::x_'='_x not
R56133:56133 PLF.Imp <> X def
R56143:56146 PLF.Equiv Himp :com::'skip' not
R56242:56255 Coq.Bool.Bool <> negb_false_iff thm
R56242:56255 Coq.Bool.Bool <> negb_false_iff thm
R56274:56279 Coq.Arith.PeanoNat Nat eqb_eq thm
R56274:56279 Coq.Arith.PeanoNat Nat eqb_eq thm
prf 56550:56560 Himp p1_p2_equiv
R56564:56569 PLF.Equiv Himp cequiv def
R56571:56572 PLF.Equiv Himp p1 def
R56574:56575 PLF.Equiv Himp p2 def
R56595:56600 PLF.Equiv Himp cequiv def
R56662:56673 PLF.Equiv Himp E_WhileFalse constr
R56662:56673 PLF.Equiv Himp E_WhileFalse constr
R56662:56673 PLF.Equiv Himp E_WhileFalse constr
R56662:56673 PLF.Equiv Himp E_WhileFalse constr
R56662:56673 PLF.Equiv Himp E_WhileFalse constr
R56699:56712 PLF.Equiv Himp p1_may_diverge thm
R56699:56712 PLF.Equiv Himp p1_may_diverge thm
R56765:56778 Coq.Bool.Bool <> negb_false_iff thm
R56765:56778 Coq.Bool.Bool <> negb_false_iff thm
R56795:56809 Coq.Bool.Bool <> negb_involutive thm
R56795:56809 Coq.Bool.Bool <> negb_involutive thm
R56795:56809 Coq.Bool.Bool <> negb_involutive thm
R56831:56837 Coq.Arith.PeanoNat Nat eqb_neq thm
R56831:56837 Coq.Arith.PeanoNat Nat eqb_neq thm
R56868:56881 PLF.Equiv Himp p2_may_diverge thm
R56868:56881 PLF.Equiv Himp p2_may_diverge thm
R56934:56947 Coq.Bool.Bool <> negb_false_iff thm
R56934:56947 Coq.Bool.Bool <> negb_false_iff thm
R56964:56978 Coq.Bool.Bool <> negb_involutive thm
R56964:56978 Coq.Bool.Bool <> negb_involutive thm
R56964:56978 Coq.Bool.Bool <> negb_involutive thm
R57000:57006 Coq.Arith.PeanoNat Nat eqb_neq thm
R57000:57006 Coq.Arith.PeanoNat Nat eqb_neq thm
def 57263:57264 Himp p3
R57268:57270 PLF.Equiv Himp com ind
R57277:57279 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R57348:57350 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R57286:57292 PLF.Equiv Himp :com::x_';'_x not
R57281:57284 PLF.Equiv Himp :com::x_':='_x not
R57280:57280 PLF.Imp <> Z def
R57293:57298 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R57305:57315 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R57339:57347 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R57300:57303 PLF.Imp <> :com::x_'<>'_x not
R57299:57299 PLF.Imp <> X def
R57323:57331 PLF.Equiv Himp :com::x_';'_x not
R57316:57321 PLF.Equiv Himp :com::'havoc'_x not
R57322:57322 PLF.Imp <> X def
R57332:57337 PLF.Equiv Himp :com::'havoc'_x not
R57338:57338 PLF.Imp <> Z def
def 57365:57366 Himp p4
R57370:57372 PLF.Equiv Himp com ind
R57379:57381 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R57401:57403 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R57388:57394 PLF.Equiv Himp :com::x_';'_x not
R57383:57386 PLF.Equiv Himp :com::x_':='_x not
R57382:57382 PLF.Imp <> X def
R57396:57399 PLF.Equiv Himp :com::x_':='_x not
R57395:57395 PLF.Imp <> Z def
prf 57415:57427 Himp p3_p4_inequiv
R57431:57432 Coq.Init.Logic <> ::type_scope:'~'_x not
R57433:57438 PLF.Equiv Himp cequiv def
R57440:57441 PLF.Equiv Himp p3 def
R57443:57444 PLF.Equiv Himp p4 def
R57464:57466 Coq.Init.Logic <> not def
R57476:57481 PLF.Equiv Himp cequiv def
R57521:57525 PLF.Imp <> :::x_'!->'_x not
R57520:57520 PLF.Imp <> X def
R57540:57544 PLF.Maps <> :::x_'!->'_x_';'_x not
R57546:57548 PLF.Maps <> :::x_'!->'_x_';'_x not
R57550:57554 PLF.Imp <> :::x_'!->'_x not
R57549:57549 PLF.Imp <> X def
R57539:57539 PLF.Imp <> Z def
R57521:57525 PLF.Imp <> :::x_'!->'_x not
R57520:57520 PLF.Imp <> X def
R57540:57544 PLF.Maps <> :::x_'!->'_x_';'_x not
R57546:57548 PLF.Maps <> :::x_'!->'_x_';'_x not
R57550:57554 PLF.Imp <> :::x_'!->'_x not
R57549:57549 PLF.Imp <> X def
R57539:57539 PLF.Imp <> Z def
R57574:57574 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57582:57586 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57589:57594 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57612:57612 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57587:57588 PLF.Equiv Himp p3 def
R57576:57580 PLF.Imp <> :::x_'!->'_x not
R57575:57575 PLF.Imp <> X def
R57596:57600 PLF.Maps <> :::x_'!->'_x_';'_x not
R57602:57604 PLF.Maps <> :::x_'!->'_x_';'_x not
R57606:57610 PLF.Imp <> :::x_'!->'_x not
R57605:57605 PLF.Imp <> X def
R57595:57595 PLF.Imp <> Z def
R57574:57574 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57582:57586 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57589:57594 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57612:57612 PLF.Equiv Himp :::x_'=['_x_']=>'_x not
R57587:57588 PLF.Equiv Himp p3 def
R57576:57580 PLF.Imp <> :::x_'!->'_x not
R57575:57575 PLF.Imp <> X def
R57596:57600 PLF.Maps <> :::x_'!->'_x_';'_x not
R57602:57604 PLF.Maps <> :::x_'!->'_x_';'_x not
R57606:57610 PLF.Imp <> :::x_'!->'_x not
R57605:57605 PLF.Imp <> X def
R57595:57595 PLF.Imp <> Z def
R57639:57643 PLF.Maps <> :::x_'!->'_x_';'_x not
R57645:57647 PLF.Maps <> :::x_'!->'_x_';'_x not
R57649:57653 PLF.Imp <> :::x_'!->'_x not
R57648:57648 PLF.Imp <> X def
R57638:57638 PLF.Imp <> Z def
R57626:57630 PLF.Equiv Himp E_Seq constr
R57639:57643 PLF.Maps <> :::x_'!->'_x_';'_x not
R57645:57647 PLF.Maps <> :::x_'!->'_x_';'_x not
R57649:57653 PLF.Imp <> :::x_'!->'_x not
R57648:57648 PLF.Imp <> X def
R57638:57638 PLF.Imp <> Z def
R57626:57630 PLF.Equiv Himp E_Seq constr
R57670:57675 PLF.Equiv Himp E_Asgn constr
R57670:57675 PLF.Equiv Himp E_Asgn constr
R57722:57726 PLF.Maps <> :::x_'!->'_x_';'_x not
R57728:57730 PLF.Maps <> :::x_'!->'_x_';'_x not
R57732:57736 PLF.Imp <> :::x_'!->'_x not
R57731:57731 PLF.Imp <> X def
R57721:57721 PLF.Imp <> Z def
R57703:57713 PLF.Equiv Himp E_WhileTrue constr
R57722:57726 PLF.Maps <> :::x_'!->'_x_';'_x not
R57728:57730 PLF.Maps <> :::x_'!->'_x_';'_x not
R57732:57736 PLF.Imp <> :::x_'!->'_x not
R57731:57731 PLF.Imp <> X def
R57721:57721 PLF.Imp <> Z def
R57703:57713 PLF.Equiv Himp E_WhileTrue constr
R57789:57793 PLF.Maps <> :::x_'!->'_x_';'_x not
R57795:57796 PLF.Maps <> :::x_'!->'_x_';'_x not
R57798:57802 PLF.Maps <> :::x_'!->'_x_';'_x not
R57804:57805 PLF.Maps <> :::x_'!->'_x_';'_x not
R57807:57811 PLF.Imp <> :::x_'!->'_x not
R57806:57806 PLF.Imp <> Z def
R57797:57797 PLF.Imp <> X def
R57788:57788 PLF.Imp <> X def
R57776:57780 PLF.Equiv Himp E_Seq constr
R57789:57793 PLF.Maps <> :::x_'!->'_x_';'_x not
R57795:57796 PLF.Maps <> :::x_'!->'_x_';'_x not
R57798:57802 PLF.Maps <> :::x_'!->'_x_';'_x not
R57804:57805 PLF.Maps <> :::x_'!->'_x_';'_x not
R57807:57811 PLF.Imp <> :::x_'!->'_x not
R57806:57806 PLF.Imp <> Z def
R57797:57797 PLF.Imp <> X def
R57788:57788 PLF.Imp <> X def
R57776:57780 PLF.Equiv Himp E_Seq constr
R57834:57849 PLF.Maps <> t_update_permute prfax
R57834:57849 PLF.Maps <> t_update_permute prfax
R57834:57849 PLF.Maps <> t_update_permute prfax
R57834:57849 PLF.Maps <> t_update_permute prfax
R57901:57915 PLF.Maps <> t_update_shadow prfax
R57901:57915 PLF.Maps <> t_update_shadow prfax
R57901:57915 PLF.Maps <> t_update_shadow prfax
R57926:57941 PLF.Maps <> t_update_permute prfax
R57926:57941 PLF.Maps <> t_update_permute prfax
R57926:57941 PLF.Maps <> t_update_permute prfax
R57926:57941 PLF.Maps <> t_update_permute prfax
R57981:57981 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58007:58011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58028:58028 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57983:57987 PLF.Maps <> :::x_'!->'_x_';'_x not
R57989:57990 PLF.Maps <> :::x_'!->'_x_';'_x not
R57992:57996 PLF.Maps <> :::x_'!->'_x_';'_x not
R57998:57999 PLF.Maps <> :::x_'!->'_x_';'_x not
R58001:58005 PLF.Imp <> :::x_'!->'_x not
R58000:58000 PLF.Imp <> X def
R57991:57991 PLF.Imp <> Z def
R57982:57982 PLF.Imp <> Z def
R58013:58017 PLF.Maps <> :::x_'!->'_x_';'_x not
R58019:58020 PLF.Maps <> :::x_'!->'_x_';'_x not
R58022:58026 PLF.Imp <> :::x_'!->'_x not
R58021:58021 PLF.Imp <> X def
R58012:58012 PLF.Imp <> Z def
R57981:57981 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58007:58011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58028:58028 Coq.Init.Logic <> ::type_scope:x_'='_x not
R57983:57987 PLF.Maps <> :::x_'!->'_x_';'_x not
R57989:57990 PLF.Maps <> :::x_'!->'_x_';'_x not
R57992:57996 PLF.Maps <> :::x_'!->'_x_';'_x not
R57998:57999 PLF.Maps <> :::x_'!->'_x_';'_x not
R58001:58005 PLF.Imp <> :::x_'!->'_x not
R58000:58000 PLF.Imp <> X def
R57991:57991 PLF.Imp <> Z def
R57982:57982 PLF.Imp <> Z def
R58013:58017 PLF.Maps <> :::x_'!->'_x_';'_x not
R58019:58020 PLF.Maps <> :::x_'!->'_x_';'_x not
R58022:58026 PLF.Imp <> :::x_'!->'_x not
R58021:58021 PLF.Imp <> X def
R58012:58012 PLF.Imp <> Z def
R58052:58066 PLF.Maps <> t_update_shadow prfax
R58052:58066 PLF.Maps <> t_update_shadow prfax
R58052:58066 PLF.Maps <> t_update_shadow prfax
R58136:58147 PLF.Equiv Himp E_WhileFalse constr
R58136:58147 PLF.Equiv Himp E_WhileFalse constr
R58267:58281 PLF.Maps <> t_update_shadow prfax
R58267:58281 PLF.Maps <> t_update_shadow prfax
R58267:58281 PLF.Maps <> t_update_shadow prfax
R58321:58323 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58301:58301 PLF.Maps <> :::x_'!->'_x_';'_x not
R58303:58307 PLF.Maps <> :::x_'!->'_x_';'_x not
R58309:58310 PLF.Maps <> :::x_'!->'_x_';'_x not
R58318:58320 PLF.Maps <> :::x_'!->'_x_';'_x not
R58312:58316 PLF.Imp <> :::x_'!->'_x not
R58311:58311 PLF.Imp <> X def
R58302:58302 PLF.Imp <> Z def
R58320:58320 PLF.Imp <> Z def
R58324:58324 PLF.Maps <> :::x_'!->'_x_';'_x not
R58326:58330 PLF.Maps <> :::x_'!->'_x_';'_x not
R58332:58333 PLF.Maps <> :::x_'!->'_x_';'_x not
R58341:58343 PLF.Maps <> :::x_'!->'_x_';'_x not
R58335:58339 PLF.Imp <> :::x_'!->'_x not
R58334:58334 PLF.Imp <> X def
R58325:58325 PLF.Imp <> Z def
R58343:58343 PLF.Imp <> Z def
R58321:58323 Coq.Init.Logic <> ::type_scope:x_'='_x not
R58301:58301 PLF.Maps <> :::x_'!->'_x_';'_x not
R58303:58307 PLF.Maps <> :::x_'!->'_x_';'_x not
R58309:58310 PLF.Maps <> :::x_'!->'_x_';'_x not
R58318:58320 PLF.Maps <> :::x_'!->'_x_';'_x not
R58312:58316 PLF.Imp <> :::x_'!->'_x not
R58311:58311 PLF.Imp <> X def
R58302:58302 PLF.Imp <> Z def
R58320:58320 PLF.Imp <> Z def
R58324:58324 PLF.Maps <> :::x_'!->'_x_';'_x not
R58326:58330 PLF.Maps <> :::x_'!->'_x_';'_x not
R58332:58333 PLF.Maps <> :::x_'!->'_x_';'_x not
R58341:58343 PLF.Maps <> :::x_'!->'_x_';'_x not
R58335:58339 PLF.Imp <> :::x_'!->'_x not
R58334:58334 PLF.Imp <> X def
R58325:58325 PLF.Imp <> Z def
R58343:58343 PLF.Imp <> Z def
R58388:58398 PLF.Maps <> t_update_eq prfax
R58388:58398 PLF.Maps <> t_update_eq prfax
R58388:58398 PLF.Maps <> t_update_eq prfax
R58415:58425 PLF.Maps <> t_update_eq prfax
R58415:58425 PLF.Maps <> t_update_eq prfax
R58415:58425 PLF.Maps <> t_update_eq prfax
def 59016:59017 Himp p5
R59021:59023 PLF.Equiv Himp com ind
R59030:59032 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R59072:59074 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R59033:59038 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R59045:59055 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R59063:59071 PLF.Equiv Himp :com::'while'_x_'do'_x_'end' not
R59040:59043 PLF.Imp <> :com::x_'<>'_x not
R59039:59039 PLF.Imp <> X def
R59056:59061 PLF.Equiv Himp :com::'havoc'_x not
R59062:59062 PLF.Imp <> X def
def 59089:59090 Himp p6
R59094:59096 PLF.Equiv Himp com ind
R59103:59105 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R59112:59114 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R59107:59110 PLF.Equiv Himp :com::x_':='_x not
R59106:59106 PLF.Imp <> X def
prf 59126:59136 Himp p5_p6_equiv
R59140:59145 PLF.Equiv Himp cequiv def
R59147:59148 PLF.Equiv Himp p5 def
R59150:59151 PLF.Equiv Himp p6 def
R59205:59208 PLF.Equiv Himp <> mod
prf 59545:59575 <> swap_noninterfering_assignments
binder 59585:59586 <> l1:184
binder 59588:59589 <> l2:185
binder 59591:59592 <> a1:186
binder 59594:59595 <> a2:187
R59608:59613 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59602:59605 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R59600:59601 PLF.Equiv <> l1:184 var
R59606:59607 PLF.Equiv <> l2:185 var
R59640:59645 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59614:59633 PLF.Equiv <> var_not_used_in_aexp ind
R59635:59636 PLF.Equiv <> l1:184 var
R59638:59639 PLF.Equiv <> a2:187 var
R59672:59677 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59646:59665 PLF.Equiv <> var_not_used_in_aexp ind
R59667:59668 PLF.Equiv <> l2:185 var
R59670:59671 PLF.Equiv <> a1:186 var
R59678:59683 PLF.Equiv <> cequiv def
R59689:59691 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R59710:59712 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R59700:59701 PLF.Imp <> :com:com_scope:x_';'_x not
R59694:59697 PLF.Imp <> :com:com_scope:x_':='_x not
R59692:59693 PLF.Equiv <> l1:184 var
R59698:59699 PLF.Equiv <> a1:186 var
R59704:59707 PLF.Imp <> :com:com_scope:x_':='_x not
R59702:59703 PLF.Equiv <> l2:185 var
R59708:59709 PLF.Equiv <> a2:187 var
R59718:59720 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R59739:59741 PLF.Imp <> ::com_scope:'<{'_x_'}>' not
R59729:59730 PLF.Imp <> :com:com_scope:x_';'_x not
R59723:59726 PLF.Imp <> :com:com_scope:x_':='_x not
R59721:59722 PLF.Equiv <> l2:185 var
R59727:59728 PLF.Equiv <> a2:187 var
R59733:59736 PLF.Imp <> :com:com_scope:x_':='_x not
R59731:59732 PLF.Equiv <> l1:184 var
R59737:59738 PLF.Equiv <> a1:186 var
def 60659:60665 <> capprox
R60676:60678 PLF.Imp <> com ind
binder 60668:60669 <> c1:188
binder 60671:60672 <> c2:189
R60708:60712 PLF.Imp <> state def
binder 60699:60700 <> st:190
binder 60702:60704 <> st':191
R60734:60737 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R60720:60723 PLF.Imp <> :::x_'=['_x_']=>'_x not
R60726:60730 PLF.Imp <> :::x_'=['_x_']=>'_x not
R60724:60725 PLF.Equiv <> c1:188 var
R60718:60719 PLF.Equiv <> st:190 var
R60731:60733 PLF.Equiv <> st':191 var
R60740:60743 PLF.Imp <> :::x_'=['_x_']=>'_x not
R60746:60750 PLF.Imp <> :::x_'=['_x_']=>'_x not
R60744:60745 PLF.Equiv <> c2:189 var
R60738:60739 PLF.Equiv <> st:190 var
R60751:60753 PLF.Equiv <> st':191 var
def 61166:61167 <> c3
R61171:61173 PLF.Imp <> com ind
def 61253:61254 <> c4
R61258:61260 PLF.Imp <> com ind
prf 61338:61352 <> c3_c4_different
R61371:61374 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R61356:61357 Coq.Init.Logic <> ::type_scope:'~'_x not
R61358:61364 PLF.Equiv <> capprox def
R61366:61367 PLF.Equiv <> c3 prfax
R61369:61370 PLF.Equiv <> c4 prfax
R61375:61376 Coq.Init.Logic <> ::type_scope:'~'_x not
R61377:61383 PLF.Equiv <> capprox def
R61385:61386 PLF.Equiv <> c4 prfax
R61388:61389 PLF.Equiv <> c3 prfax
def 61509:61512 <> cmin
R61516:61518 PLF.Imp <> com ind
prf 61596:61607 <> cmin_minimal
binder 61618:61618 <> c:192
R61621:61627 PLF.Equiv <> capprox def
R61629:61632 PLF.Equiv <> cmin prfax
R61634:61634 PLF.Equiv <> c:192 var
def 61811:61815 <> zprop
R61822:61824 PLF.Imp <> com ind
binder 61818:61818 <> c:193
prf 61910:61925 <> zprop_preserving
binder 61936:61936 <> c:194
binder 61938:61939 <> c':195
R61951:61954 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61944:61948 PLF.Equiv <> zprop prfax
R61950:61950 PLF.Equiv <> c:194 var
R61967:61970 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R61955:61961 PLF.Equiv <> capprox def
R61963:61963 PLF.Equiv <> c:194 var
R61965:61966 PLF.Equiv <> c':195 var
R61971:61975 PLF.Equiv <> zprop prfax
R61977:61978 PLF.Equiv <> c':195 var
