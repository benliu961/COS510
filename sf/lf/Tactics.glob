DIGEST f8c614dd6347d34ad0ddfd441735bc46
FLF.Tactics
R698:701 LF.Poly <> <> lib
prf 977:982 <> silly1
R1000:1002 Coq.Init.Datatypes <> nat ind
binder 994:994 <> n:1
binder 996:996 <> m:2
R1013:1018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1009:1011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1008:1008 LF.Tactics <> n:1 var
R1012:1012 LF.Tactics <> m:2 var
R1020:1022 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1019:1019 LF.Tactics <> n:1 var
R1023:1023 LF.Tactics <> m:2 var
prf 1540:1545 <> silly2
R1567:1569 Coq.Init.Datatypes <> nat ind
binder 1557:1557 <> n:3
binder 1559:1559 <> m:4
binder 1561:1561 <> o:5
binder 1563:1563 <> p:6
R1580:1585 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1576:1578 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1575:1575 LF.Tactics <> n:3 var
R1579:1579 LF.Tactics <> m:4 var
R1586:1586 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1609:1615 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1592:1595 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1588:1590 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1587:1587 LF.Tactics <> n:3 var
R1591:1591 LF.Tactics <> m:4 var
R1601:1603 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1596:1596 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1598:1598 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1600:1600 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1597:1597 LF.Tactics <> n:3 var
R1599:1599 LF.Tactics <> o:5 var
R1604:1604 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1606:1606 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1608:1608 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1605:1605 LF.Tactics <> m:4 var
R1607:1607 LF.Tactics <> p:6 var
R1621:1623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1616:1616 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1618:1618 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1620:1620 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1617:1617 LF.Tactics <> n:3 var
R1619:1619 LF.Tactics <> o:5 var
R1624:1624 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1626:1626 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1628:1628 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1625:1625 LF.Tactics <> m:4 var
R1627:1627 LF.Tactics <> p:6 var
prf 2162:2168 <> silly2a
R2186:2188 Coq.Init.Datatypes <> nat ind
binder 2180:2180 <> n:7
binder 2182:2182 <> m:8
R2207:2213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2199:2201 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2194:2194 LF.Poly <> :::'('_x_','_x_')' not
R2196:2196 LF.Poly <> :::'('_x_','_x_')' not
R2198:2198 LF.Poly <> :::'('_x_','_x_')' not
R2195:2195 LF.Tactics <> n:7 var
R2197:2197 LF.Tactics <> n:7 var
R2202:2202 LF.Poly <> :::'('_x_','_x_')' not
R2204:2204 LF.Poly <> :::'('_x_','_x_')' not
R2206:2206 LF.Poly <> :::'('_x_','_x_')' not
R2203:2203 LF.Tactics <> m:8 var
R2205:2205 LF.Tactics <> m:8 var
R2214:2214 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2261:2267 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2229:2231 Coq.Init.Datatypes <> nat ind
binder 2223:2223 <> q:9
binder 2225:2225 <> r:10
R2248:2251 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2240:2242 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2235:2235 LF.Poly <> :::'('_x_','_x_')' not
R2237:2237 LF.Poly <> :::'('_x_','_x_')' not
R2239:2239 LF.Poly <> :::'('_x_','_x_')' not
R2236:2236 LF.Tactics <> q:9 var
R2238:2238 LF.Tactics <> q:9 var
R2243:2243 LF.Poly <> :::'('_x_','_x_')' not
R2245:2245 LF.Poly <> :::'('_x_','_x_')' not
R2247:2247 LF.Poly <> :::'('_x_','_x_')' not
R2244:2244 LF.Tactics <> r:10 var
R2246:2246 LF.Tactics <> r:10 var
R2255:2257 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2252:2252 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2254:2254 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2253:2253 LF.Tactics <> q:9 var
R2258:2258 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2260:2260 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2259:2259 LF.Tactics <> r:10 var
R2271:2273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2268:2268 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2270:2270 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2269:2269 LF.Tactics <> n:7 var
R2274:2274 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2276:2276 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2275:2275 LF.Tactics <> m:8 var
prf 2475:2482 <> silly_ex
binder 2493:2493 <> p:11
R2498:2498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2544:2550 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2506:2506 <> n:12
R2522:2525 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2515:2517 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2509:2512 LF.Basics <> even def
R2514:2514 LF.Tactics <> n:12 var
R2518:2521 LF.Basics <> true constr
R2536:2538 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2526:2529 LF.Basics <> even def
R2532:2532 Coq.Init.Datatypes <> S constr
R2534:2534 LF.Tactics <> n:12 var
R2539:2543 LF.Basics <> false constr
R2551:2551 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2592:2598 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2559:2559 <> n:13
R2576:2579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2568:2570 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2562:2565 LF.Basics <> even def
R2567:2567 LF.Tactics <> n:13 var
R2571:2575 LF.Basics <> false constr
R2585:2587 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2580:2582 LF.Basics <> odd def
R2584:2584 LF.Tactics <> n:13 var
R2588:2591 LF.Basics <> true constr
R2612:2617 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2605:2607 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2599:2602 LF.Basics <> even def
R2604:2604 LF.Tactics <> p:11 var
R2608:2611 LF.Basics <> true constr
R2627:2629 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2618:2620 LF.Basics <> odd def
R2623:2623 Coq.Init.Datatypes <> S constr
R2625:2625 LF.Tactics <> p:11 var
R2630:2633 LF.Basics <> true constr
prf 2937:2942 <> silly3
R2960:2962 Coq.Init.Datatypes <> nat ind
binder 2954:2954 <> n:14
binder 2956:2956 <> m:15
R2973:2978 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2969:2971 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2968:2968 LF.Tactics <> n:14 var
R2972:2972 LF.Tactics <> m:15 var
R2980:2982 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2979:2979 LF.Tactics <> m:15 var
R2983:2983 LF.Tactics <> n:14 var
prf 3590:3602 <> rev_exercise1
R3621:3624 LF.Poly <> list ind
R3626:3628 Coq.Init.Datatypes <> nat ind
binder 3614:3614 <> l:16
binder 3616:3617 <> l':17
R3644:3649 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3635:3637 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3634:3634 LF.Tactics <> l:16 var
R3638:3640 LF.Poly <> rev def
R3642:3643 LF.Tactics <> l':17 var
R3652:3654 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3650:3651 LF.Tactics <> l':17 var
R3655:3657 LF.Poly <> rev def
R3659:3659 LF.Tactics <> l:16 var
R3712:3725 LF.Poly <> rev_involutive thm
R3712:3725 LF.Poly <> rev_involutive thm
def 4199:4214 <> trans_eq_example
R4240:4242 Coq.Init.Datatypes <> nat ind
binder 4226:4226 <> a:18
binder 4228:4228 <> b:19
binder 4230:4230 <> c:20
binder 4232:4232 <> d:21
binder 4234:4234 <> e:22
binder 4236:4236 <> f:23
R4264:4272 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4256:4258 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4251:4251 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4253:4253 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4255:4255 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4252:4252 LF.Tactics <> a:18 var
R4254:4254 LF.Tactics <> b:19 var
R4259:4259 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4261:4261 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4263:4263 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4260:4260 LF.Tactics <> c:20 var
R4262:4262 LF.Tactics <> d:21 var
R4286:4294 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4278:4280 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4273:4273 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4275:4275 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4277:4277 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4274:4274 LF.Tactics <> c:20 var
R4276:4276 LF.Tactics <> d:21 var
R4281:4281 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4283:4283 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4285:4285 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4282:4282 LF.Tactics <> e:22 var
R4284:4284 LF.Tactics <> f:23 var
R4300:4302 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4295:4295 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4297:4297 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4299:4299 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4296:4296 LF.Tactics <> a:18 var
R4298:4298 LF.Tactics <> b:19 var
R4303:4303 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4305:4305 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4307:4307 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4304:4304 LF.Tactics <> e:22 var
R4306:4306 LF.Tactics <> f:23 var
prf 4567:4574 <> trans_eq
binder 4586:4586 <> X:24
R4603:4603 LF.Tactics <> X:24 var
binder 4595:4595 <> n:25
binder 4597:4597 <> m:26
binder 4599:4599 <> o:27
R4614:4617 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4610:4612 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4609:4609 LF.Tactics <> n:25 var
R4613:4613 LF.Tactics <> m:26 var
R4623:4626 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4619:4621 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4618:4618 LF.Tactics <> m:26 var
R4622:4622 LF.Tactics <> o:27 var
R4628:4630 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4627:4627 LF.Tactics <> n:25 var
R4631:4631 LF.Tactics <> o:27 var
def 4886:4902 <> trans_eq_example'
R4928:4930 Coq.Init.Datatypes <> nat ind
binder 4914:4914 <> a:28
binder 4916:4916 <> b:29
binder 4918:4918 <> c:30
binder 4920:4920 <> d:31
binder 4922:4922 <> e:32
binder 4924:4924 <> f:33
R4952:4960 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4944:4946 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4939:4939 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4941:4941 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4943:4943 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4940:4940 LF.Tactics <> a:28 var
R4942:4942 LF.Tactics <> b:29 var
R4947:4947 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4949:4949 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4951:4951 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4948:4948 LF.Tactics <> c:30 var
R4950:4950 LF.Tactics <> d:31 var
R4974:4982 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4966:4968 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4961:4961 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4963:4963 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4965:4965 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4962:4962 LF.Tactics <> c:30 var
R4964:4964 LF.Tactics <> d:31 var
R4969:4969 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4971:4971 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4973:4973 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4970:4970 LF.Tactics <> e:32 var
R4972:4972 LF.Tactics <> f:33 var
R4988:4990 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4983:4983 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4985:4985 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4987:4987 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4984:4984 LF.Tactics <> a:28 var
R4986:4986 LF.Tactics <> b:29 var
R4991:4991 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4993:4993 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4995:4995 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4992:4992 LF.Tactics <> e:32 var
R4994:4994 LF.Tactics <> f:33 var
R5468:5468 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5470:5470 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5472:5472 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5450:5457 LF.Tactics <> trans_eq thm
R5468:5468 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5470:5470 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5472:5472 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5450:5457 LF.Tactics <> trans_eq thm
def 5952:5969 <> trans_eq_example''
R5995:5997 Coq.Init.Datatypes <> nat ind
binder 5981:5981 <> a:34
binder 5983:5983 <> b:35
binder 5985:5985 <> c:36
binder 5987:5987 <> d:37
binder 5989:5989 <> e:38
binder 5991:5991 <> f:39
R6019:6027 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6011:6013 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6006:6006 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6008:6008 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6010:6010 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6007:6007 LF.Tactics <> a:34 var
R6009:6009 LF.Tactics <> b:35 var
R6014:6014 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6016:6016 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6018:6018 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6015:6015 LF.Tactics <> c:36 var
R6017:6017 LF.Tactics <> d:37 var
R6041:6049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6033:6035 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6028:6028 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6030:6030 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6032:6032 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6029:6029 LF.Tactics <> c:36 var
R6031:6031 LF.Tactics <> d:37 var
R6036:6036 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6038:6038 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6040:6040 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6037:6037 LF.Tactics <> e:38 var
R6039:6039 LF.Tactics <> f:39 var
R6055:6057 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6050:6050 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6052:6052 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6054:6054 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6051:6051 LF.Tactics <> a:34 var
R6053:6053 LF.Tactics <> b:35 var
R6058:6058 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6060:6060 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6062:6062 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6059:6059 LF.Tactics <> e:38 var
R6061:6061 LF.Tactics <> f:39 var
R6117:6117 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6119:6119 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6121:6121 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6117:6117 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6119:6119 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6121:6121 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6234:6250 <> trans_eq_exercise
R6272:6274 Coq.Init.Datatypes <> nat ind
binder 6262:6262 <> n:40
binder 6264:6264 <> m:41
binder 6266:6266 <> o:42
binder 6268:6268 <> p:43
R6299:6307 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6284:6287 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6298:6298 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6283:6283 LF.Tactics <> m:41 var
R6288:6295 LF.Basics <> minustwo def
R6297:6297 LF.Tactics <> o:42 var
R6319:6327 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6308:6308 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6314:6317 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6310:6312 LF.Basics <> ::nat_scope:x_'+'_x not
R6309:6309 LF.Tactics <> n:40 var
R6313:6313 LF.Tactics <> p:43 var
R6318:6318 LF.Tactics <> m:41 var
R6328:6328 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6334:6338 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6349:6349 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6330:6332 LF.Basics <> ::nat_scope:x_'+'_x not
R6329:6329 LF.Tactics <> n:40 var
R6333:6333 LF.Tactics <> p:43 var
R6339:6346 LF.Basics <> minustwo def
R6348:6348 LF.Tactics <> o:42 var
prf 7725:7735 <> S_injective
R7753:7755 Coq.Init.Datatypes <> nat ind
binder 7747:7747 <> n:44
binder 7749:7749 <> m:45
R7770:7775 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7764:7766 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7761:7761 Coq.Init.Datatypes <> S constr
R7763:7763 LF.Tactics <> n:44 var
R7767:7767 Coq.Init.Datatypes <> S constr
R7769:7769 LF.Tactics <> m:45 var
R7777:7779 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7776:7776 LF.Tactics <> n:44 var
R7780:7780 LF.Tactics <> m:45 var
R7822:7824 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7825:7828 Coq.Init.Peano <> pred abbrev
R7831:7831 Coq.Init.Datatypes <> S constr
R7822:7824 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7825:7828 Coq.Init.Peano <> pred abbrev
R7831:7831 Coq.Init.Datatypes <> S constr
prf 8320:8331 <> S_injective'
R8349:8351 Coq.Init.Datatypes <> nat ind
binder 8343:8343 <> n:46
binder 8345:8345 <> m:47
R8366:8371 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8360:8362 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8357:8357 Coq.Init.Datatypes <> S constr
R8359:8359 LF.Tactics <> n:46 var
R8363:8363 Coq.Init.Datatypes <> S constr
R8365:8365 LF.Tactics <> m:47 var
R8373:8375 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8372:8372 LF.Tactics <> n:46 var
R8376:8376 LF.Tactics <> m:47 var
prf 8880:8892 <> injection_ex1
R8912:8914 Coq.Init.Datatypes <> nat ind
binder 8904:8904 <> n:48
binder 8906:8906 <> m:49
binder 8908:8908 <> o:50
R8933:8938 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8925:8927 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8920:8920 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8922:8922 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8924:8924 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8921:8921 LF.Tactics <> n:48 var
R8923:8923 LF.Tactics <> m:49 var
R8928:8928 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8930:8930 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8932:8932 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8929:8929 LF.Tactics <> o:50 var
R8931:8931 LF.Tactics <> o:50 var
R8940:8942 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8939:8939 LF.Tactics <> n:48 var
R8943:8943 LF.Tactics <> m:49 var
def 9128:9140 <> injection_ex3
binder 9152:9152 <> X:51
R9171:9171 LF.Tactics <> X:51 var
binder 9163:9163 <> x:52
binder 9165:9165 <> y:53
binder 9167:9167 <> z:54
R9181:9184 LF.Poly <> list ind
R9186:9186 LF.Tactics <> X:51 var
binder 9175:9175 <> l:55
binder 9177:9177 <> j:56
R9212:9217 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9203:9205 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9193:9196 LF.Poly <> :::x_'::'_x not
R9192:9192 LF.Tactics <> x:52 var
R9198:9201 LF.Poly <> :::x_'::'_x not
R9197:9197 LF.Tactics <> y:53 var
R9202:9202 LF.Tactics <> l:55 var
R9207:9210 LF.Poly <> :::x_'::'_x not
R9206:9206 LF.Tactics <> z:54 var
R9211:9211 LF.Tactics <> j:56 var
R9228:9233 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9219:9221 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9218:9218 LF.Tactics <> j:56 var
R9223:9226 LF.Poly <> :::x_'::'_x not
R9222:9222 LF.Tactics <> z:54 var
R9227:9227 LF.Tactics <> l:55 var
R9235:9237 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9234:9234 LF.Tactics <> x:52 var
R9238:9238 LF.Tactics <> y:53 var
R9316:9318 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9311:9314 LF.Poly <> :::x_'::'_x not
R9320:9323 LF.Poly <> :::x_'::'_x not
R9316:9318 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9311:9314 LF.Poly <> :::x_'::'_x not
R9320:9323 LF.Poly <> :::x_'::'_x not
prf 10131:10146 <> discriminate_ex1
R10164:10166 Coq.Init.Datatypes <> nat ind
binder 10158:10158 <> n:57
binder 10160:10160 <> m:58
R10184:10189 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10177:10179 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10172:10176 LF.Basics <> false constr
R10180:10183 LF.Basics <> true constr
R10191:10193 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10190:10190 LF.Tactics <> n:57 var
R10194:10194 LF.Tactics <> m:58 var
prf 10260:10275 <> discriminate_ex2
R10291:10293 Coq.Init.Datatypes <> nat ind
binder 10287:10287 <> n:59
R10306:10311 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10302:10304 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10299:10299 Coq.Init.Datatypes <> S constr
R10301:10301 LF.Tactics <> n:59 var
R10305:10305 Coq.Init.Datatypes <> O constr
R10317:10319 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10313:10315 LF.Basics <> ::nat_scope:x_'+'_x not
def 11143:11158 <> discriminate_ex3
binder 11172:11172 <> X:60
R11191:11191 LF.Tactics <> X:60 var
binder 11183:11183 <> x:61
binder 11185:11185 <> y:62
binder 11187:11187 <> z:63
R11201:11204 LF.Poly <> list ind
R11206:11206 LF.Tactics <> X:60 var
binder 11195:11195 <> l:64
binder 11197:11197 <> j:65
R11230:11237 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11225:11227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11215:11218 LF.Poly <> :::x_'::'_x not
R11214:11214 LF.Tactics <> x:61 var
R11220:11223 LF.Poly <> :::x_'::'_x not
R11219:11219 LF.Tactics <> y:62 var
R11224:11224 LF.Tactics <> l:64 var
R11228:11229 LF.Poly <> :::'['_']' not
R11239:11241 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11238:11238 LF.Tactics <> x:61 var
R11242:11242 LF.Tactics <> z:63 var
prf 11495:11501 <> eqb_0_l
binder 11512:11512 <> n:66
R11531:11534 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11524:11526 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11519:11522 LF.Basics <> ::nat_scope:x_'=?'_x not
R11523:11523 LF.Tactics <> n:66 var
R11527:11530 LF.Basics <> true constr
R11536:11538 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11535:11535 LF.Tactics <> n:66 var
prf 12421:12427 <> f_equal
binder 12439:12439 <> A:67
binder 12441:12441 <> B:68
R12456:12459 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12455:12455 LF.Tactics <> A:67 var
R12460:12460 LF.Tactics <> B:68 var
binder 12452:12452 <> f:69
R12469:12469 LF.Tactics <> A:67 var
binder 12464:12464 <> x:70
binder 12466:12466 <> y:71
R12480:12483 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12476:12478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12475:12475 LF.Tactics <> x:70 var
R12479:12479 LF.Tactics <> y:71 var
R12487:12489 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12484:12484 LF.Tactics <> f:69 var
R12486:12486 LF.Tactics <> x:70 var
R12490:12490 LF.Tactics <> f:69 var
R12492:12492 LF.Tactics <> y:71 var
prf 12564:12584 <> eq_implies_succ_equal
R12602:12604 Coq.Init.Datatypes <> nat ind
binder 12596:12596 <> n:72
binder 12598:12598 <> m:73
R12615:12618 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12611:12613 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12610:12610 LF.Tactics <> n:72 var
R12614:12614 LF.Tactics <> m:73 var
R12622:12624 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12619:12619 Coq.Init.Datatypes <> S constr
R12621:12621 LF.Tactics <> n:72 var
R12625:12625 Coq.Init.Datatypes <> S constr
R12627:12627 LF.Tactics <> m:73 var
R12657:12663 LF.Tactics <> f_equal thm
R12657:12663 LF.Tactics <> f_equal thm
prf 13109:13130 <> eq_implies_succ_equal'
R13148:13150 Coq.Init.Datatypes <> nat ind
binder 13142:13142 <> n:74
binder 13144:13144 <> m:75
R13161:13164 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13157:13159 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13156:13156 LF.Tactics <> n:74 var
R13160:13160 LF.Tactics <> m:75 var
R13168:13170 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13165:13165 Coq.Init.Datatypes <> S constr
R13167:13167 LF.Tactics <> n:74 var
R13171:13171 Coq.Init.Datatypes <> S constr
R13173:13173 LF.Tactics <> m:75 var
prf 13656:13660 <> S_inj
R13678:13680 Coq.Init.Datatypes <> nat ind
binder 13672:13672 <> n:76
binder 13674:13674 <> m:77
R13688:13691 LF.Basics <> bool ind
binder 13684:13684 <> b:78
R13717:13723 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13697:13697 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13712:13715 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13698:13698 LF.Basics <> ::nat_scope:x_'=?'_x not
R13702:13707 LF.Basics <> ::nat_scope:x_'=?'_x not
R13711:13711 LF.Basics <> ::nat_scope:x_'=?'_x not
R13699:13699 Coq.Init.Datatypes <> S constr
R13701:13701 LF.Tactics <> n:76 var
R13708:13708 Coq.Init.Datatypes <> S constr
R13710:13710 LF.Tactics <> m:77 var
R13716:13716 LF.Tactics <> b:78 var
R13724:13724 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13731:13734 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13726:13729 LF.Basics <> ::nat_scope:x_'=?'_x not
R13725:13725 LF.Tactics <> n:76 var
R13730:13730 LF.Tactics <> m:77 var
R13735:13735 LF.Tactics <> b:78 var
prf 14566:14571 <> silly4
R14593:14595 Coq.Init.Datatypes <> nat ind
binder 14583:14583 <> n:79
binder 14585:14585 <> m:80
binder 14587:14587 <> p:81
binder 14589:14589 <> q:82
R14601:14601 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14616:14622 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14607:14610 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14603:14605 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14602:14602 LF.Tactics <> n:79 var
R14606:14606 LF.Tactics <> m:80 var
R14612:14614 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14611:14611 LF.Tactics <> p:81 var
R14615:14615 LF.Tactics <> q:82 var
R14628:14633 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14624:14626 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14623:14623 LF.Tactics <> m:80 var
R14627:14627 LF.Tactics <> n:79 var
R14635:14637 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14634:14634 LF.Tactics <> q:82 var
R14638:14638 LF.Tactics <> p:81 var
prf 15948:15965 <> specialize_example
binder 15975:15975 <> n:83
R15983:15983 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16001:16007 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 15991:15991 <> m:84
R15997:15999 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15995:15995 LF.Basics <> ::nat_scope:x_'*'_x not
R15994:15994 LF.Tactics <> m:84 var
R15996:15996 LF.Tactics <> n:83 var
R16009:16011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16008:16008 LF.Tactics <> n:83 var
R16090:16097 LF.Induction <> add_comm thm
R16090:16097 LF.Induction <> add_comm thm
R16090:16097 LF.Induction <> add_comm thm
def 16254:16272 <> trans_eq_example'''
R16298:16300 Coq.Init.Datatypes <> nat ind
binder 16284:16284 <> a:85
binder 16286:16286 <> b:86
binder 16288:16288 <> c:87
binder 16290:16290 <> d:88
binder 16292:16292 <> e:89
binder 16294:16294 <> f:90
R16322:16330 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16314:16316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16309:16309 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16311:16311 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16313:16313 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16310:16310 LF.Tactics <> a:85 var
R16312:16312 LF.Tactics <> b:86 var
R16317:16317 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16319:16319 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16321:16321 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16318:16318 LF.Tactics <> c:87 var
R16320:16320 LF.Tactics <> d:88 var
R16344:16352 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16336:16338 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16331:16331 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16333:16333 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16335:16335 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16332:16332 LF.Tactics <> c:87 var
R16334:16334 LF.Tactics <> d:88 var
R16339:16339 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16341:16341 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16343:16343 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16340:16340 LF.Tactics <> e:89 var
R16342:16342 LF.Tactics <> f:90 var
R16358:16360 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16353:16353 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16355:16355 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16357:16357 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16354:16354 LF.Tactics <> a:85 var
R16356:16356 LF.Tactics <> b:86 var
R16361:16361 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16363:16363 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16365:16365 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16362:16362 LF.Tactics <> e:89 var
R16364:16364 LF.Tactics <> f:90 var
R16436:16436 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16438:16438 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16440:16440 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16418:16425 LF.Tactics <> trans_eq thm
R16436:16436 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16438:16438 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16440:16440 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16418:16425 LF.Tactics <> trans_eq thm
prf 17638:17660 <> double_injective_FAILED
binder 17671:17671 <> n:91
binder 17673:17673 <> m:92
R17697:17702 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17686:17688 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17678:17683 LF.Induction <> double def
R17685:17685 LF.Tactics <> n:91 var
R17689:17694 LF.Induction <> double def
R17696:17696 LF.Tactics <> m:92 var
R17704:17706 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17703:17703 LF.Tactics <> n:91 var
R17707:17707 LF.Tactics <> m:92 var
prf 20344:20359 <> double_injective
binder 20370:20370 <> n:93
binder 20372:20372 <> m:94
R20396:20401 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20385:20387 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20377:20382 LF.Induction <> double def
R20384:20384 LF.Tactics <> n:93 var
R20388:20393 LF.Induction <> double def
R20395:20395 LF.Tactics <> m:94 var
R20403:20405 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20402:20402 LF.Tactics <> n:93 var
R20406:20406 LF.Tactics <> m:94 var
prf 22310:22317 <> eqb_true
binder 22328:22328 <> n:95
binder 22330:22330 <> m:96
R22348:22351 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22341:22343 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22336:22339 LF.Basics <> ::nat_scope:x_'=?'_x not
R22335:22335 LF.Tactics <> n:95 var
R22340:22340 LF.Tactics <> m:96 var
R22344:22347 LF.Basics <> true constr
R22353:22355 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22352:22352 LF.Tactics <> n:95 var
R22356:22356 LF.Tactics <> m:96 var
def 23853:23883 <> manual_grade_for_informal_proof
R23887:23892 Coq.Init.Datatypes <> option ind
R23898:23898 LF.Poly <> ::type_scope:x_'*'_x not
R23895:23897 Coq.Init.Datatypes <> nat ind
R23899:23904 Coq.Strings.String <> string ind
R23910:23913 Coq.Init.Datatypes <> None constr
prf 24152:24169 <> plus_n_n_injective
binder 24180:24180 <> n:97
binder 24182:24182 <> m:98
R24200:24205 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24192:24194 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24188:24190 LF.Basics <> ::nat_scope:x_'+'_x not
R24187:24187 LF.Tactics <> n:97 var
R24191:24191 LF.Tactics <> n:97 var
R24196:24198 LF.Basics <> ::nat_scope:x_'+'_x not
R24195:24195 LF.Tactics <> m:98 var
R24199:24199 LF.Tactics <> m:98 var
R24207:24209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24206:24206 LF.Tactics <> n:97 var
R24210:24210 LF.Tactics <> m:98 var
R24397:24405 LF.Induction <> plus_n_Sm thm
R24397:24405 LF.Induction <> plus_n_Sm thm
R24397:24405 LF.Induction <> plus_n_Sm thm
R24432:24440 LF.Induction <> plus_n_Sm thm
R24432:24440 LF.Induction <> plus_n_Sm thm
R24432:24440 LF.Induction <> plus_n_Sm thm
prf 24835:24863 <> double_injective_take2_FAILED
binder 24874:24874 <> n:99
binder 24876:24876 <> m:100
R24900:24905 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24889:24891 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24881:24886 LF.Induction <> double def
R24888:24888 LF.Tactics <> n:99 var
R24892:24897 LF.Induction <> double def
R24899:24899 LF.Tactics <> m:100 var
R24907:24909 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24906:24906 LF.Tactics <> n:99 var
R24910:24910 LF.Tactics <> m:100 var
prf 26150:26171 <> double_injective_take2
binder 26182:26182 <> n:101
binder 26184:26184 <> m:102
R26208:26213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26197:26199 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26189:26194 LF.Induction <> double def
R26196:26196 LF.Tactics <> n:101 var
R26200:26205 LF.Induction <> double def
R26207:26207 LF.Tactics <> m:102 var
R26215:26217 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26214:26214 LF.Tactics <> n:101 var
R26218:26218 LF.Tactics <> m:102 var
prf 28830:28849 <> nth_error_after_last
R28864:28866 Coq.Init.Datatypes <> nat ind
binder 28860:28860 <> n:103
binder 28870:28870 <> X:104
R28885:28888 LF.Poly <> list ind
R28890:28890 LF.Tactics <> X:104 var
binder 28881:28881 <> l:105
R28908:28913 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28904:28906 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28896:28901 LF.Poly <> length def
R28903:28903 LF.Tactics <> l:105 var
R28907:28907 LF.Tactics <> n:103 var
R28927:28929 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28914:28922 LF.Poly <> nth_error def
R28926:28926 LF.Tactics <> n:103 var
R28924:28924 LF.Tactics <> l:105 var
R28930:28933 Coq.Init.Datatypes <> None constr
def 29471:29476 <> square
binder 29478:29478 <> n:106
R29484:29486 LF.Basics <> ::nat_scope:x_'*'_x not
R29483:29483 LF.Tactics <> n:106 var
R29487:29487 LF.Tactics <> n:106 var
prf 29557:29567 <> square_mult
binder 29578:29578 <> n:107
binder 29580:29580 <> m:108
R29597:29599 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29583:29588 LF.Tactics <> square def
R29592:29594 LF.Basics <> ::nat_scope:x_'*'_x not
R29591:29591 LF.Tactics <> n:107 var
R29595:29595 LF.Tactics <> m:108 var
R29608:29610 LF.Basics <> ::nat_scope:x_'*'_x not
R29600:29605 LF.Tactics <> square def
R29607:29607 LF.Tactics <> n:107 var
R29611:29616 LF.Tactics <> square def
R29618:29618 LF.Tactics <> m:108 var
R29932:29937 LF.Tactics <> square def
R30256:30265 LF.Induction <> mult_assoc prfax
R30256:30265 LF.Induction <> mult_assoc prfax
R30256:30265 LF.Induction <> mult_assoc prfax
R30291:30293 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30287:30289 LF.Basics <> ::nat_scope:x_'*'_x not
R30283:30285 LF.Basics <> ::nat_scope:x_'*'_x not
R30299:30301 LF.Basics <> ::nat_scope:x_'*'_x not
R30295:30297 LF.Basics <> ::nat_scope:x_'*'_x not
R30291:30293 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30287:30289 LF.Basics <> ::nat_scope:x_'*'_x not
R30283:30285 LF.Basics <> ::nat_scope:x_'*'_x not
R30299:30301 LF.Basics <> ::nat_scope:x_'*'_x not
R30295:30297 LF.Basics <> ::nat_scope:x_'*'_x not
R30320:30327 LF.Induction <> mul_comm thm
R30320:30327 LF.Induction <> mul_comm thm
R30320:30327 LF.Induction <> mul_comm thm
R30336:30345 LF.Induction <> mult_assoc prfax
R30336:30345 LF.Induction <> mult_assoc prfax
R30371:30380 LF.Induction <> mult_assoc prfax
R30371:30380 LF.Induction <> mult_assoc prfax
R30371:30380 LF.Induction <> mult_assoc prfax
def 30767:30769 <> foo
R30775:30777 Coq.Init.Datatypes <> nat ind
binder 30772:30772 <> x:109
prf 30994:31005 <> silly_fact_1
binder 31016:31016 <> m:110
R31028:31030 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31024:31026 LF.Basics <> ::nat_scope:x_'+'_x not
R31019:31021 LF.Tactics <> foo def
R31023:31023 LF.Tactics <> m:110 var
R31042:31044 LF.Basics <> ::nat_scope:x_'+'_x not
R31031:31033 LF.Tactics <> foo def
R31037:31039 LF.Basics <> ::nat_scope:x_'+'_x not
R31036:31036 LF.Tactics <> m:110 var
def 31272:31274 <> bar
binder 31276:31276 <> x:111
R31289:31289 LF.Tactics <> x:111 var
R31300:31300 Coq.Init.Datatypes <> O constr
R31311:31311 Coq.Init.Datatypes <> S constr
prf 31385:31403 <> silly_fact_2_FAILED
binder 31414:31414 <> m:113
R31426:31428 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31422:31424 LF.Basics <> ::nat_scope:x_'+'_x not
R31417:31419 LF.Tactics <> bar def
R31421:31421 LF.Tactics <> m:113 var
R31440:31442 LF.Basics <> ::nat_scope:x_'+'_x not
R31429:31431 LF.Tactics <> bar def
R31435:31437 LF.Basics <> ::nat_scope:x_'+'_x not
R31434:31434 LF.Tactics <> m:113 var
prf 32429:32440 <> silly_fact_2
binder 32451:32451 <> m:114
R32463:32465 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32459:32461 LF.Basics <> ::nat_scope:x_'+'_x not
R32454:32456 LF.Tactics <> bar def
R32458:32458 LF.Tactics <> m:114 var
R32477:32479 LF.Basics <> ::nat_scope:x_'+'_x not
R32466:32468 LF.Tactics <> bar def
R32472:32474 LF.Basics <> ::nat_scope:x_'+'_x not
R32471:32471 LF.Tactics <> m:114 var
prf 32827:32839 <> silly_fact_2'
binder 32850:32850 <> m:115
R32862:32864 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32858:32860 LF.Basics <> ::nat_scope:x_'+'_x not
R32853:32855 LF.Tactics <> bar def
R32857:32857 LF.Tactics <> m:115 var
R32876:32878 LF.Basics <> ::nat_scope:x_'+'_x not
R32865:32867 LF.Tactics <> bar def
R32871:32873 LF.Basics <> ::nat_scope:x_'+'_x not
R32870:32870 LF.Tactics <> m:115 var
R32910:32912 LF.Tactics <> bar def
def 33557:33564 <> sillyfun
R33571:33573 Coq.Init.Datatypes <> nat ind
binder 33567:33567 <> n:116
R33578:33581 LF.Basics <> bool ind
R33592:33595 LF.Basics <> ::nat_scope:x_'=?'_x not
R33591:33591 LF.Tactics <> n:116 var
R33620:33623 LF.Basics <> ::nat_scope:x_'=?'_x not
R33619:33619 LF.Tactics <> n:116 var
R33644:33648 LF.Basics <> false constr
R33631:33635 LF.Basics <> false constr
R33603:33607 LF.Basics <> false constr
prf 33660:33673 <> sillyfun_false
R33689:33691 Coq.Init.Datatypes <> nat ind
binder 33685:33685 <> n:117
R33707:33709 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33697:33704 LF.Tactics <> sillyfun def
R33706:33706 LF.Tactics <> n:117 var
R33710:33714 LF.Basics <> false constr
R33743:33750 LF.Tactics <> sillyfun def
R33766:33769 LF.Basics <> ::nat_scope:x_'=?'_x not
R33766:33769 LF.Basics <> ::nat_scope:x_'=?'_x not
R33858:33861 LF.Basics <> ::nat_scope:x_'=?'_x not
R33858:33861 LF.Basics <> ::nat_scope:x_'=?'_x not
def 34734:34738 <> split
binder 34741:34741 <> X:118
binder 34743:34743 <> Y:119
R34758:34761 LF.Poly <> list ind
R34765:34765 LF.Poly <> ::type_scope:x_'*'_x not
R34764:34764 LF.Tactics <> X:118 var
R34766:34766 LF.Tactics <> Y:119 var
binder 34754:34754 <> l:120
R34787:34787 LF.Poly <> ::type_scope:x_'*'_x not
R34794:34798 LF.Poly <> ::type_scope:x_'*'_x not
R34805:34805 LF.Poly <> ::type_scope:x_'*'_x not
R34788:34791 LF.Poly <> list ind
R34793:34793 LF.Tactics <> X:118 var
R34799:34802 LF.Poly <> list ind
R34804:34804 LF.Tactics <> Y:119 var
R34818:34818 LF.Tactics <> l:120 var
R34829:34830 LF.Poly <> :::'['_']' not
R34835:34835 LF.Poly <> :::'('_x_','_x_')' not
R34838:34839 LF.Poly <> :::'('_x_','_x_')' not
R34842:34842 LF.Poly <> :::'('_x_','_x_')' not
R34836:34837 LF.Poly <> :::'['_']' not
R34840:34841 LF.Poly <> :::'['_']' not
R34854:34857 LF.Poly <> :::x_'::'_x not
R34848:34848 LF.Poly <> :::'('_x_','_x_')' not
R34850:34851 LF.Poly <> :::'('_x_','_x_')' not
R34853:34853 LF.Poly <> :::'('_x_','_x_')' not
R34875:34879 LF.Tactics <> split:121 def
R34896:34896 LF.Poly <> :::'('_x_','_x_')' not
R34899:34900 LF.Poly <> :::'('_x_','_x_')' not
R34903:34903 LF.Poly <> :::'('_x_','_x_')' not
R34908:34908 LF.Poly <> :::'('_x_','_x_')' not
R34916:34917 LF.Poly <> :::'('_x_','_x_')' not
R34925:34925 LF.Poly <> :::'('_x_','_x_')' not
R34910:34913 LF.Poly <> :::x_'::'_x not
R34919:34922 LF.Poly <> :::x_'::'_x not
prf 35035:35047 <> combine_split
binder 35058:35058 <> X:123
binder 35060:35060 <> Y:124
R35067:35070 LF.Poly <> list ind
R35074:35076 LF.Poly <> ::type_scope:x_'*'_x not
R35073:35073 LF.Tactics <> X:123 var
R35077:35077 LF.Tactics <> Y:124 var
binder 35063:35063 <> l:125
binder 35081:35082 <> l1:126
binder 35084:35085 <> l2:127
R35108:35113 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35097:35099 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35090:35094 LF.Tactics <> split def
R35096:35096 LF.Tactics <> l:125 var
R35100:35100 LF.Poly <> :::'('_x_','_x_')' not
R35103:35104 LF.Poly <> :::'('_x_','_x_')' not
R35107:35107 LF.Poly <> :::'('_x_','_x_')' not
R35101:35102 LF.Tactics <> l1:126 var
R35105:35106 LF.Tactics <> l2:127 var
R35127:35129 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35114:35120 LF.Poly <> combine def
R35125:35126 LF.Tactics <> l2:127 var
R35122:35123 LF.Tactics <> l1:126 var
R35130:35130 LF.Tactics <> l:125 var
R35304:35308 LF.Tactics <> split def
R35304:35308 LF.Tactics <> split def
def 35924:35932 <> sillyfun1
R35939:35941 Coq.Init.Datatypes <> nat ind
binder 35935:35935 <> n:128
R35946:35949 LF.Basics <> bool ind
R35960:35963 LF.Basics <> ::nat_scope:x_'=?'_x not
R35959:35959 LF.Tactics <> n:128 var
R35987:35990 LF.Basics <> ::nat_scope:x_'=?'_x not
R35986:35986 LF.Tactics <> n:128 var
R36010:36014 LF.Basics <> false constr
R35998:36001 LF.Basics <> true constr
R35971:35974 LF.Basics <> true constr
prf 36209:36228 <> sillyfun1_odd_FAILED
R36244:36246 Coq.Init.Datatypes <> nat ind
binder 36240:36240 <> n:129
R36270:36275 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36263:36265 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36252:36260 LF.Tactics <> sillyfun1 def
R36262:36262 LF.Tactics <> n:129 var
R36266:36269 LF.Basics <> true constr
R36281:36283 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36276:36278 LF.Basics <> odd def
R36280:36280 LF.Tactics <> n:129 var
R36284:36287 LF.Basics <> true constr
R36319:36327 LF.Tactics <> sillyfun1 def
R36349:36352 LF.Basics <> ::nat_scope:x_'=?'_x not
R36349:36352 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 37170:37182 <> sillyfun1_odd
R37198:37200 Coq.Init.Datatypes <> nat ind
binder 37194:37194 <> n:130
R37224:37229 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37217:37219 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37206:37214 LF.Tactics <> sillyfun1 def
R37216:37216 LF.Tactics <> n:130 var
R37220:37223 LF.Basics <> true constr
R37235:37237 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37230:37232 LF.Basics <> odd def
R37234:37234 LF.Tactics <> n:130 var
R37238:37241 LF.Basics <> true constr
R37273:37281 LF.Tactics <> sillyfun1 def
R37303:37306 LF.Basics <> ::nat_scope:x_'=?'_x not
R37303:37306 LF.Basics <> ::nat_scope:x_'=?'_x not
R37556:37563 LF.Tactics <> eqb_true thm
R37556:37563 LF.Tactics <> eqb_true thm
R37858:37861 LF.Basics <> ::nat_scope:x_'=?'_x not
R37858:37861 LF.Basics <> ::nat_scope:x_'=?'_x not
R37918:37925 LF.Tactics <> eqb_true thm
R37918:37925 LF.Tactics <> eqb_true thm
prf 38101:38122 <> bool_fn_applied_thrice
R38144:38147 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R38140:38143 LF.Basics <> bool ind
R38148:38151 LF.Basics <> bool ind
binder 38136:38136 <> f:131
R38159:38162 LF.Basics <> bool ind
binder 38155:38155 <> b:132
R38179:38181 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38168:38168 LF.Tactics <> f:131 var
R38171:38171 LF.Tactics <> f:131 var
R38174:38174 LF.Tactics <> f:131 var
R38176:38176 LF.Tactics <> b:132 var
R38182:38182 LF.Tactics <> f:131 var
R38184:38184 LF.Tactics <> b:132 var
R38234:38237 LF.Basics <> true constr
R38234:38237 LF.Basics <> true constr
R38291:38295 LF.Basics <> false constr
R38291:38295 LF.Basics <> false constr
R38357:38361 LF.Basics <> false constr
R38357:38361 LF.Basics <> false constr
R38389:38392 LF.Basics <> true constr
R38389:38392 LF.Basics <> true constr
prf 41078:41084 <> eqb_sym
R41102:41104 Coq.Init.Datatypes <> nat ind
binder 41096:41096 <> n:133
binder 41098:41098 <> m:134
R41110:41110 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41117:41121 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41128:41128 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41112:41115 LF.Basics <> ::nat_scope:x_'=?'_x not
R41111:41111 LF.Tactics <> n:133 var
R41116:41116 LF.Tactics <> m:134 var
R41123:41126 LF.Basics <> ::nat_scope:x_'=?'_x not
R41122:41122 LF.Tactics <> m:134 var
R41127:41127 LF.Tactics <> n:133 var
prf 41648:41656 <> eqb_trans
binder 41667:41667 <> n:135
binder 41669:41669 <> m:136
binder 41671:41671 <> p:137
R41689:41694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41682:41684 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41677:41680 LF.Basics <> ::nat_scope:x_'=?'_x not
R41676:41676 LF.Tactics <> n:135 var
R41681:41681 LF.Tactics <> m:136 var
R41685:41688 LF.Basics <> true constr
R41708:41713 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41701:41703 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41696:41699 LF.Basics <> ::nat_scope:x_'=?'_x not
R41695:41695 LF.Tactics <> m:136 var
R41700:41700 LF.Tactics <> p:137 var
R41704:41707 LF.Basics <> true constr
R41720:41722 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41715:41718 LF.Basics <> ::nat_scope:x_'=?'_x not
R41714:41714 LF.Tactics <> n:135 var
R41719:41719 LF.Tactics <> p:137 var
R41723:41726 LF.Basics <> true constr
def 42302:42324 <> split_combine_statement
binder 42435:42435 <> X:138
binder 42437:42437 <> Y:139
R42445:42448 LF.Poly <> list ind
R42450:42450 LF.Tactics <> X:138 var
binder 42440:42441 <> l1:140
R42459:42462 LF.Poly <> list ind
R42464:42464 LF.Tactics <> Y:139 var
binder 42454:42455 <> l2:141
R42492:42495 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42480:42482 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42471:42476 LF.Poly <> length def
R42478:42479 LF.Tactics <> l1:140 var
R42483:42488 LF.Poly <> length def
R42490:42491 LF.Tactics <> l2:141 var
R42517:42519 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42496:42500 LF.Tactics <> split def
R42503:42509 LF.Poly <> combine def
R42514:42515 LF.Tactics <> l2:141 var
R42511:42512 LF.Tactics <> l1:140 var
R42520:42520 LF.Poly <> :::'('_x_','_x_')' not
R42523:42524 LF.Poly <> :::'('_x_','_x_')' not
R42527:42527 LF.Poly <> :::'('_x_','_x_')' not
R42521:42522 LF.Tactics <> l1:140 var
R42525:42526 LF.Tactics <> l2:141 var
prf 42539:42551 <> split_combine
R42555:42577 LF.Tactics <> split_combine_statement def
R42596:42618 LF.Tactics <> split_combine_statement def
def 42907:42936 <> manual_grade_for_split_combine
R42940:42945 Coq.Init.Datatypes <> option ind
R42951:42951 LF.Poly <> ::type_scope:x_'*'_x not
R42948:42950 Coq.Init.Datatypes <> nat ind
R42952:42957 Coq.Strings.String <> string ind
R42963:42966 Coq.Init.Datatypes <> None constr
prf 43046:43060 <> filter_exercise
binder 43072:43072 <> X:142
R43091:43094 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43090:43090 LF.Tactics <> X:142 var
R43095:43098 LF.Basics <> bool ind
binder 43083:43086 <> test:143
R43139:43139 LF.Tactics <> X:142 var
binder 43135:43135 <> x:144
R43150:43153 LF.Poly <> list ind
R43155:43155 LF.Tactics <> X:142 var
binder 43143:43143 <> l:145
binder 43145:43146 <> lf:146
R43184:43189 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43174:43176 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43161:43166 LF.Poly <> filter def
R43173:43173 LF.Tactics <> l:145 var
R43168:43171 LF.Tactics <> test:143 var
R43178:43181 LF.Poly <> :::x_'::'_x not
R43177:43177 LF.Tactics <> x:144 var
R43182:43183 LF.Tactics <> lf:146 var
R43196:43198 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43190:43193 LF.Tactics <> test:143 var
R43195:43195 LF.Tactics <> x:144 var
R43199:43202 LF.Basics <> true constr
def 44337:44343 <> forallb
binder 44346:44346 <> X:147
R44365:44368 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44364:44364 LF.Tactics <> X:147 var
R44369:44372 LF.Basics <> bool ind
binder 44357:44360 <> test:148
R44380:44383 LF.Poly <> list ind
R44385:44385 LF.Tactics <> X:147 var
binder 44376:44376 <> l:149
R44390:44393 LF.Basics <> bool ind
R44407:44407 LF.Tactics <> l:149 var
R44418:44419 LF.Poly <> :::'['_']' not
R44424:44427 LF.Basics <> true constr
R44434:44437 LF.Poly <> :::x_'::'_x not
R44447:44450 LF.Tactics <> test:148 var
R44480:44484 LF.Basics <> false constr
R44459:44465 LF.Tactics <> forallb:150 def
R44467:44470 LF.Tactics <> test:148 var
def 44502:44515 <> test_forallb_1
R44542:44544 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44519:44525 LF.Tactics <> forallb def
R44531:44531 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44533:44533 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44535:44535 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44537:44537 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44539:44539 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44541:44541 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44527:44529 LF.Basics <> odd def
R44545:44548 LF.Basics <> true constr
def 44585:44598 <> test_forallb_2
R44628:44630 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44602:44608 LF.Tactics <> forallb def
R44615:44615 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44621:44621 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44627:44627 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44616:44620 LF.Basics <> false constr
R44622:44626 LF.Basics <> false constr
R44610:44613 LF.Basics <> negb def
R44631:44634 LF.Basics <> true constr
def 44671:44684 <> test_forallb_3
R44710:44712 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44688:44694 LF.Tactics <> forallb def
R44701:44701 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44703:44703 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44705:44705 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44707:44707 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44709:44709 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44696:44699 LF.Basics <> even def
R44713:44717 LF.Basics <> false constr
def 44754:44767 <> test_forallb_4
R44789:44791 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44771:44777 LF.Tactics <> forallb def
R44787:44788 LF.Poly <> :::'['_']' not
R44780:44782 LF.Basics <> eqb def
R44792:44795 LF.Basics <> true constr
def 44833:44839 <> existsb
binder 44842:44842 <> X:152
R44861:44864 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44860:44860 LF.Tactics <> X:152 var
R44865:44868 LF.Basics <> bool ind
binder 44853:44856 <> test:153
R44876:44879 LF.Poly <> list ind
R44881:44881 LF.Tactics <> X:152 var
binder 44872:44872 <> l:154
R44886:44889 LF.Basics <> bool ind
R44902:44902 LF.Tactics <> l:154 var
R44913:44914 LF.Poly <> :::'['_']' not
R44919:44923 LF.Basics <> false constr
R44930:44933 LF.Poly <> :::x_'::'_x not
R44943:44946 LF.Tactics <> test:153 var
R44965:44971 LF.Tactics <> existsb:155 def
R44973:44976 LF.Tactics <> test:153 var
R44955:44958 LF.Basics <> true constr
def 44997:45010 <> test_existsb_1
R45039:45041 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45014:45020 LF.Tactics <> existsb def
R45030:45030 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45032:45032 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45034:45034 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45036:45036 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45038:45038 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45023:45025 LF.Basics <> eqb def
R45042:45046 LF.Basics <> false constr
def 45083:45096 <> test_existsb_2
R45137:45139 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45100:45106 LF.Tactics <> existsb def
R45120:45120 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45125:45125 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45130:45130 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45136:45136 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45121:45124 LF.Basics <> true constr
R45126:45129 LF.Basics <> true constr
R45131:45135 LF.Basics <> false constr
R45109:45112 LF.Basics <> andb def
R45114:45117 LF.Basics <> true constr
R45140:45143 LF.Basics <> true constr
def 45180:45193 <> test_existsb_3
R45222:45224 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45197:45203 LF.Tactics <> existsb def
R45209:45209 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45211:45211 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45213:45213 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45215:45215 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45217:45217 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45219:45219 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45221:45221 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45205:45207 LF.Basics <> odd def
R45225:45228 LF.Basics <> true constr
def 45265:45278 <> test_existsb_4
R45297:45299 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45282:45288 LF.Tactics <> existsb def
R45295:45296 LF.Poly <> :::'['_']' not
R45290:45293 LF.Basics <> even def
R45300:45304 LF.Basics <> false constr
def 45344:45351 <> existsb'
binder 45354:45354 <> X:157
R45373:45376 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45372:45372 LF.Tactics <> X:157 var
R45377:45380 LF.Basics <> bool ind
binder 45365:45368 <> test:158
R45388:45391 LF.Poly <> list ind
R45393:45393 LF.Tactics <> X:157 var
binder 45384:45384 <> l:159
R45398:45401 LF.Basics <> bool ind
R45408:45411 LF.Basics <> negb def
R45414:45420 LF.Tactics <> forallb def
R45447:45447 LF.Tactics <> l:159 var
binder 45427:45427 <> x:160
R45432:45435 LF.Basics <> negb def
R45438:45441 LF.Tactics <> test:158 var
R45443:45443 LF.Tactics <> x:160 var
prf 45460:45475 <> existsb_existsb'
binder 45487:45487 <> X:161
R45506:45509 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45505:45505 LF.Tactics <> X:161 var
R45510:45513 LF.Basics <> bool ind
binder 45498:45501 <> test:162
R45521:45524 LF.Poly <> list ind
R45526:45526 LF.Tactics <> X:161 var
binder 45517:45517 <> l:163
R45546:45548 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45532:45538 LF.Tactics <> existsb def
R45545:45545 LF.Tactics <> l:163 var
R45540:45543 LF.Tactics <> test:162 var
R45549:45556 LF.Tactics <> existsb' def
R45563:45563 LF.Tactics <> l:163 var
R45558:45561 LF.Tactics <> test:162 var
R45634:45641 LF.Tactics <> existsb' def
