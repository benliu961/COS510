DIGEST 402d8b0c58ed08ab75910a89547cef46
FVC.Verif_strlib
R939:948 VC.Preface <> <> lib
R1007:1025 VST.floyd.proofauto <> <> lib
R1043:1051 VC.strlib <> <> lib
inst 1073:1081 <> CompSpecs
R1085:1093 VST.veric.compspecs <> compspecs class
R1111:1114 VC.strlib <> prog def
def 1137:1141 <> Vprog
R1145:1152 VST.veric.mpred <> varspecs def
R1167:1170 VC.strlib <> prog def
R1197:1204 VC.hints <> <> lib
R1269:1285 Coq.Strings.Ascii <> <> lib
R1549:1554 Coq.Strings.String <> string ind
R1845:1848 compcert.lib.Integers Byte int rec
R2116:2119 compcert.lib.Integers <> byte abbrev
def 2241:2259 <> string_to_list_byte
R2265:2270 Coq.Strings.String <> string ind
binder 2262:2262 <> s:1
R2275:2278 Coq.Init.Datatypes <> list ind
R2280:2283 compcert.lib.Integers <> byte abbrev
R2296:2296 VC.Verif_strlib <> s:1 var
R2307:2317 Coq.Strings.String <> EmptyString constr
R2322:2324 Coq.Init.Datatypes <> nil constr
R2330:2335 Coq.Strings.String <> String constr
R2384:2425 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2345:2353 compcert.lib.Integers Byte repr def
R2356:2361 Coq.ZArith.BinInt Z of_N def
R2364:2379 Coq.Strings.Ascii <> N_of_ascii def
R2426:2444 VC.Verif_strlib <> string_to_list_byte:2 def
def 2468:2472 <> Hello
def 2504:2509 <> Hello'
R2514:2532 VC.Verif_strlib <> string_to_list_byte def
R2534:2538 VC.Verif_strlib <> Hello def
R2556:2574 VC.Verif_strlib <> string_to_list_byte def
R2576:2580 VC.Verif_strlib <> Hello def
sec 2699:2708 <> StringDemo
var 2723:2723 StringDemo p
R2727:2729 compcert.common.Values <> val ind
R2885:2890 compcert.export.Ctypesdefs <> tschar def
R2938:2944 VST.floyd.field_at <> data_at def
R2946:2948 VST.veric.shares <> Tsh def
R2950:2955 compcert.export.Ctypesdefs <> tschar def
R2958:2961 compcert.common.Values <> Vint constr
R2964:2971 compcert.lib.Integers Int repr def
R2978:2978 VC.Verif_strlib <> StringDemo.p var
R3441:3447 VST.floyd.field_at <> data_at def
R3449:3451 VST.veric.shares <> Tsh def
R3453:3458 compcert.export.Ctypesdefs <> tschar def
R3461:3465 VST.floyd.functional_base <> Vbyte def
R3468:3476 compcert.lib.Integers Byte repr def
R3631:3635 VST.floyd.functional_base <> Vbyte def
def 3714:3759 <> Unnamed_thm
R3739:3741 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3719:3723 VST.floyd.functional_base <> Vbyte def
R3726:3734 compcert.lib.Integers Byte repr def
R3742:3745 compcert.common.Values <> Vint constr
R3748:3755 compcert.lib.Integers Int repr def
def 3788:3833 <> Unnamed_thm0
R3813:3815 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3793:3797 VST.floyd.functional_base <> Vbyte def
R3800:3808 compcert.lib.Integers Byte repr def
R3816:3819 compcert.common.Values <> Vint constr
R3822:3829 compcert.lib.Integers Int repr def
R3852:3856 VST.floyd.functional_base <> Vbyte def
R3869:3884 compcert.lib.Integers Byte signed_repr thm
R3869:3884 compcert.lib.Integers Byte signed_repr thm
R3869:3884 compcert.lib.Integers Byte signed_repr thm
R3869:3884 compcert.lib.Integers Byte signed_repr thm
R4194:4200 VST.floyd.entailer <> cstring def
R4527:4533 VST.floyd.entailer <> cstring def
R4546:4546 VC.Verif_strlib <> StringDemo.p var
R4539:4544 VC.Verif_strlib <> Hello' def
R4535:4537 VST.veric.shares <> Tsh def
R4673:4678 VST.msl.seplog <> ::logic:x_'&&'_x not
R4647:4650 VST.msl.seplog <> ::logic:'!!'_x not
R4672:4672 VST.msl.seplog <> ::logic:'!!'_x not
R4651:4652 Coq.Init.Logic <> ::type_scope:'~'_x not
R4653:4654 Coq.Lists.List <> In def
R4666:4671 VC.Verif_strlib <> Hello' def
R4656:4664 compcert.lib.Integers Byte zero def
R4679:4685 VST.floyd.field_at <> data_at def
R4687:4689 VST.veric.shares <> Tsh def
R4692:4697 compcert.export.Ctypesdefs <> tarray def
R4699:4704 compcert.export.Ctypesdefs <> tschar def
R4708:4710 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R4716:4718 Coq.Lists.List <> map def
R4733:4734 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R4727:4732 VC.Verif_strlib <> Hello' def
R4735:4735 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R4745:4745 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R4736:4744 compcert.lib.Integers Byte zero def
R4720:4724 VST.floyd.functional_base <> Vbyte def
R4749:4749 VC.Verif_strlib <> StringDemo.p var
R5274:5281 VST.floyd.entailer <> cstringn def
R5508:5515 VST.floyd.entailer <> cstringn def
R5531:5531 VC.Verif_strlib <> StringDemo.p var
R5521:5526 VC.Verif_strlib <> Hello' def
R5517:5519 VST.veric.shares <> Tsh def
R5554:5563 VC.Verif_strlib StringDemo <> sec
prf 5822:5841 <> demonstrate_cstring1
binder 5853:5853 <> i:5
binder 5855:5862 <> contents:6
R5872:5873 Coq.Init.Logic <> ::type_scope:'~'_x not
R5874:5875 Coq.Lists.List <> In def
R5887:5894 VC.Verif_strlib <> contents:6 var
R5877:5885 compcert.lib.Integers Byte zero def
binder 5868:5868 <> H:7
R5937:5940 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R5905:5908 VST.zlist.sublist <> Znth def
R5921:5924 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R5913:5920 VC.Verif_strlib <> contents:6 var
R5925:5925 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5935:5935 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R5926:5934 compcert.lib.Integers Byte zero def
R5910:5910 VC.Verif_strlib <> i:5 var
R5941:5949 compcert.lib.Integers Byte zero def
binder 5901:5902 <> H0:8
R5961:5964 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R5966:5969 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R5965:5965 VC.Verif_strlib <> i:5 var
R5965:5965 VC.Verif_strlib <> i:5 var
R5970:5976 Coq.ZArith.Zcomplements <> Zlength def
R5978:5985 VC.Verif_strlib <> contents:6 var
binder 5956:5957 <> H1:9
R5993:5996 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R6002:6004 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R5998:6000 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R5997:5997 VC.Verif_strlib <> i:5 var
R5998:6000 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R5997:5997 VC.Verif_strlib <> i:5 var
R6005:6011 Coq.ZArith.Zcomplements <> Zlength def
R6022:6025 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R6014:6021 VC.Verif_strlib <> contents:6 var
R6026:6026 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R6036:6036 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R6027:6035 compcert.lib.Integers Byte zero def
R6934:6936 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R6937:6943 Coq.ZArith.Zcomplements <> Zlength def
R6934:6936 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R6937:6943 Coq.ZArith.Zcomplements <> Zlength def
prf 7286:7305 <> demonstrate_cstring2
binder 7317:7317 <> i:10
binder 7319:7326 <> contents:11
R7335:7336 Coq.Init.Logic <> ::type_scope:'~'_x not
R7337:7338 Coq.Lists.List <> In def
R7350:7357 VC.Verif_strlib <> contents:11 var
R7340:7348 compcert.lib.Integers Byte zero def
binder 7332:7332 <> H:12
R7400:7402 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7368:7371 VST.zlist.sublist <> Znth def
R7384:7387 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R7376:7383 VC.Verif_strlib <> contents:11 var
R7388:7388 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R7398:7398 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R7389:7397 compcert.lib.Integers Byte zero def
R7373:7373 VC.Verif_strlib <> i:10 var
R7403:7411 compcert.lib.Integers Byte zero def
binder 7364:7365 <> H0:13
R7423:7426 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R7428:7431 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<='_x not
R7427:7427 VC.Verif_strlib <> i:10 var
R7427:7427 VC.Verif_strlib <> i:10 var
R7432:7438 Coq.ZArith.Zcomplements <> Zlength def
R7440:7447 VC.Verif_strlib <> contents:11 var
binder 7418:7419 <> H1:14
R7455:7457 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7454:7454 VC.Verif_strlib <> i:10 var
R7458:7464 Coq.ZArith.Zcomplements <> Zlength def
R7466:7473 VC.Verif_strlib <> contents:11 var
def 7806:7816 <> strlen_spec
R7822:7829 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R7837:7839 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R7830:7836 VC.strlib <> _strlen def
R7840:7844 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7847:7848 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7854:7855 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7857:7859 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7869:7870 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7874:7875 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7879:7887 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7899:7905 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7974:7983 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7990:7996 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R7888:7891 compcert.export.Ctypesdefs <> tptr def
R7893:7898 compcert.export.Ctypesdefs <> tschar def
R7984:7989 VST.veric.Cop2 <> size_t def
R7849:7853 VST.msl.shares <> share def
R7860:7863 Coq.Init.Datatypes <> list ind
R7865:7868 compcert.lib.Integers <> byte abbrev
R7876:7878 compcert.common.Values <> val ind
binder 7845:7846 <> sh:15
binder 7856:7856 <> s:16
binder 7871:7873 <> str:17
R7906:7911 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R7929:7934 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R7912:7925 VST.veric.shares <> readable_share def
R7927:7928 VC.Verif_strlib <> sh:15 var
R7935:7942 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R7946:7951 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R7943:7945 VC.Verif_strlib <> str:17 var
R7952:7956 VST.floyd.canon <> ::assert4:'SEP'_'('_x_';'_'..'_';'_x_')' not
R7973:7973 VST.floyd.canon <> ::assert4:'SEP'_'('_x_';'_'..'_';'_x_')' not
R7957:7963 VST.floyd.entailer <> cstring def
R7970:7972 VC.Verif_strlib <> str:17 var
R7968:7968 VC.Verif_strlib <> s:16 var
R7965:7966 VC.Verif_strlib <> sh:15 var
binder 7845:7846 <> sh:18
binder 7856:7856 <> s:19
binder 7871:7873 <> str:20
R7997:8008 VST.floyd.canon <> ::assert:'PROP'_'()'_x not
R8009:8016 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R8050:8055 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R8017:8023 compcert.common.Values <> Vptrofs def
R8026:8036 compcert.lib.Integers Ptrofs repr def
R8039:8045 Coq.ZArith.Zcomplements <> Zlength def
R8047:8047 VC.Verif_strlib <> s:19 var
R8056:8060 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R8077:8077 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R8061:8067 VST.floyd.entailer <> cstring def
R8074:8076 VC.Verif_strlib <> str:20 var
R8072:8072 VC.Verif_strlib <> s:19 var
R8069:8070 VC.Verif_strlib <> sh:18 var
R8508:8513 VST.veric.Cop2 <> size_t def
R8861:8867 compcert.common.Values <> Vptrofs def
R9373:9382 compcert.lib.Integers Ptrofs int rec
R9384:9392 compcert.lib.Integers Int64 int rec
R9402:9411 compcert.lib.Integers Ptrofs int rec
R9413:9419 compcert.lib.Integers Int int rec
def 9856:9866 <> strcpy_spec
R9872:9879 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R9887:9889 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R9880:9886 VC.strlib <> _strcpy def
R9890:9894 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9898:9899 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9905:9906 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9910:9911 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9917:9918 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9923:9925 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9929:9930 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9932:9934 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9936:9937 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9941:9943 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9947:9948 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9950:9952 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9962:9970 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9982:9983 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9995:10001 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10150:10159 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10171:10177 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R9971:9974 compcert.export.Ctypesdefs <> tptr def
R9976:9981 compcert.export.Ctypesdefs <> tschar def
R9984:9987 compcert.export.Ctypesdefs <> tptr def
R9989:9994 compcert.export.Ctypesdefs <> tschar def
R10160:10163 compcert.export.Ctypesdefs <> tptr def
R10165:10170 compcert.export.Ctypesdefs <> tschar def
R9900:9904 VST.msl.shares <> share def
R9912:9916 VST.msl.shares <> share def
R9926:9928 compcert.common.Values <> val ind
R9935:9935 Coq.Numbers.BinNums <> Z ind
R9944:9946 compcert.common.Values <> val ind
R9953:9956 Coq.Init.Datatypes <> list ind
R9958:9961 compcert.lib.Integers <> byte abbrev
binder 9895:9897 <> wsh:21
binder 9907:9909 <> rsh:22
binder 9919:9922 <> dest:23
binder 9931:9931 <> n:24
binder 9938:9940 <> src:25
binder 9949:9949 <> s:26
R10002:10007 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R10026:10027 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R10046:10047 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R10061:10066 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R10008:10021 VST.veric.shares <> writable_share def
R10023:10025 VC.Verif_strlib <> wsh:21 var
R10028:10041 VST.veric.shares <> readable_share def
R10043:10045 VC.Verif_strlib <> rsh:22 var
R10057:10059 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R10048:10054 Coq.ZArith.Zcomplements <> Zlength def
R10056:10056 VC.Verif_strlib <> s:26 var
R10060:10060 VC.Verif_strlib <> n:24 var
R10067:10074 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R10079:10080 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R10084:10089 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R10075:10078 VC.Verif_strlib <> dest:23 var
R10081:10083 VC.Verif_strlib <> src:25 var
R10090:10094 VST.floyd.canon <> ::assert4:'SEP'_'('_x_';'_'..'_';'_x_')' not
R10130:10131 VST.floyd.canon <> ::assert4:'SEP'_'('_x_';'_'..'_';'_x_')' not
R10149:10149 VST.floyd.canon <> ::assert4:'SEP'_'('_x_';'_'..'_';'_x_')' not
R10095:10102 VST.floyd.field_at <> data_at_ def
R10104:10106 VC.Verif_strlib <> wsh:21 var
R10109:10114 compcert.export.Ctypesdefs <> tarray def
R10116:10121 compcert.export.Ctypesdefs <> tschar def
R10123:10123 VC.Verif_strlib <> n:24 var
R10126:10129 VC.Verif_strlib <> dest:23 var
R10132:10138 VST.floyd.entailer <> cstring def
R10146:10148 VC.Verif_strlib <> src:25 var
R10144:10144 VC.Verif_strlib <> s:26 var
R10140:10142 VC.Verif_strlib <> rsh:22 var
binder 9895:9897 <> wsh:27
binder 9907:9909 <> rsh:28
binder 9919:9922 <> dest:29
binder 9931:9931 <> n:30
binder 9938:9940 <> src:31
binder 9949:9949 <> s:32
R10178:10189 VST.floyd.canon <> ::assert:'PROP'_'()'_x not
R10190:10197 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R10202:10207 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R10198:10201 VC.Verif_strlib <> dest:29 var
R10208:10212 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R10234:10235 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R10253:10253 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R10213:10220 VST.floyd.entailer <> cstringn def
R10230:10233 VC.Verif_strlib <> dest:29 var
R10228:10228 VC.Verif_strlib <> n:30 var
R10226:10226 VC.Verif_strlib <> s:32 var
R10222:10224 VC.Verif_strlib <> wsh:27 var
R10236:10242 VST.floyd.entailer <> cstring def
R10250:10252 VC.Verif_strlib <> src:31 var
R10248:10248 VC.Verif_strlib <> s:32 var
R10244:10246 VC.Verif_strlib <> rsh:28 var
def 10454:10464 <> strcmp_spec
R10470:10477 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R10485:10487 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R10478:10484 VC.strlib <> _strcmp def
R10488:10492 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10496:10497 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10503:10504 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10508:10509 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10515:10516 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10521:10523 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10527:10528 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10531:10533 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10543:10544 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10549:10551 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10555:10563 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10566:10568 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10578:10586 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10598:10599 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10611:10617 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10738:10747 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10752:10757 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_','_x_':'_x_'PRE'_'['_x_','_'..'_','_x_']'_x_'POST'_'['_x_']'_x not
R10587:10590 compcert.export.Ctypesdefs <> tptr def
R10592:10597 compcert.export.Ctypesdefs <> tschar def
R10600:10603 compcert.export.Ctypesdefs <> tptr def
R10605:10610 compcert.export.Ctypesdefs <> tschar def
R10748:10751 compcert.export.Ctypesdefs <> tint def
R10498:10502 VST.msl.shares <> share def
R10510:10514 VST.msl.shares <> share def
R10524:10526 compcert.common.Values <> val ind
R10534:10537 Coq.Init.Datatypes <> list ind
R10539:10542 compcert.lib.Integers <> byte abbrev
R10552:10554 compcert.common.Values <> val ind
R10569:10572 Coq.Init.Datatypes <> list ind
R10574:10577 compcert.lib.Integers <> byte abbrev
binder 10493:10495 <> sh1:33
binder 10505:10507 <> sh2:34
binder 10517:10520 <> str1:35
binder 10529:10530 <> s1:36
binder 10545:10548 <> str2:37
binder 10564:10565 <> s2:38
R10618:10623 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R10642:10643 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R10662:10667 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R10624:10637 VST.veric.shares <> readable_share def
R10639:10641 VC.Verif_strlib <> sh1:33 var
R10644:10657 VST.veric.shares <> readable_share def
R10659:10661 VC.Verif_strlib <> sh2:34 var
R10668:10675 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R10680:10681 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R10686:10691 VST.floyd.canon <> ::assert3:'PARAMS'_'('_x_';'_'..'_';'_x_')'_x not
R10676:10679 VC.Verif_strlib <> str1:35 var
R10682:10685 VC.Verif_strlib <> str2:37 var
R10692:10696 VST.floyd.canon <> ::assert4:'SEP'_'('_x_';'_'..'_';'_x_')' not
R10716:10717 VST.floyd.canon <> ::assert4:'SEP'_'('_x_';'_'..'_';'_x_')' not
R10737:10737 VST.floyd.canon <> ::assert4:'SEP'_'('_x_';'_'..'_';'_x_')' not
R10697:10703 VST.floyd.entailer <> cstring def
R10712:10715 VC.Verif_strlib <> str1:35 var
R10709:10710 VC.Verif_strlib <> s1:36 var
R10705:10707 VC.Verif_strlib <> sh1:33 var
R10718:10724 VST.floyd.entailer <> cstring def
R10733:10736 VC.Verif_strlib <> str2:37 var
R10730:10731 VC.Verif_strlib <> s2:38 var
R10726:10728 VC.Verif_strlib <> sh2:34 var
binder 10493:10495 <> sh1:39
binder 10505:10507 <> sh2:40
binder 10517:10520 <> str1:41
binder 10529:10530 <> s1:42
binder 10545:10548 <> str2:43
binder 10564:10565 <> s2:44
R10758:10760 VST.floyd.canon <> ::assert:'EX'_x_'..'_x_','_x not
R10768:10773 VST.floyd.canon <> ::assert:'EX'_x_'..'_x_','_x not
R10765:10767 compcert.lib.Integers <> int abbrev
binder 10761:10761 <> i:45
R10774:10779 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R10831:10836 VST.floyd.canon <> ::assert:'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R10783:10792 compcert.lib.Integers Int eq_dec thm
R10794:10794 VC.Verif_strlib <> i:45 var
R10796:10803 compcert.lib.Integers Int zero def
R10825:10828 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R10823:10824 VC.Verif_strlib <> s1:42 var
R10829:10830 VC.Verif_strlib <> s2:44 var
R10812:10814 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10810:10811 VC.Verif_strlib <> s1:42 var
R10815:10816 VC.Verif_strlib <> s2:44 var
R10837:10844 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R10851:10856 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R10845:10848 compcert.common.Values <> Vint constr
R10850:10850 VC.Verif_strlib <> i:45 var
R10857:10861 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R10881:10882 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R10902:10902 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R10862:10868 VST.floyd.entailer <> cstring def
R10877:10880 VC.Verif_strlib <> str1:41 var
R10874:10875 VC.Verif_strlib <> s1:42 var
R10870:10872 VC.Verif_strlib <> sh1:39 var
R10883:10889 VST.floyd.entailer <> cstring def
R10898:10901 VC.Verif_strlib <> str2:43 var
R10895:10896 VC.Verif_strlib <> s2:44 var
R10891:10893 VC.Verif_strlib <> sh2:40 var
def 10917:10921 <> Gprog
R10925:10932 VST.veric.mpred <> funspecs def
R10937:10938 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R10950:10951 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R10963:10964 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R10976:10977 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R10939:10949 VC.Verif_strlib <> strlen_spec def
R10952:10962 VC.Verif_strlib <> strcpy_spec def
R10965:10975 VC.Verif_strlib <> strcmp_spec def
prf 11154:11164 <> body_strlen
R11167:11176 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R11199:11209 VC.Verif_strlib <> strlen_spec def
R11190:11197 VC.strlib <> f_strlen def
R11184:11188 VC.Verif_strlib <> Gprog def
R11178:11182 VC.Verif_strlib <> Vprog def
R11815:11821 VST.floyd.entailer <> cstring def
R12977:12979 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R12985:12988 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R12984:12984 Coq.Numbers.BinNums <> Z ind
binder 12980:12980 <> i:46
R12989:12994 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R13017:13020 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R12996:12999 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R13001:13003 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R13000:13000 VC.Verif_strlib <> i:46 var
R13000:13000 VC.Verif_strlib <> i:46 var
R13013:13015 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13004:13010 Coq.ZArith.Zcomplements <> Zlength def
R13021:13027 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R13041:13042 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R13076:13079 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R13028:13031 VST.floyd.canon <> temp constr
R13033:13036 VC.strlib <> _str def
R13043:13046 VST.floyd.canon <> temp constr
R13048:13049 VC.strlib <> _i def
R13052:13058 compcert.common.Values <> Vptrofs def
R13061:13071 compcert.lib.Integers Ptrofs repr def
R13073:13073 VC.Verif_strlib <> i:46 var
R13080:13084 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R13172:13172 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R13085:13091 VST.floyd.field_at <> data_at def
R13097:13102 compcert.export.Ctypesdefs <> tarray def
R13104:13109 compcert.export.Ctypesdefs <> tschar def
R13121:13123 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13112:13118 Coq.ZArith.Zcomplements <> Zlength def
R13139:13141 Coq.Lists.List <> map def
R13151:13154 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13155:13155 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13165:13165 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13156:13164 compcert.lib.Integers Byte zero def
R13143:13147 VST.floyd.functional_base <> Vbyte def
R12977:12979 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R12985:12988 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R12984:12984 Coq.Numbers.BinNums <> Z ind
binder 12980:12980 <> i:47
R12989:12994 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R13017:13020 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R12996:12999 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R13001:13003 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R13000:13000 VC.Verif_strlib <> i:47 var
R13000:13000 VC.Verif_strlib <> i:47 var
R13013:13015 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13004:13010 Coq.ZArith.Zcomplements <> Zlength def
R13021:13027 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R13041:13042 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R13076:13079 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R13028:13031 VST.floyd.canon <> temp constr
R13033:13036 VC.strlib <> _str def
R13043:13046 VST.floyd.canon <> temp constr
R13048:13049 VC.strlib <> _i def
R13052:13058 compcert.common.Values <> Vptrofs def
R13061:13071 compcert.lib.Integers Ptrofs repr def
R13073:13073 VC.Verif_strlib <> i:47 var
R13080:13084 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R13172:13172 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R13085:13091 VST.floyd.field_at <> data_at def
R13097:13102 compcert.export.Ctypesdefs <> tarray def
R13104:13109 compcert.export.Ctypesdefs <> tschar def
R13121:13123 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R13112:13118 Coq.ZArith.Zcomplements <> Zlength def
R13139:13141 Coq.Lists.List <> map def
R13151:13154 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R13155:13155 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13165:13165 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R13156:13164 compcert.lib.Integers Byte zero def
R13143:13147 VST.floyd.functional_base <> Vbyte def
R14025:14035 compcert.aarch64.Archi <> ptr64 def
R14485:14491 compcert.common.Values <> Vptrofs def
R14862:14876 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14856:14856 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14845:14855 compcert.aarch64.Archi <> ptr64 def
R14857:14861 Coq.Init.Datatypes <> false constr
binder 14884:14884 <> n:48
R14910:14912 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14887:14893 compcert.common.Values <> Vptrofs def
R14896:14906 compcert.lib.Integers Ptrofs repr def
R14908:14908 VC.Verif_strlib <> n:48 var
R14913:14916 compcert.common.Values <> Vint constr
R14919:14926 compcert.lib.Integers Int repr def
R14928:14928 VC.Verif_strlib <> n:48 var
R14862:14876 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14856:14856 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14845:14855 compcert.aarch64.Archi <> ptr64 def
R14857:14861 Coq.Init.Datatypes <> false constr
binder 14884:14884 <> n:49
R14910:14912 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14887:14893 compcert.common.Values <> Vptrofs def
R14896:14906 compcert.lib.Integers Ptrofs repr def
R14908:14908 VC.Verif_strlib <> n:49 var
R14913:14916 compcert.common.Values <> Vint constr
R14919:14926 compcert.lib.Integers Int repr def
R14928:14928 VC.Verif_strlib <> n:49 var
prf 15709:15726 <> strcpy_then_clause
R15744:15748 VST.msl.shares <> share def
binder 15739:15741 <> wsh:50
R15758:15760 compcert.common.Values <> val ind
binder 15752:15755 <> dest:51
R15767:15767 Coq.Numbers.BinNums <> Z ind
binder 15764:15764 <> n:52
R15774:15777 Coq.Init.Datatypes <> list ind
R15779:15782 compcert.lib.Integers <> byte abbrev
binder 15771:15771 <> s:53
R15801:15806 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15797:15799 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R15788:15794 Coq.ZArith.Zcomplements <> Zlength def
R15796:15796 VC.Verif_strlib <> s:53 var
R15800:15800 VC.Verif_strlib <> n:52 var
R15823:15830 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15807:15808 Coq.Init.Logic <> ::type_scope:'~'_x not
R15809:15810 Coq.Lists.List <> In def
R15822:15822 VC.Verif_strlib <> s:53 var
R15812:15820 compcert.lib.Integers Byte zero def
R16048:16054 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R15831:15837 VST.floyd.field_at <> data_at def
R15839:15841 VC.Verif_strlib <> wsh:50 var
R15844:15849 compcert.export.Ctypesdefs <> tarray def
R15851:15856 compcert.export.Ctypesdefs <> tschar def
R15858:15858 VC.Verif_strlib <> n:52 var
R15903:15913 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R15868:15870 Coq.Lists.List <> map def
R15879:15885 VST.zlist.sublist <> sublist def
R15901:15901 VC.Verif_strlib <> s:53 var
R15890:15896 Coq.ZArith.Zcomplements <> Zlength def
R15898:15898 VC.Verif_strlib <> s:53 var
R15872:15876 VST.floyd.functional_base <> Vbyte def
R15914:15921 VST.zlist.sublist <> upd_Znth def
R15968:15971 compcert.common.Values <> Vint constr
R15974:15981 compcert.lib.Integers Int repr def
R15984:15994 compcert.lib.Integers Byte signed def
R15997:16000 VST.zlist.sublist <> Znth def
R16016:16019 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16015:16015 VC.Verif_strlib <> s:53 var
R16020:16020 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R16030:16030 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R16021:16029 compcert.lib.Integers Byte zero def
R16003:16009 Coq.ZArith.Zcomplements <> Zlength def
R16011:16011 VC.Verif_strlib <> s:53 var
R15926:15932 VST.zlist.sublist <> Zrepeat def
R15943:15945 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R15942:15942 VC.Verif_strlib <> n:52 var
R15946:15952 Coq.ZArith.Zcomplements <> Zlength def
R15954:15954 VC.Verif_strlib <> s:53 var
R15934:15939 compcert.common.Values <> Vundef constr
R16044:16047 VC.Verif_strlib <> dest:51 var
R16055:16061 VST.floyd.field_at <> data_at def
R16063:16065 VC.Verif_strlib <> wsh:50 var
R16068:16073 compcert.export.Ctypesdefs <> tarray def
R16075:16080 compcert.export.Ctypesdefs <> tschar def
R16082:16082 VC.Verif_strlib <> n:52 var
R16122:16138 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16094:16096 Coq.Lists.List <> map def
R16106:16109 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16105:16105 VC.Verif_strlib <> s:53 var
R16110:16110 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R16120:16120 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R16111:16119 compcert.lib.Integers Byte zero def
R16098:16102 VST.floyd.functional_base <> Vbyte def
R16139:16145 VST.zlist.sublist <> Zrepeat def
R16156:16159 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16173:16173 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16155:16155 VC.Verif_strlib <> n:52 var
R16169:16171 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16160:16166 Coq.ZArith.Zcomplements <> Zlength def
R16168:16168 VC.Verif_strlib <> s:53 var
R16147:16152 compcert.common.Values <> Vundef constr
R16185:16188 VC.Verif_strlib <> dest:51 var
R16212:16224 VST.msl.log_normalize <> derives_refl' thm
R16212:16224 VST.msl.log_normalize <> derives_refl' thm
R16242:16252 VST.zlist.sublist <> Zrepeat_app thm
R16301:16313 VST.zlist.sublist <> upd_Znth_app1 thm
R16365:16373 VST.zlist.sublist <> app_Znth2 thm
R16429:16439 VST.zlist.sublist <> Znth_0_cons thm
prf 16645:16662 <> strcpy_else_clause
binder 16672:16674 <> wsh:54
binder 16676:16679 <> dest:55
binder 16681:16681 <> n:56
binder 16683:16683 <> s:57
binder 16685:16685 <> i:58
R16703:16708 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16699:16701 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x not
R16690:16696 Coq.ZArith.Zcomplements <> Zlength def
R16698:16698 VC.Verif_strlib <> s:57 var
R16702:16702 VC.Verif_strlib <> n:56 var
R16725:16730 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16709:16710 Coq.Init.Logic <> ::type_scope:'~'_x not
R16711:16712 Coq.Lists.List <> In def
R16724:16724 VC.Verif_strlib <> s:57 var
R16714:16722 compcert.lib.Integers Byte zero def
R16753:16758 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16732:16735 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R16737:16739 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R16736:16736 VC.Verif_strlib <> i:58 var
R16736:16736 VC.Verif_strlib <> i:58 var
R16749:16751 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R16740:16746 Coq.ZArith.Zcomplements <> Zlength def
R16748:16748 VC.Verif_strlib <> s:57 var
R16797:16805 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16784:16787 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R16759:16762 VST.zlist.sublist <> Znth def
R16768:16771 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16767:16767 VC.Verif_strlib <> s:57 var
R16772:16772 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R16782:16782 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R16773:16781 compcert.lib.Integers Byte zero def
R16764:16764 VC.Verif_strlib <> i:58 var
R16788:16796 compcert.lib.Integers Byte zero def
R17009:17015 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R16806:16812 VST.floyd.field_at <> data_at def
R16814:16816 VC.Verif_strlib <> wsh:54 var
R16819:16824 compcert.export.Ctypesdefs <> tarray def
R16826:16831 compcert.export.Ctypesdefs <> tschar def
R16833:16833 VC.Verif_strlib <> n:56 var
R16843:16850 VST.zlist.sublist <> upd_Znth def
R16945:16948 compcert.common.Values <> Vint constr
R16951:16958 compcert.lib.Integers Int repr def
R16961:16971 compcert.lib.Integers Byte signed def
R16974:16977 VST.zlist.sublist <> Znth def
R16983:16986 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16982:16982 VC.Verif_strlib <> s:57 var
R16987:16987 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R16997:16997 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R16988:16996 compcert.lib.Integers Byte zero def
R16979:16979 VC.Verif_strlib <> i:58 var
R16880:16906 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R16855:16857 Coq.Lists.List <> map def
R16866:16872 VST.zlist.sublist <> sublist def
R16878:16878 VC.Verif_strlib <> s:57 var
R16876:16876 VC.Verif_strlib <> i:58 var
R16859:16863 VST.floyd.functional_base <> Vbyte def
R16907:16913 VST.zlist.sublist <> Zrepeat def
R16924:16926 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R16923:16923 VC.Verif_strlib <> n:56 var
R16927:16927 VC.Verif_strlib <> i:58 var
R16915:16920 compcert.common.Values <> Vundef constr
R16852:16852 VC.Verif_strlib <> i:58 var
R17005:17008 VC.Verif_strlib <> dest:55 var
R17016:17022 VST.floyd.field_at <> data_at def
R17024:17026 VC.Verif_strlib <> wsh:54 var
R17029:17034 compcert.export.Ctypesdefs <> tarray def
R17036:17041 compcert.export.Ctypesdefs <> tschar def
R17043:17043 VC.Verif_strlib <> n:56 var
R17084:17098 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17053:17055 Coq.Lists.List <> map def
R17064:17070 VST.zlist.sublist <> sublist def
R17082:17082 VC.Verif_strlib <> s:57 var
R17076:17078 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17075:17075 VC.Verif_strlib <> i:58 var
R17057:17061 VST.floyd.functional_base <> Vbyte def
R17099:17105 VST.zlist.sublist <> Zrepeat def
R17116:17119 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17125:17125 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17115:17115 VC.Verif_strlib <> n:56 var
R17121:17123 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17120:17120 VC.Verif_strlib <> i:58 var
R17107:17112 compcert.common.Values <> Vundef constr
R17129:17132 VC.Verif_strlib <> dest:55 var
R17156:17168 VST.msl.log_normalize <> derives_refl' thm
R17156:17168 VST.msl.log_normalize <> derives_refl' thm
prf 17571:17592 <> data_at_Vundef_example
binder 17604:17604 <> i:59
binder 17606:17606 <> n:60
binder 17608:17609 <> sh:61
binder 17611:17611 <> p:62
R17628:17633 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17619:17622 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R17624:17626 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R17623:17623 VC.Verif_strlib <> i:59 var
R17623:17623 VC.Verif_strlib <> i:59 var
R17627:17627 VC.Verif_strlib <> n:60 var
R17749:17767 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R17634:17640 VST.floyd.field_at <> data_at def
R17642:17643 VC.Verif_strlib <> sh:61 var
R17646:17651 compcert.export.Ctypesdefs <> tarray def
R17653:17658 compcert.export.Ctypesdefs <> tschar def
R17660:17660 VC.Verif_strlib <> n:60 var
R17705:17721 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17674:17680 VST.zlist.sublist <> Zrepeat def
R17702:17702 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17701:17701 VC.Verif_strlib <> i:59 var
R17683:17687 VST.floyd.functional_base <> Vbyte def
R17689:17697 compcert.lib.Integers Byte zero def
R17722:17728 VST.zlist.sublist <> Zrepeat def
R17739:17740 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17744:17744 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17738:17738 VC.Verif_strlib <> n:60 var
R17742:17742 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R17741:17741 VC.Verif_strlib <> i:59 var
R17730:17735 compcert.common.Values <> Vundef constr
R17748:17748 VC.Verif_strlib <> p:62 var
R17768:17774 VST.floyd.field_at <> data_at def
R17776:17777 VC.Verif_strlib <> sh:61 var
R17780:17785 compcert.export.Ctypesdefs <> tarray def
R17787:17792 compcert.export.Ctypesdefs <> tschar def
R17794:17794 VC.Verif_strlib <> n:60 var
R17835:17851 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R17808:17814 VST.zlist.sublist <> Zrepeat def
R17834:17834 VC.Verif_strlib <> i:59 var
R17817:17821 VST.floyd.functional_base <> Vbyte def
R17823:17831 compcert.lib.Integers Byte zero def
R17852:17858 VST.zlist.sublist <> Zrepeat def
R17869:17869 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R17868:17868 VC.Verif_strlib <> n:60 var
R17870:17870 VC.Verif_strlib <> i:59 var
R17860:17865 compcert.common.Values <> Vundef constr
R17874:17874 VC.Verif_strlib <> p:62 var
R18201:18213 VST.msl.log_normalize <> derives_refl' thm
R18201:18213 VST.msl.log_normalize <> derives_refl' thm
R18236:18246 VST.zlist.sublist <> Zrepeat_app thm
R18236:18246 VST.zlist.sublist <> Zrepeat_app thm
R18236:18246 VST.zlist.sublist <> Zrepeat_app thm
R18266:18266 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18277:18280 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18288:18288 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18282:18283 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18287:18287 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18285:18285 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18266:18266 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18277:18280 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18288:18288 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18282:18283 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18287:18287 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18285:18285 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18310:18320 VST.zlist.sublist <> Zrepeat_app thm
R18310:18320 VST.zlist.sublist <> Zrepeat_app thm
R18310:18320 VST.zlist.sublist <> Zrepeat_app thm
R18339:18345 Coq.Lists.List <> app_ass abbrev
R18339:18345 Coq.Lists.List <> app_ass abbrev
R18339:18345 Coq.Lists.List <> app_ass abbrev
R18339:18345 Coq.Lists.List <> app_ass abbrev
prf 18493:18514 <> data_at_Vundef_example
binder 18526:18526 <> i:63
binder 18528:18528 <> n:64
binder 18530:18531 <> sh:65
binder 18533:18533 <> p:66
R18550:18555 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18541:18544 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R18546:18548 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R18545:18545 VC.Verif_strlib <> i:63 var
R18545:18545 VC.Verif_strlib <> i:63 var
R18549:18549 VC.Verif_strlib <> n:64 var
R18671:18689 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R18556:18562 VST.floyd.field_at <> data_at def
R18564:18565 VC.Verif_strlib <> sh:65 var
R18568:18573 compcert.export.Ctypesdefs <> tarray def
R18575:18580 compcert.export.Ctypesdefs <> tschar def
R18582:18582 VC.Verif_strlib <> n:64 var
R18627:18643 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18596:18602 VST.zlist.sublist <> Zrepeat def
R18624:18624 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18623:18623 VC.Verif_strlib <> i:63 var
R18605:18609 VST.floyd.functional_base <> Vbyte def
R18611:18619 compcert.lib.Integers Byte zero def
R18644:18650 VST.zlist.sublist <> Zrepeat def
R18661:18662 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18666:18666 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18660:18660 VC.Verif_strlib <> n:64 var
R18664:18664 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18663:18663 VC.Verif_strlib <> i:63 var
R18652:18657 compcert.common.Values <> Vundef constr
R18670:18670 VC.Verif_strlib <> p:66 var
R18690:18696 VST.floyd.field_at <> data_at def
R18698:18699 VC.Verif_strlib <> sh:65 var
R18702:18707 compcert.export.Ctypesdefs <> tarray def
R18709:18714 compcert.export.Ctypesdefs <> tschar def
R18716:18716 VC.Verif_strlib <> n:64 var
R18757:18773 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R18730:18736 VST.zlist.sublist <> Zrepeat def
R18756:18756 VC.Verif_strlib <> i:63 var
R18739:18743 VST.floyd.functional_base <> Vbyte def
R18745:18753 compcert.lib.Integers Byte zero def
R18774:18780 VST.zlist.sublist <> Zrepeat def
R18791:18791 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18790:18790 VC.Verif_strlib <> n:64 var
R18792:18792 VC.Verif_strlib <> i:63 var
R18782:18787 compcert.common.Values <> Vundef constr
R18797:18797 VC.Verif_strlib <> p:66 var
R18826:18836 VST.zlist.sublist <> Zrepeat_app thm
R18826:18836 VST.zlist.sublist <> Zrepeat_app thm
R18826:18836 VST.zlist.sublist <> Zrepeat_app thm
R18856:18856 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18867:18870 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18878:18878 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18872:18873 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18877:18877 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18875:18875 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18856:18856 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18867:18870 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18878:18878 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18872:18873 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18877:18877 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R18875:18875 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R18900:18910 VST.zlist.sublist <> Zrepeat_app thm
R18900:18910 VST.zlist.sublist <> Zrepeat_app thm
R18900:18910 VST.zlist.sublist <> Zrepeat_app thm
R18929:18935 Coq.Lists.List <> app_ass abbrev
R18929:18935 Coq.Lists.List <> app_ass abbrev
R18929:18935 Coq.Lists.List <> app_ass abbrev
R18929:18935 Coq.Lists.List <> app_ass abbrev
R18944:18968 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R19306:19330 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R19306:19330 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R19306:19330 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R19359:19383 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R19359:19383 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R19359:19383 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R19412:19436 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R19412:19436 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R19412:19436 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R19465:19489 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R19465:19489 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
R19465:19489 VST.floyd.field_compat <> split2_data_at_Tarray_app thm
prf 19590:19603 <> cancel_example
binder 19614:19615 <> sh:67
binder 19617:19617 <> i:68
binder 19619:19619 <> j:69
binder 19621:19621 <> p:70
binder 19623:19623 <> q:71
R19685:19690 VST.msl.seplog <> ::logic_derives:x_'|--'_x not
R19656:19658 VST.msl.seplog <> ::logic:x_'*'_x not
R19630:19636 VST.floyd.field_at <> data_at def
R19638:19639 VC.Verif_strlib <> sh:67 var
R19641:19644 compcert.export.Ctypesdefs <> tint def
R19647:19650 compcert.common.Values <> Vint constr
R19652:19652 VC.Verif_strlib <> i:68 var
R19655:19655 VC.Verif_strlib <> p:70 var
R19659:19665 VST.floyd.field_at <> data_at def
R19667:19668 VC.Verif_strlib <> sh:67 var
R19670:19673 compcert.export.Ctypesdefs <> tint def
R19676:19679 compcert.common.Values <> Vint constr
R19681:19681 VC.Verif_strlib <> j:69 var
R19684:19684 VC.Verif_strlib <> q:71 var
R19717:19719 VST.msl.seplog <> ::logic:x_'*'_x not
R19691:19697 VST.floyd.field_at <> data_at def
R19699:19700 VC.Verif_strlib <> sh:67 var
R19702:19705 compcert.export.Ctypesdefs <> tint def
R19708:19711 compcert.common.Values <> Vint constr
R19713:19713 VC.Verif_strlib <> i:68 var
R19716:19716 VC.Verif_strlib <> p:70 var
R19720:19726 VST.floyd.field_at <> data_at def
R19728:19729 VC.Verif_strlib <> sh:67 var
R19731:19734 compcert.export.Ctypesdefs <> tint def
R19737:19742 compcert.common.Values <> Vundef constr
R19745:19745 VC.Verif_strlib <> q:71 var
R19901:19914 VST.msl.seplog <> sepcon_derives meth
R19901:19914 VST.msl.seplog <> sepcon_derives meth
R19993:20004 VST.msl.seplog <> derives_refl meth
R19993:20004 VST.msl.seplog <> derives_refl meth
R20180:20199 VST.floyd.stronger <> stronger_default_val thm
R20180:20199 VST.floyd.stronger <> stronger_default_val thm
prf 20524:20534 <> body_strcpy
R20537:20546 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R20569:20579 VC.Verif_strlib <> strcpy_spec def
R20560:20567 VC.strlib <> f_strcpy def
R20554:20558 VC.Verif_strlib <> Gprog def
R20548:20552 VC.Verif_strlib <> Vprog def
R20754:20760 VST.floyd.entailer <> cstring def
R20762:20769 VST.floyd.entailer <> cstringn def
R20808:20810 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R20816:20819 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R20815:20815 Coq.Numbers.BinNums <> Z ind
binder 20811:20811 <> i:72
R20820:20825 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R20848:20851 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R20827:20830 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R20832:20834 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R20831:20831 VC.Verif_strlib <> i:72 var
R20831:20831 VC.Verif_strlib <> i:72 var
R20844:20846 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20835:20841 Coq.ZArith.Zcomplements <> Zlength def
R20852:20858 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R20892:20893 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R20909:20910 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R20924:20927 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R20859:20862 VST.floyd.canon <> temp constr
R20864:20865 VC.strlib <> _i def
R20868:20874 compcert.common.Values <> Vptrofs def
R20877:20887 compcert.lib.Integers Ptrofs repr def
R20889:20889 VC.Verif_strlib <> i:72 var
R20894:20897 VST.floyd.canon <> temp constr
R20899:20903 VC.strlib <> _dest def
R20911:20914 VST.floyd.canon <> temp constr
R20916:20919 VC.strlib <> _src def
R20928:20932 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R21029:21037 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R21116:21116 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R20933:20939 VST.floyd.field_at <> data_at def
R20946:20951 compcert.export.Ctypesdefs <> tarray def
R20953:20958 compcert.export.Ctypesdefs <> tschar def
R20997:21000 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20972:20974 Coq.Lists.List <> map def
R20983:20989 VST.zlist.sublist <> sublist def
R20993:20993 VC.Verif_strlib <> i:72 var
R20976:20980 VST.floyd.functional_base <> Vbyte def
R21001:21007 VST.zlist.sublist <> Zrepeat def
R21018:21020 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R21021:21021 VC.Verif_strlib <> i:72 var
R21009:21014 compcert.common.Values <> Vundef constr
R21038:21044 VST.floyd.field_at <> data_at def
R21051:21056 compcert.export.Ctypesdefs <> tarray def
R21058:21063 compcert.export.Ctypesdefs <> tschar def
R21075:21077 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21066:21072 Coq.ZArith.Zcomplements <> Zlength def
R21083:21085 Coq.Lists.List <> map def
R21095:21098 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R21099:21099 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21109:21109 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21100:21108 compcert.lib.Integers Byte zero def
R21087:21091 VST.floyd.functional_base <> Vbyte def
R20808:20810 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R20816:20819 VST.msl.seplog <> ::logic:'EX'_x_'..'_x_','_x not
R20815:20815 Coq.Numbers.BinNums <> Z ind
binder 20811:20811 <> i:73
R20820:20825 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R20848:20851 VST.floyd.canon <> :::'PROP'_'('_x_';'_'..'_';'_x_')'_x not
R20827:20830 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R20832:20834 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R20831:20831 VC.Verif_strlib <> i:73 var
R20831:20831 VC.Verif_strlib <> i:73 var
R20844:20846 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R20835:20841 Coq.ZArith.Zcomplements <> Zlength def
R20852:20858 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R20892:20893 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R20909:20910 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R20924:20927 VST.floyd.canon <> ::assert3:'LOCAL'_'('_x_';'_'..'_';'_x_')'_x not
R20859:20862 VST.floyd.canon <> temp constr
R20864:20865 VC.strlib <> _i def
R20868:20874 compcert.common.Values <> Vptrofs def
R20877:20887 compcert.lib.Integers Ptrofs repr def
R20889:20889 VC.Verif_strlib <> i:73 var
R20894:20897 VST.floyd.canon <> temp constr
R20899:20903 VC.strlib <> _dest def
R20911:20914 VST.floyd.canon <> temp constr
R20916:20919 VC.strlib <> _src def
R20928:20932 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R21029:21037 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R21116:21116 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R20933:20939 VST.floyd.field_at <> data_at def
R20946:20951 compcert.export.Ctypesdefs <> tarray def
R20953:20958 compcert.export.Ctypesdefs <> tschar def
R20997:21000 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20972:20974 Coq.Lists.List <> map def
R20983:20989 VST.zlist.sublist <> sublist def
R20993:20993 VC.Verif_strlib <> i:73 var
R20976:20980 VST.floyd.functional_base <> Vbyte def
R21001:21007 VST.zlist.sublist <> Zrepeat def
R21018:21020 Coq.ZArith.BinInt <> ::Z_scope:x_'-'_x not
R21021:21021 VC.Verif_strlib <> i:73 var
R21009:21014 compcert.common.Values <> Vundef constr
R21038:21044 VST.floyd.field_at <> data_at def
R21051:21056 compcert.export.Ctypesdefs <> tarray def
R21058:21063 compcert.export.Ctypesdefs <> tschar def
R21075:21077 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R21066:21072 Coq.ZArith.Zcomplements <> Zlength def
R21083:21085 Coq.Lists.List <> map def
R21095:21098 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R21099:21099 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21109:21109 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21100:21108 compcert.lib.Integers Byte zero def
R21087:21091 VST.floyd.functional_base <> Vbyte def
def 21775:21794 <> stringlit_1_contents
R21805:21808 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R21799:21804 VC.Verif_strlib <> Hello' def
R21809:21809 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21819:21819 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21810:21818 compcert.lib.Integers Byte zero def
def 21834:21857 <> example_call_strcpy_spec
R21863:21870 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R21891:21893 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R21871:21890 VC.strlib <> _example_call_strcpy def
R21894:21898 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R21901:21902 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R21910:21925 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R22025:22034 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R22039:22045 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R22035:22038 compcert.export.Ctypesdefs <> tint def
R21903:21909 VST.veric.SeparationLogic <> globals def
binder 21899:21900 <> gv:74
R21926:21937 VST.floyd.canon <> ::assert:'PROP'_'()'_x not
R21938:21946 VST.floyd.canon <> ::assert3:'PARAMS'_'()'_x not
R21947:21955 VST.floyd.canon <> ::assert4:'GLOBALS'_'('_x_';'_'..'_';'_x_')'_x not
R21958:21963 VST.floyd.canon <> ::assert4:'GLOBALS'_'('_x_';'_'..'_';'_x_')'_x not
R21956:21957 VC.Verif_strlib <> gv:74 var
R21964:21968 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R22024:22024 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R21969:21975 VST.floyd.entailer <> cstring def
R22006:22007 VC.Verif_strlib <> gv:74 var
R22009:22022 VC.strlib <> ___stringlit_1 def
R21988:21991 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R21982:21987 VC.Verif_strlib <> Hello' def
R21992:21992 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R22002:22002 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R21993:22001 compcert.lib.Integers Byte zero def
R21977:21979 VST.veric.shares <> Ews def
binder 21899:21900 <> gv:75
R22046:22057 VST.floyd.canon <> ::assert:'PROP'_'()'_x not
R22058:22065 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R22118:22123 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R22066:22069 compcert.common.Values <> Vint constr
R22072:22079 compcert.lib.Integers Int repr def
R22082:22087 Coq.ZArith.BinInt Z of_N def
R22090:22105 Coq.Strings.Ascii <> N_of_ascii def
R22124:22128 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R22184:22184 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R22129:22135 VST.floyd.entailer <> cstring def
R22166:22167 VC.Verif_strlib <> gv:75 var
R22169:22182 VC.strlib <> ___stringlit_1 def
R22148:22151 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R22142:22147 VC.Verif_strlib <> Hello' def
R22152:22152 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R22162:22162 Coq.Lists.List ListNotations ::list_scope:'['_x_']' not
R22153:22161 compcert.lib.Integers Byte zero def
R22137:22139 VST.veric.shares <> Ews def
prf 22194:22217 <> body_example_call_strcpy
R22220:22229 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R22275:22298 VC.Verif_strlib <> example_call_strcpy_spec def
R22253:22273 VC.strlib <> f_example_call_strcpy def
R22237:22241 VC.Verif_strlib <> Gprog def
R22231:22235 VC.Verif_strlib <> Vprog def
prf 22847:22857 <> body_strcmp
R22860:22869 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R22892:22902 VC.Verif_strlib <> strcmp_spec def
R22883:22890 VC.strlib <> f_strcmp def
R22877:22881 VC.Verif_strlib <> Gprog def
R22871:22875 VC.Verif_strlib <> Vprog def
