DIGEST d7af2bf635d39c2f115d1d96d78d2769
FVC.VSU_main
R1985:2003 VST.floyd.proofauto <> <> lib
R2021:2033 VST.floyd.VSU <> <> lib
R2051:2058 VC.main2 <> <> lib
R2069:2077 VC.stdlib <> <> lib
R2079:2087 VC.stack2 <> <> lib
R2089:2098 VC.triang2 <> <> lib
R2109:2122 VC.Spec_stdlib <> <> lib
R2124:2136 VC.Spec_stack <> <> lib
R2138:2151 VC.Spec_triang <> <> lib
R2543:2555 VC.VSU_stdlib <> <> lib
R2557:2568 VC.VSU_stack <> <> lib
R2570:2582 VC.VSU_triang <> <> lib
inst 2605:2613 <> CompSpecs
R2617:2625 VST.veric.compspecs <> compspecs class
R2643:2646 VC.main2 <> prog def
def 3150:3150 <> M
R3154:3178 VC.Spec_stdlib <> MallocFreeAPD rec
R3183:3194 VC.VSU_stdlib <> M prfax
def 3208:3212 <> STACK
R3216:3234 VC.Spec_stack <> StackAPD rec
R3239:3253 VC.VSU_stack <> STACK def
R3255:3255 VC.VSU_main <> M def
def 3269:3276 <> stackVSU
R3281:3298 VC.VSU_stack <> StackVSU thm
R3300:3300 VC.VSU_main <> M def
def 3314:3322 <> triangVSU
R3327:3346 VC.VSU_triang <> TriangVSU prfax
R3350:3354 VC.VSU_main <> STACK def
R3348:3348 VC.VSU_main <> M def
R4575:4585 VST.floyd.Component <> VSU_Externs def
R4587:4594 VC.VSU_main <> stackVSU def
R4621:4631 VST.floyd.Component <> VSU_Imports def
R4633:4640 VC.VSU_main <> stackVSU def
R4682:4692 VST.floyd.Component <> VSU_Exports def
R4694:4701 VC.VSU_main <> stackVSU def
R4745:4755 VST.floyd.Component <> VSU_Externs def
R4757:4765 VC.VSU_main <> triangVSU def
R4792:4802 VST.floyd.Component <> VSU_Imports def
R4804:4812 VC.VSU_main <> triangVSU def
R4855:4865 VST.floyd.Component <> VSU_Exports def
R4867:4875 VC.VSU_main <> triangVSU def
def 4984:4998 <> stacktriangVSU1
R5018:5025 VC.VSU_main <> stackVSU def
R5027:5035 VC.VSU_main <> triangVSU def
R5447:5457 VST.floyd.Component <> VSU_Externs def
R5459:5473 VC.VSU_main <> stacktriangVSU1 def
R5501:5511 VST.floyd.Component <> VSU_Imports def
R5513:5527 VC.VSU_main <> stacktriangVSU1 def
R5570:5580 VST.floyd.Component <> VSU_Exports def
R5582:5596 VC.VSU_main <> stacktriangVSU1 def
def 6199:6212 <> stacktriangVSU
R6218:6233 VST.floyd.VSU <> privatizeExports thm
R6253:6253 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R6270:6271 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R6284:6285 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R6297:6297 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R6254:6269 VC.stack2 <> _newstack def
R6272:6283 VC.stack2 <> _push def
R6286:6296 VC.stack2 <> _pop def
R6235:6249 VC.VSU_main <> stacktriangVSU1 def
R6385:6395 VST.floyd.Component <> VSU_Exports def
R6397:6410 VC.VSU_main <> stacktriangVSU def
R6489:6499 VST.floyd.Component <> VSU_Externs def
R6501:6524 VC.VSU_stdlib <> MallocFreeVSU def
R6565:6575 VST.floyd.Component <> VSU_Imports def
R6577:6600 VC.VSU_stdlib <> MallocFreeVSU def
R6626:6636 VST.floyd.Component <> VSU_Exports def
R6638:6661 VC.VSU_stdlib <> MallocFreeVSU def
def 7229:7235 <> coreVSU
R7244:7259 VST.floyd.VSU <> privatizeExports thm
R7322:7322 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R7337:7338 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R7351:7352 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R7365:7365 Coq.Lists.List ListNotations ::list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R7323:7336 VC.stdlib <> _malloc def
R7339:7350 VC.stdlib <> _free def
R7353:7364 VC.stdlib <> _exit def
R7279:7292 VC.VSU_main <> stacktriangVSU def
R7294:7317 VC.VSU_stdlib <> MallocFreeVSU def
R7384:7394 VST.floyd.Component <> VSU_Externs def
R7396:7402 VC.VSU_main <> coreVSU def
R7445:7455 VST.floyd.Component <> VSU_Imports def
R7457:7463 VC.VSU_main <> coreVSU def
R7491:7501 VST.floyd.Component <> VSU_Exports def
R7503:7509 VC.VSU_main <> coreVSU def
def 8077:8086 <> whole_prog
R8111:8116 VST.floyd.VSU <> QPprog def
R8118:8121 VC.main2 <> prog def
R8125:8132 VST.floyd.Component <> VSU_prog def
R8134:8140 VC.VSU_main <> coreVSU def
R8111:8116 VST.floyd.VSU <> QPprog def
R8118:8121 VC.main2 <> prog def
R8125:8132 VST.floyd.Component <> VSU_prog def
R8134:8140 VC.VSU_main <> coreVSU def
def 9112:9120 <> main_spec
R9126:9133 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R9139:9140 VST.floyd.client_lemmas <> :::'DECLARE'_x_x not
R9134:9138 VC.main2 <> _main def
R9141:9145 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R9148:9149 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R9157:9166 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R9192:9199 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R9204:9210 VST.floyd.client_lemmas <> ::funspec_scope:'WITH'_x_':'_x_'PRE'_'['_']'_x_'POST'_'['_x_']'_x not
R9200:9203 compcert.export.Ctypesdefs <> tint def
R9150:9156 VST.veric.SeparationLogic <> globals def
binder 9146:9147 <> gv:1
R9167:9174 VST.floyd.VSU <> main_pre def
R9190:9191 VC.VSU_main <> gv:1 var
R9187:9188 Coq.Init.Datatypes <> tt constr
R9176:9185 VC.VSU_main <> whole_prog def
binder 9146:9147 <> gv:2
R9211:9221 VST.floyd.canon <> ::assert:'PROP'_'()'_x not
R9222:9229 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R9248:9253 VST.floyd.canon <> ::assert3:'RETURN'_'('_x_')'_x not
R9230:9233 compcert.common.Values <> Vint constr
R9236:9243 compcert.lib.Integers Int repr def
R9254:9257 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R9260:9260 VST.floyd.canon <> ::assert5:'SEP'_'('_x_';'_'..'_';'_x_')' not
R9258:9259 VST.msl.seplog <> TT meth
inst 9682:9690 <> Compspecs
R9693:9701 VST.veric.compspecs <> compspecs class
R9719:9731 VC.main2 <> prog def
def 10115:10119 <> Vprog
R10122:10129 VST.veric.mpred <> varspecs def
R10134:10143 VST.floyd.Component <> QPvarspecs def
R10145:10154 VC.VSU_main <> whole_prog def
def 10295:10306 <> Main_imports
R10309:10316 VST.veric.mpred <> funspecs def
R10321:10341 VC.Spec_triang <> TriangASI def
R10343:10343 VC.VSU_main <> M def
def 10357:10366 <> Main_Gprog
R10370:10377 VST.veric.mpred <> funspecs def
R10391:10394 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10382:10390 VC.VSU_main <> main_spec def
R10395:10406 VC.VSU_main <> Main_imports def
prf 10780:10788 <> body_main
R10791:10800 VST.floyd.SeparationLogicAsLogicSoundness MainTheorem.CSHL_PracticalLogic.CSHL_MinimumLogic.CSHL_Defs semax_body def
R10826:10834 VC.VSU_main <> main_spec def
R10819:10824 VC.main2 <> f_main def
R10808:10817 VC.VSU_main <> Main_Gprog def
R10802:10806 VC.VSU_main <> Vprog def
R10849:10855 VC.VSU_main <> coreVSU def
R10849:10855 VC.VSU_main <> coreVSU def
R10879:10879 VC.VSU_main <> M def
R10879:10879 VC.VSU_main <> M def
def 13114:13121 <> MainComp
R13125:13136 VST.floyd.VSU <> MainCompType def
R13196:13198 VST.msl.seplog <> emp meth
R13181:13183 Coq.Init.Datatypes <> snd def
R13185:13193 VC.VSU_main <> main_spec def
R13169:13178 VC.VSU_main <> whole_prog def
R13161:13167 VC.VSU_main <> coreVSU def
R13138:13140 Coq.Init.Datatypes <> nil constr
R13155:13158 VC.main2 <> prog def
R13220:13223 VC.main2 <> prog def
R13385:13393 VC.VSU_main <> body_main prfax
prf 14094:14102 <> WholeComp
R14105:14117 VST.floyd.VSU <> WholeCompType def
R14127:14134 VC.VSU_main <> MainComp def
R14119:14125 VC.VSU_main <> coreVSU def
R14271:14332 VST.veric.SeparationLogicSoundness VericMinimumSeparationLogic.CSHL_Defs <> mod
R14350:14375 VST.veric.SequentialClight <> <> lib
R14745:14754 VST.veric.SeparationLogicSoundness VericMinimumSeparationLogic.CSHL_Defs semax_prog def
R15192:15226 VST.veric.SequentialClight <> whole_program_sequential_safety_ext thm
prf 15758:15770 <> WholeProgSafe
R15773:15789 VST.floyd.VSU <> WholeProgSafeType def
R15801:15802 Coq.Init.Datatypes <> tt constr
R15791:15799 VC.VSU_main <> WholeComp thm
R15929:15945 VST.floyd.VSU <> WholeProgSafeType def
R15957:15958 Coq.Init.Datatypes <> tt constr
R15947:15955 VC.VSU_main <> WholeComp thm
